@model DoubleGis.Erm.BLFlex.UI.Web.Mvc.Global.Models.Russia.LegalPersonViewModel

@{
    Layout = "../../Shared/_CardLayout.cshtml";
}

@section CardScripts
{
    <script src="/Scripts/Ext.DoubleGis.UI.LegalPerson.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Russia/Ext.DoubleGis.UI.LegalPerson.Russia.js?@ThisAssembly.Build" type="text/javascript"></script>

    <style type="text/css">
        div.label-wrapper
        {
            width: 150px !important;
        }
    </style>    
}

@section CardBody
{
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.ReplicationCode)
    @Html.HiddenFor(m => m.IsInSyncWith1C)
    @Html.HiddenFor(m => m.HasProfiles)

    <div class="Tab" id="MainTab" title="@BLResources.GeneralTabTitle">
        <div class="row-wrapper">
            @Html.TemplateField(m => m.LegalName, FieldFlex.lone)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Client, FieldFlex.lone, new LookupSettings { EntityName = EntityType.Instance.Client(), ReadOnly = true})
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.ShortName, FieldFlex.twins)
            @Html.TemplateField(m => m.LegalPersonType, FieldFlex.twins, null, EnumResources.ResourceManager)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Inn, FieldFlex.twins)
            @Html.TemplateField(m => m.Kpp, FieldFlex.twins)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.BusinessmanInn, FieldFlex.twins)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.PassportSeries, FieldFlex.twins)
            @Html.TemplateField(m => m.PassportNumber, FieldFlex.twins)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.PassportIssuedBy, FieldFlex.lone)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.LegalAddress, FieldFlex.lone)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.RegistrationAddress, FieldFlex.lone)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Comment, FieldFlex.lone, new Dictionary<string, object>{{"rows", 3}})
        </div>
    </div>
}