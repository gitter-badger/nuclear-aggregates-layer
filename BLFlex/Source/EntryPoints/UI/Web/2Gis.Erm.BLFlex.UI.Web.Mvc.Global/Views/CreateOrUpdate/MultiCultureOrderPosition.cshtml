
@model DoubleGis.Erm.BLFlex.UI.Web.Mvc.Global.Models.MultiCultureOrderPositionViewModel

@{
    Layout = "../Shared/_CardLayout.cshtml";
}

@section CardScripts
{
    <link rel="stylesheet" type="text/css" href="/Content/ext-ux-treegrid.css?@ThisAssembly.Build" />
    <link rel="stylesheet" type="text/css" href="/Content/order-position.css?@ThisAssembly.Build" />
    
    <script src="/Scripts/Ext.ux.TreeGridSorter.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Ext.ux.TreeGridColumnResizer.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Ext.ux.TreeGridNodeUI.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Ext.ux.TreeGridLoader.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Ext.ux.TreeGridColumns.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Ext.ux.TreeGrid.js?@ThisAssembly.Build" type="text/javascript"></script>
    
    <script src="/Scripts/Ext.DoubleGis.UI.OrderPosition.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Ext.DoubleGis.UI.OrderPosition.BusinessLogic.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Ext.DoubleGis.UI.OrderPosition.LinkingObject.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Ext.DoubleGis.UI.OrderPosition.AdvertisementController.js?@ThisAssembly.Build" type="text/javascript"></script>

    <style type="text/css">
        .display-wrapper .captionRadioDiv
        {
            padding-top: 0px;
        }
        
        div.label-wrapper
        {
            width: 140px;
        }
        
        div.Tab
        {
            padding: 0px;
        }
    </style>
}

@section CardBody
{
    <div class="Tab" id="MainTab" title="@BLResources.GeneralTabTitle">
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.OrderId)
        @Html.HiddenFor(m => m.OrderFirmId)
        @Html.HiddenFor(m => m.PriceId)
        @Html.HiddenFor(m => m.OrganizationUnitId)
        @Html.HiddenFor(m => m.IsLocked)
        @Html.HiddenFor(m => m.IsComposite)
        @Html.HiddenFor(m => m.DiscountSum)
        @Html.HiddenFor(m => m.DiscountPercent)
        @Html.HiddenFor(m => m.AdvertisementsJson)
        @Html.HiddenFor(m => m.MoneySignificantDigitsNumber)
        <table style="height: 100%; table-layout: fixed">
            <tr style="height: 250px">
                <td style="padding-right: 10px">
                    <div class="row-wrapper">
                        @Html.TemplateField(m => m.PricePosition, FieldFlex.lone, new LookupSettings { ShowReadOnlyCard = true, EntityName = EntityName.PricePosition, ExtendedInfo = "filterToParent=true&orderId={OrderId}", ParentEntityName = EntityName.Price, ParentIdPattern = "PriceId" })
                    </div>
                    <div class="row-wrapper">
                        @Html.TemplateField(m => m.PricePerUnit, FieldFlex.lone, new Dictionary<string, object> { { "class", "inputfields readonly" }, { "readonly", "true" }, { "maxlength", "18" } })
                    </div>
                    <div class="row-wrapper">
                        @Html.TemplateField(m => m.PricePerUnitWithVat, FieldFlex.lone, new Dictionary<string, object> { { "class", "inputfields readonly" }, { "maxlength", "18" }, { "readonly", "true" } })
                    </div>
                    <div class="row-wrapper">
                        @Html.TemplateField(m => m.Amount, FieldFlex.lone, new Dictionary<string, object> { { "class", "inputfields" }, { "maxlength", "8" } })
                    </div>
                    <div class="row-wrapper">
                        @Html.TemplateField(m => m.ShipmentPlan, FieldFlex.lone, new Dictionary<string, object> { { "class", "inputfields readonly"}, { "readonly", "true" } })
                    </div>
                    <div class="row-wrapper">
                        @Html.TemplateField(m => m.PayablePrice, FieldFlex.lone, new Dictionary<string, object> { { "class", "inputfields readonly" }, { "readonly", "true" } })
                    </div>
                    <div class="row-wrapper">
                        @Html.TemplateField(m => m.PayablePlan, FieldFlex.lone, new Dictionary<string, object> { { "id", "PayablePlan" }, { "class", "inputfields readonly" }, { "readonly", "true" }})
                    </div>
                </td>
                <td style="padding-left: 10px; padding-top: 14px; vertical-align: top">
                    <div class="row-wrapper" id="discountPercentOuter">
                        <div class="display-wrapper field-wrapper lone">
                            <div class="label-wrapper captionRadioDiv">
                                <span>
                                    @Html.RadioButtonFor(m => m.CalculateDiscountViaPercent, true, new Dictionary<string, object> { { "id", "CalculateDiscountViaPercentTrue" } })</span>
                                    @Html.Label("CalculateDiscountViaPercentTrue", MetadataResources.DiscountPercent)
                            </div>
                            <div class="input-wrapper">
                                @Html.TextBox("DiscountPercentText", string.Empty, new Dictionary<string, object> { { "class", "inputfields" }, { "maxlength", "18" } })
                                @Html.ValidationMessageFor(m => m.DiscountPercent, null, new Dictionary<string, object> { { "class", "error" } })
                            </div>
                        </div>
                    </div>
                    <div class="row-wrapper" id="discountSumOuter">
                        <div class="display-wrapper field-wrapper lone">
                            <div class="label-wrapper captionRadioDiv">
                                <span>
                                    @Html.RadioButtonFor(m => m.CalculateDiscountViaPercent, false, new Dictionary<string, object> { { "id", "CalculateDiscountViaPercentFalse" } })</span>
                                    @Html.Label("CalculateDiscountViaPercentFalse", MetadataResources.DiscountSum)
                            </div>
                            <div class="input-wrapper">
                                @Html.TextBox("DiscountSumText", string.Empty, new Dictionary<string, object> { { "class", "inputfields" }, { "maxlength", "18" } })
                                @Html.ValidationMessageFor(m => m.DiscountSum, null, new Dictionary<string, object> { { "class", "error" } } )
                            </div>
                        </div>
                    </div>
                    <div class="row-wrapper">
                        <div class="display-wrapper field-wrapper lone">
                            <div class="label-wrapper captionRadioDiv">
                                @Html.Label(MetadataResources.Platform)
                            </div>
                            <div class="input-wrapper">
                                @Html.TextBox("Platform", string.Empty, new Dictionary<string, object> { { "class", "inputfields readonly" }, { "maxlength", "18" }, { "readonly", "true" } })
                            </div>
                        </div>
                    </div>
                    <div class="row-wrapper">
                        @Html.TemplateField(m => m.Comment, FieldFlex.lone, new Dictionary<string, object> { { "class", "inputfields" }, { "style", "height:73px" }, { "rows", "5" } })
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <div id='linkingObjectContainer' style="width: 100%; height: 100%; overflow: hidden;
                        margin: 0px 5px 5px 5px">
                    </div>
                </td>
            </tr>
        </table>
    </div>
}

@RenderBody()