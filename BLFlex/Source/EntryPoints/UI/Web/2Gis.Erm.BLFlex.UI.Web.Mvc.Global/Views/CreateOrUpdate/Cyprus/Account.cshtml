@model DoubleGis.Erm.BLFlex.UI.Web.Mvc.Global.Models.Cyprus.CyprusAccountViewModel

@{
    Layout = "../../Shared/_CardLayout.cshtml";
}

@section CardScripts
{
    <style type="text/css">
        div.label-wrapper
        {
            width: 180px !important;
        }
    </style>           
}

@section CardBody
{
<div class="Tab" id="MainTab" title="@BLResources.GeneralTabTitle">
    @Html.HiddenFor(m => m.Id)

    @{
        var readonlyFieldHtmlAttributes = new Dictionary<string, object> { { "class", "readonly inputfields" }, { "readonly", "readonly" } };
    }
       
    <div class="row-wrapper">
        @Html.TemplateField(m => m.LegalPerson, FieldFlex.lone, new LookupSettings { EntityName = EntityType.Instance.LegalPerson(), ReadOnly = !Model.IsNew && !string.IsNullOrEmpty(Model.LegalPerson.Value) })
    </div>
    <div class="row-wrapper">
        @Html.TemplateField(m => m.BranchOfficeOrganizationUnit, FieldFlex.lone, new LookupSettings { EntityName = EntityType.Instance.BranchOfficeOrganizationUnit(), ReadOnly = !Model.IsNew && !string.IsNullOrEmpty(Model.BranchOfficeOrganizationUnit.Value) })
    </div>
    <div class="row-wrapper">
        @Html.TemplateField(m => m.AccountDetailBalance, FieldFlex.twins, readonlyFieldHtmlAttributes)
        @Html.TemplateField(m => m.Currency, FieldFlex.twins, new LookupSettings { EntityName = EntityType.Instance.Currency(), ReadOnly = true })
    </div>
    <div class="row-wrapper">
        @Html.TemplateField(m => m.LockDetailBalance, FieldFlex.twins, readonlyFieldHtmlAttributes)
        @Html.TemplateField(m => m.LegalPesonSyncCode1C, FieldFlex.twins, readonlyFieldHtmlAttributes)
    </div>
</div>
<div class="Tab" id="AdministrationTab" title="@BLResources.AdministrationTabTitle">
    @Html.SectionHead("adminHeader", BLResources.AdministrationTabTitle)
    @if (Model.IsCurated && Model.IsSecurityRoot)
    {
    <div class="row-wrapper">
        @Html.TemplateField(m=>m.Owner, FieldFlex.twins, new LookupSettings{EntityName = EntityType.Instance.User(), Disabled = !Model.OwnerCanBeChanged, Plugins = new[] { "new Ext.ux.LookupFieldOwner()" } })
    </div>
    }
    
    <div class="row-wrapper">
        @Html.TemplateField(m=>m.CreatedBy, FieldFlex.twins, new LookupSettings{EntityName = EntityType.Instance.User(), ReadOnly = true})
        @Html.TemplateField(m => m.CreatedOn, FieldFlex.twins, new DateTimeSettings { ReadOnly = true })
    </div>
    <div class="row-wrapper">
        @Html.TemplateField(m => m.ModifiedBy, FieldFlex.twins, new LookupSettings { EntityName = EntityType.Instance.User(), ReadOnly = true })
        @Html.TemplateField(m => m.ModifiedOn, FieldFlex.twins, new DateTimeSettings { ReadOnly = true })
    </div>
</div>   
}