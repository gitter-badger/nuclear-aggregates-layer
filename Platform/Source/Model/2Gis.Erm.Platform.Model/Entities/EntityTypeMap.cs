using System;
using System.Collections.Generic;

using DoubleGis.Erm.Platform.Model.Entities.Activity;
using DoubleGis.Erm.Platform.Model.Entities.Erm;
using DoubleGis.Erm.Platform.Model.Entities.Erm.Kazakhstan;
using DoubleGis.Erm.Platform.Model.Entities.Erm.Parts.Chile;
using DoubleGis.Erm.Platform.Model.Entities.Erm.Parts.Emirates;
using DoubleGis.Erm.Platform.Model.Entities.Erm.Parts.Russia;
using DoubleGis.Erm.Platform.Model.Entities.Erm.Parts.Ukraine;
using DoubleGis.Erm.Platform.Model.Entities.Security;

using NuClear.Model.Common.Entities;

namespace DoubleGis.Erm.Platform.Model.Entities
{
    public static class EntityTypeMap
    {
        private static readonly Dictionary<IEntityType, Type> TypeMap = new Dictionary<IEntityType, Type>
            {
                // ERM
                { EntityType.Instance.Deal(), typeof(Deal) },
                { EntityType.Instance.BranchOfficeOrganizationUnit(), typeof(BranchOfficeOrganizationUnit) },
                { EntityType.Instance.ChileBranchOfficeOrganizationUnitPart(), typeof(ChileBranchOfficeOrganizationUnitPart) },
                { EntityType.Instance.EmiratesBranchOfficeOrganizationUnitPart(), typeof(EmiratesBranchOfficeOrganizationUnitPart) },
                { EntityType.Instance.LegalPerson(), typeof(LegalPerson) },
                { EntityType.Instance.LegalPersonDeal(), typeof(LegalPersonDeal) },
                { EntityType.Instance.ChileLegalPersonPart(), typeof(ChileLegalPersonPart) },
                { EntityType.Instance.UkraineLegalPersonPart(), typeof(UkraineLegalPersonPart) },
                { EntityType.Instance.EmiratesLegalPersonPart(), typeof(EmiratesLegalPersonPart) },
                { EntityType.Instance.KazakhstanLegalPersonPart(), typeof(KazakhstanLegalPersonPart) },
                { EntityType.Instance.KazakhstanLegalPersonProfilePart(), typeof(KazakhstanLegalPersonProfilePart) },
                { EntityType.Instance.OperationType(), typeof(OperationType) },
                { EntityType.Instance.Order(), typeof(Order) },
                { EntityType.Instance.OrderPosition(), typeof(OrderPosition) },
                { EntityType.Instance.OrderProcessingRequest(), typeof(OrderProcessingRequest) },
                { EntityType.Instance.OrderProcessingRequestMessage(), typeof(OrderProcessingRequestMessage) },
                { EntityType.Instance.OrderFile(), typeof(OrderFile) },
                { EntityType.Instance.AccountDetail(), typeof(AccountDetail) },
                { EntityType.Instance.Price(), typeof(Price) },
                { EntityType.Instance.Firm(), typeof(Firm) },
                { EntityType.Instance.FirmDeal(), typeof(FirmDeal) },
                { EntityType.Instance.FirmAddress(), typeof(FirmAddress) },
                { EntityType.Instance.EmiratesFirmAddressPart(), typeof(EmiratesFirmAddressPart) },
                { EntityType.Instance.FirmContact(), typeof(FirmContact) },
                { EntityType.Instance.BranchOffice(), typeof(BranchOffice) },
                { EntityType.Instance.UkraineBranchOfficePart(), typeof(UkraineBranchOfficePart) },
                { EntityType.Instance.OrganizationUnit(), typeof(OrganizationUnit) },
                { EntityType.Instance.Project(), typeof(Project) },
                { EntityType.Instance.Client(), typeof(Client) },
                { EntityType.Instance.ClientLink(), typeof(ClientLink) },
                { EntityType.Instance.DenormalizedClientLink(), typeof(DenormalizedClientLink) },
                { EntityType.Instance.EmiratesClientPart(), typeof(EmiratesClientPart) },
                { EntityType.Instance.Bargain(), typeof(Bargain) },
                { EntityType.Instance.BargainType(), typeof(BargainType) },
                { EntityType.Instance.BargainFile(), typeof(BargainFile) },
                { EntityType.Instance.Currency(), typeof(Currency) },
                { EntityType.Instance.CurrencyRate(), typeof(CurrencyRate) },
                { EntityType.Instance.Platform(), typeof(Erm.Platform) },
                { EntityType.Instance.PositionCategory(), typeof(PositionCategory) },
                { EntityType.Instance.PricePosition(), typeof(PricePosition) },
                { EntityType.Instance.Account(), typeof(Account) },
                { EntityType.Instance.Limit(), typeof(Limit) },
                { EntityType.Instance.Position(), typeof(Position) },
                { EntityType.Instance.PositionChildren(), typeof(PositionChildren) },
                { EntityType.Instance.AssociatedPositionsGroup(), typeof(AssociatedPositionsGroup) },
                { EntityType.Instance.AssociatedPosition(), typeof(AssociatedPosition) },
                { EntityType.Instance.DeniedPosition(), typeof(DeniedPosition) },
                { EntityType.Instance.ContributionType(), typeof(ContributionType) },
                { EntityType.Instance.Category(), typeof(Category) },
                { EntityType.Instance.CategoryOrganizationUnit(), typeof(CategoryOrganizationUnit) },
                { EntityType.Instance.CategoryGroup(), typeof(CategoryGroup) },
                { EntityType.Instance.CategoryFirmAddress(), typeof(CategoryFirmAddress) },
                { EntityType.Instance.SalesModelCategoryRestriction(), typeof(SalesModelCategoryRestriction) },
                { EntityType.Instance.Country(), typeof(Country) },
                { EntityType.Instance.Advertisement(), typeof(Advertisement) },
                { EntityType.Instance.AdvertisementTemplate(), typeof(AdvertisementTemplate) },
                { EntityType.Instance.AdvertisementElement(), typeof(AdvertisementElement) },
                { EntityType.Instance.AdvertisementElementDenialReason(), typeof(AdvertisementElementDenialReason) },
                { EntityType.Instance.AdvertisementElementStatus(), typeof(AdvertisementElementStatus) },
                { EntityType.Instance.AdvertisementElementTemplate(), typeof(AdvertisementElementTemplate) },
                { EntityType.Instance.AdsTemplatesAdsElementTemplate(), typeof(AdsTemplatesAdsElementTemplate) },
                { EntityType.Instance.Bill(), typeof(Bill) },
                { EntityType.Instance.Lock(), typeof(Lock) },
                { EntityType.Instance.LockDetail(), typeof(LockDetail) },
                { EntityType.Instance.Contact(), typeof(Contact) },
                { EntityType.Instance.WithdrawalInfo(), typeof(WithdrawalInfo) },
                { EntityType.Instance.ReleaseInfo(), typeof(ReleaseInfo) },
                { EntityType.Instance.LocalMessage(), typeof(LocalMessage) },
                { EntityType.Instance.PrintFormTemplate(), typeof(PrintFormTemplate) },
                { EntityType.Instance.TimeZone(), typeof(Security.TimeZone) },
                { EntityType.Instance.UserTerritoriesOrganizationUnits(), typeof(UserTerritoriesOrganizationUnits) },
                { EntityType.Instance.File(), typeof(File) },
                { EntityType.Instance.OrderReleaseTotal(), typeof(OrderReleaseTotal) },
                { EntityType.Instance.ReleaseWithdrawal(), typeof(ReleaseWithdrawal) },
                { EntityType.Instance.OrderPositionAdvertisement(), typeof(OrderPositionAdvertisement) },
                { EntityType.Instance.Note(), typeof(Note) },
                { EntityType.Instance.Operation(), typeof(Operation) },
                { EntityType.Instance.MessageType(), typeof(MessageType) },
                { EntityType.Instance.LegalPersonProfile(), typeof(LegalPersonProfile) },
                { EntityType.Instance.ChileLegalPersonProfilePart(), typeof(ChileLegalPersonProfilePart) },
                { EntityType.Instance.RussiaLegalPersonProfilePart(), typeof(RussiaLegalPersonProfilePart) },
                { EntityType.Instance.UkraineLegalPersonProfilePart(), typeof(UkraineLegalPersonProfilePart) },
                { EntityType.Instance.EmiratesLegalPersonProfilePart(), typeof(EmiratesLegalPersonProfilePart) },
                { EntityType.Instance.AdditionalFirmService(), typeof(AdditionalFirmService) },
                { EntityType.Instance.Theme(), typeof(Theme) },
                { EntityType.Instance.ThemeCategory(), typeof(ThemeCategory) },
                { EntityType.Instance.ThemeOrganizationUnit(), typeof(ThemeOrganizationUnit) },
                { EntityType.Instance.ThemeTemplate(), typeof(ThemeTemplate) },
                { EntityType.Instance.ActionsHistory(), typeof(ActionsHistory) },
                { EntityType.Instance.ActionsHistoryDetail(), typeof(ActionsHistoryDetail) },
                { EntityType.Instance.CityPhoneZone(), typeof(CityPhoneZone) },
                { EntityType.Instance.Reference(), typeof(Reference) },
                { EntityType.Instance.ReferenceItem(), typeof(ReferenceItem) },
                { EntityType.Instance.CardRelation(), typeof(CardRelation) },
                { EntityType.Instance.DepCard(), typeof(DepCard) },
                { EntityType.Instance.FirmAddressService(), typeof(FirmAddressService) },
                { EntityType.Instance.ReleaseValidationResult(), typeof(ReleaseValidationResult) },
                { EntityType.Instance.ReleasesWithdrawalsPosition(), typeof(ReleasesWithdrawalsPosition) },
                { EntityType.Instance.Charge(), typeof(Charge) },
                { EntityType.Instance.ChargesHistory(), typeof(ChargesHistory) },
                { EntityType.Instance.Building(), typeof(Building) },

                // Activity subsystem
                { EntityType.Instance.Activity(), typeof(Activity.Activity) },
                { EntityType.Instance.Appointment(), typeof(Appointment) },
                { EntityType.Instance.AppointmentRegardingObject(), typeof(AppointmentRegardingObject) },
                { EntityType.Instance.AppointmentAttendee(), typeof(AppointmentAttendee) },
                { EntityType.Instance.AppointmentOrganizer(), typeof(AppointmentOrganizer) },
                { EntityType.Instance.Phonecall(), typeof(Phonecall) },
                { EntityType.Instance.PhonecallRegardingObject(), typeof(PhonecallRegardingObject) },
                { EntityType.Instance.PhonecallRecipient(), typeof(PhonecallRecipient) },
                { EntityType.Instance.Task(), typeof(Task) },
                { EntityType.Instance.TaskRegardingObject(), typeof(TaskRegardingObject) },
                { EntityType.Instance.Letter(), typeof(Letter) },
                { EntityType.Instance.LetterRegardingObject(), typeof(LetterRegardingObject) },
                { EntityType.Instance.LetterSender(), typeof(LetterSender) },
                { EntityType.Instance.LetterRecipient(), typeof(LetterRecipient) },

                // Security
                { EntityType.Instance.User(), typeof(User) },
                { EntityType.Instance.UserRole(), typeof(UserRole) },
                { EntityType.Instance.UserTerritory(), typeof(UserTerritory) },
                { EntityType.Instance.UserOrganizationUnit(), typeof(UserOrganizationUnit) },
                { EntityType.Instance.Department(), typeof(Department) },
                { EntityType.Instance.Role(), typeof(Role) },
                { EntityType.Instance.Territory(), typeof(Territory) },
                { EntityType.Instance.RolePrivilege(), typeof(RolePrivilege) },
                { EntityType.Instance.UserProfile(), typeof(UserProfile) },

                // Simplified
                { EntityType.Instance.NotificationProcessing(), typeof(NotificationProcessings) },
                { EntityType.Instance.NotificationEmail(), typeof(NotificationEmails) },
                { EntityType.Instance.NotificationAddress(), typeof(NotificationAddresses) },
                { EntityType.Instance.NotificationEmailCc(), typeof(NotificationEmailsCc) },
                { EntityType.Instance.NotificationEmailTo(), typeof(NotificationEmailsTo) },
                { EntityType.Instance.NotificationEmailAttachment(), typeof(NotificationEmailsAttachments) },
                { EntityType.Instance.FileWithContent(), typeof(FileWithContent) },
                { EntityType.Instance.HotClientRequest(), typeof(HotClientRequest) },
                { EntityType.Instance.PerformedBusinessOperation(), typeof(PerformedBusinessOperation) },
                { EntityType.Instance.PerformedOperationPrimaryProcessing(), typeof(PerformedOperationPrimaryProcessing) },
                { EntityType.Instance.PerformedOperationFinalProcessing(), typeof(PerformedOperationFinalProcessing) },
                { EntityType.Instance.ExportFlowCardExtensionsCardCommercial(), typeof(ExportFlowCardExtensionsCardCommercial) },
                { EntityType.Instance.ExportFlowFinancialDataLegalEntity(), typeof(ExportFlowFinancialDataLegalEntity) },
                { EntityType.Instance.ExportFlowOrdersAdvMaterial(), typeof(ExportFlowOrdersAdvMaterial) },
                { EntityType.Instance.ExportFlowOrdersOrder(), typeof(ExportFlowOrdersOrder) },
                { EntityType.Instance.ExportFlowOrdersResource(), typeof(ExportFlowOrdersResource) },
                { EntityType.Instance.ExportFlowOrdersTheme(), typeof(ExportFlowOrdersTheme) },
                { EntityType.Instance.ExportFlowOrdersThemeBranch(), typeof(ExportFlowOrdersThemeBranch) },
                { EntityType.Instance.ExportFlowFinancialDataClient(), typeof(ExportFlowFinancialDataClient) },
                { EntityType.Instance.ExportFlowFinancialDataDebitsInfoInitial(), typeof(ExportFlowFinancialDataDebitsInfoInitial) },
                { EntityType.Instance.ExportFlowPriceListsPriceList(), typeof(ExportFlowPriceListsPriceList) },
                { EntityType.Instance.ExportFlowPriceListsPriceListPosition(), typeof(ExportFlowPriceListsPriceListPosition) },
                { EntityType.Instance.ExportFlowOrdersInvoice(), typeof(ExportFlowOrdersInvoice) },
                { EntityType.Instance.ExportFlowNomenclaturesNomenclatureElement(), typeof(ExportFlowNomenclatures_NomenclatureElement) },
                { EntityType.Instance.ExportFlowNomenclaturesNomenclatureElementRelation(), typeof(ExportFlowNomenclatures_NomenclatureElementRelation) },
                { EntityType.Instance.ExportFlowDeliveryDataLetterSendRequest(), typeof(ExportFlowDeliveryData_LetterSendRequest) },
                { EntityType.Instance.ExportFlowOrdersDenialReason(), typeof(ExportFlowOrders_DenialReason) },
                { EntityType.Instance.ExportFailedEntity(), typeof(ExportFailedEntity) },
                { EntityType.Instance.ImportedFirmAddress(), typeof(ImportedFirmAddress) },
                { EntityType.Instance.UserEntity(), typeof(UserEntity) },
                { EntityType.Instance.Bank(), typeof(Bank) },
                { EntityType.Instance.Commune(), typeof(Commune) },
                { EntityType.Instance.AcceptanceReportsJournalRecord(), typeof(AcceptanceReportsJournalRecord) },
                { EntityType.Instance.DenialReason(), typeof(DenialReason) },
                { EntityType.Instance.BirthdayCongratulation(), typeof(BirthdayCongratulation) },
                { EntityType.Instance.OrderValidationResult(), typeof(OrderValidationResult) },
                { EntityType.Instance.OrderValidationCacheEntry(), typeof(OrderValidationCacheEntry) },

                // Dynamic Storage
                { EntityType.Instance.DictionaryEntityInstance(), typeof(DictionaryEntityInstance) },
                { EntityType.Instance.DictionaryEntityPropertyInstance(), typeof(DictionaryEntityPropertyInstance) },
                { EntityType.Instance.BusinessEntityInstance(), typeof(BusinessEntityInstance) },
                { EntityType.Instance.BusinessEntityPropertyInstance(), typeof(BusinessEntityPropertyInstance) },
            };

        public static void Initialize()
        {
            EntityTypeMappingRegistry.Initialize(EntityNameUtils.VirtualEntityNames, EntityNameUtils.PersistenceOnlyEntities);
            EntityTypeMappingRegistry.AddMappings(TypeMap);
        }
    }
}
