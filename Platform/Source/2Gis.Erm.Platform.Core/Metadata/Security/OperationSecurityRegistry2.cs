namespace DoubleGis.Erm.Platform.Core.Metadata.Security
{
    public static partial class OperationSecurityRegistry
    {
        //[SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1115:ParameterMustFollowComma")]
        //private static readonly AccessRequirementContainer Container =
        //    new AccessRequirementContainer()


        //        .ForOperation<CreateIdentity, Order>(x => x
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.Account)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Account)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.AccountDetail)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.BargainType)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.BranchOffice)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.BranchOfficeOrganizationUnit)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Category)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.CategoryFirmAddress)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.CategoryOrganizationUnit)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Deal)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.Deal)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Firm)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.FirmAddress)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.LegalPerson)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Lock)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Note)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.NotificationAddress)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.NotificationEmail)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.NotificationEmailTo)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.Order)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Order)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.Order)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrderPosition)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.OrderPosition)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrderPositionAdvertisement)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.OrderReleaseTotal)
        //            .Require(EntityAccessTypes.Delete, EntityType.Instance.OrderReleaseTotal)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrderReleaseTotal)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.OrderValidationResult)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrganizationUnit)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Position)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.PricePosition)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ReleaseInfo)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.ReleasesWithdrawalsPosition)
        //            .Require(EntityAccessTypes.Delete, EntityType.Instance.ReleasesWithdrawalsPosition)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.ReleasesWithdrawalsPosition)
        //            .Require(EntityAccessTypes.Delete, EntityType.Instance.ReleaseWithdrawal)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ReleaseWithdrawal)
        //            .Require(FunctionalPrivilegeName.OrderChangeDocumentsDebt))

        //        .ForOperation<UpdateIdentity, Order>(x => x
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.Account)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Account)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.AccountDetail)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.BargainType)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.BranchOffice)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.BranchOfficeOrganizationUnit)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Category)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.CategoryFirmAddress)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.CategoryOrganizationUnit)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Deal)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.Deal)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Firm)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.FirmAddress)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.LegalPerson)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Lock)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Note)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.NotificationAddress)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.NotificationEmail)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.NotificationEmailTo)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.Order)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Order)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.Order)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrderPosition)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.OrderPosition)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrderPositionAdvertisement)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.OrderReleaseTotal)
        //            .Require(EntityAccessTypes.Delete, EntityType.Instance.OrderReleaseTotal)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrderReleaseTotal)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.OrderValidationResult)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrganizationUnit)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Position)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.PricePosition)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ReleaseInfo)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.ReleasesWithdrawalsPosition)
        //            .Require(EntityAccessTypes.Delete, EntityType.Instance.ReleasesWithdrawalsPosition)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.ReleasesWithdrawalsPosition)
        //            .Require(EntityAccessTypes.Delete, EntityType.Instance.ReleaseWithdrawal)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ReleaseWithdrawal)
        //            .Require(FunctionalPrivilegeName.OrderChangeDocumentsDebt))

        //        .ForOperation<CreateIdentity, Theme>(x => x
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Theme)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ThemeOrganizationUnit)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrganizationUnit)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ThemeTemplate)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrderPositionAdvertisement)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrderPosition)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Order)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.Theme)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.Theme))

        //        .ForOperation<UpdateIdentity, Theme>(x => x
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Theme)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ThemeOrganizationUnit)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrganizationUnit)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ThemeTemplate)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrderPositionAdvertisement)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.OrderPosition)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Order)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.Theme)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.Theme))
                    
        //        .ForOperation<CreateIdentity, ThemeTemplate>(x => x
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ThemeTemplate)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.ThemeTemplate)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.ThemeTemplate))

        //        .ForOperation<UpdateIdentity, ThemeTemplate>(x => x
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ThemeTemplate)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.ThemeTemplate)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.ThemeTemplate))

        //        .ForOperation<AppendIdentity, Theme, Erm.Model.Entities.Erm.Category>(x => x
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Theme)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ThemeCategory)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.ThemeCategory)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.ThemeCategory))

        //        .ForOperation<AppendIdentity, Theme, OrganizationUnit>(x => x
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.Theme)
        //            .Require(EntityAccessTypes.Read, EntityType.Instance.ThemeOrganizationUnit)
        //            .Require(EntityAccessTypes.Create, EntityType.Instance.ThemeOrganizationUnit)
        //            .Require(EntityAccessTypes.Update, EntityType.Instance.ThemeOrganizationUnit));
    }
}
