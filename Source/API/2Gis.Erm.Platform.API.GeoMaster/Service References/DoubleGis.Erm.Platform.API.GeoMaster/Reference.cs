//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubleGis.Erm.Platform.API.GeoMaster {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Capabilities", Namespace="http://2Gis/GeoMasterApi/2013/1")]
    [System.SerializableAttribute()]
    public partial class Capabilities : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LanguagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Languages {
            get {
                return this.LanguagesField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguagesField, value) != true)) {
                    this.LanguagesField = value;
                    this.RaisePropertyChanged("Languages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Header", Namespace="http://2Gis/GeoMasterApi/2013/1")]
    [System.SerializableAttribute()]
    public partial class Header : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneZone", Namespace="http://2Gis/GeoMasterApi/2013/1")]
    [System.SerializableAttribute()]
    public partial class PhoneZone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long SynCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneCodeField;
        
        private bool IsDeletedField;
        
        private bool IsDefaultField;
        
        private long CitySynCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long SynCode {
            get {
                return this.SynCodeField;
            }
            set {
                if ((this.SynCodeField.Equals(value) != true)) {
                    this.SynCodeField = value;
                    this.RaisePropertyChanged("SynCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string PhoneCode {
            get {
                return this.PhoneCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneCodeField, value) != true)) {
                    this.PhoneCodeField = value;
                    this.RaisePropertyChanged("PhoneCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public long CitySynCode {
            get {
                return this.CitySynCodeField;
            }
            set {
                if ((this.CitySynCodeField.Equals(value) != true)) {
                    this.CitySynCodeField = value;
                    this.RaisePropertyChanged("CitySynCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotSupportedLanguage", Namespace="http://2Gis/GeoMasterApi/2013/1")]
    [System.SerializableAttribute()]
    public partial class NotSupportedLanguage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string LanguageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://2Gis/GeoMasterApi/2013/1", ConfigurationName="DoubleGis.Erm.Platform.API.GeoMaster.IMsReadApi")]
    public interface IMsReadApi {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://2Gis/GeoMasterApi/2013/1/IMsReadApi/GetCapabilities", ReplyAction="http://2Gis/GeoMasterApi/2013/1/IMsReadApi/GetCapabilitiesResponse")]
        DoubleGis.Erm.Platform.API.GeoMaster.GetCapabilitiesResponse GetCapabilities(DoubleGis.Erm.Platform.API.GeoMaster.GetCapabilitiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://2Gis/GeoMasterApi/2013/1/IMsReadApi/GetAllPhoneZones", ReplyAction="http://2Gis/GeoMasterApi/2013/1/IMsReadApi/GetAllPhoneZonesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DoubleGis.Erm.Platform.API.GeoMaster.NotSupportedLanguage), Action="http://2Gis/GeoMasterApi/2013/1/IMsReadApi/GetAllPhoneZonesNotSupportedLanguageFa" +
            "ult", Name="NotSupportedLanguage")]
        DoubleGis.Erm.Platform.API.GeoMaster.GetAllPhoneZonesResponse GetAllPhoneZones(DoubleGis.Erm.Platform.API.GeoMaster.GetAllPhoneZonesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://2Gis/GeoMasterApi/2013/1/IMsReadApi/GetAddressesString", ReplyAction="http://2Gis/GeoMasterApi/2013/1/IMsReadApi/GetAddressesStringResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DoubleGis.Erm.Platform.API.GeoMaster.NotSupportedLanguage), Action="http://2Gis/GeoMasterApi/2013/1/IMsReadApi/GetAddressesStringNotSupportedLanguage" +
            "Fault", Name="NotSupportedLanguage")]
        DoubleGis.Erm.Platform.API.GeoMaster.GetAddressesStringResponse GetAddressesString(DoubleGis.Erm.Platform.API.GeoMaster.GetAddressesStringRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCapabilities", WrapperNamespace="http://2Gis/GeoMasterApi/2013/1", IsWrapped=true)]
    public partial class GetCapabilitiesRequest {
        
        public GetCapabilitiesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCapabilitiesResponse", WrapperNamespace="http://2Gis/GeoMasterApi/2013/1", IsWrapped=true)]
    public partial class GetCapabilitiesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2Gis/GeoMasterApi/2013/1", Order=0)]
        public DoubleGis.Erm.Platform.API.GeoMaster.Capabilities GetCapabilitiesResult;
        
        public GetCapabilitiesResponse() {
        }
        
        public GetCapabilitiesResponse(DoubleGis.Erm.Platform.API.GeoMaster.Capabilities GetCapabilitiesResult) {
            this.GetCapabilitiesResult = GetCapabilitiesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPhoneZones", WrapperNamespace="http://2Gis/GeoMasterApi/2013/1", IsWrapped=true)]
    public partial class GetAllPhoneZonesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://2Gis/GeoMasterApi/2013/1")]
        public DoubleGis.Erm.Platform.API.GeoMaster.Header MyHeader;
        
        public GetAllPhoneZonesRequest() {
        }
        
        public GetAllPhoneZonesRequest(DoubleGis.Erm.Platform.API.GeoMaster.Header MyHeader) {
            this.MyHeader = MyHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllPhoneZonesResponse", WrapperNamespace="http://2Gis/GeoMasterApi/2013/1", IsWrapped=true)]
    public partial class GetAllPhoneZonesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2Gis/GeoMasterApi/2013/1", Order=0)]
        public DoubleGis.Erm.Platform.API.GeoMaster.PhoneZone[] GetAllPhoneZonesResult;
        
        public GetAllPhoneZonesResponse() {
        }
        
        public GetAllPhoneZonesResponse(DoubleGis.Erm.Platform.API.GeoMaster.PhoneZone[] GetAllPhoneZonesResult) {
            this.GetAllPhoneZonesResult = GetAllPhoneZonesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAddressesString", WrapperNamespace="http://2Gis/GeoMasterApi/2013/1", IsWrapped=true)]
    public partial class GetAddressesStringRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://2Gis/GeoMasterApi/2013/1")]
        public DoubleGis.Erm.Platform.API.GeoMaster.Header MyHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2Gis/GeoMasterApi/2013/1", Order=0)]
        public long[] codes;
        
        public GetAddressesStringRequest() {
        }
        
        public GetAddressesStringRequest(DoubleGis.Erm.Platform.API.GeoMaster.Header MyHeader, long[] codes) {
            this.MyHeader = MyHeader;
            this.codes = codes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAddressesStringResponse", WrapperNamespace="http://2Gis/GeoMasterApi/2013/1", IsWrapped=true)]
    public partial class GetAddressesStringResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://2Gis/GeoMasterApi/2013/1", Order=0)]
        public string[] GetAddressesStringResult;
        
        public GetAddressesStringResponse() {
        }
        
        public GetAddressesStringResponse(string[] GetAddressesStringResult) {
            this.GetAddressesStringResult = GetAddressesStringResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMsReadApiChannel : DoubleGis.Erm.Platform.API.GeoMaster.IMsReadApi, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MsReadApiClient : System.ServiceModel.ClientBase<DoubleGis.Erm.Platform.API.GeoMaster.IMsReadApi>, DoubleGis.Erm.Platform.API.GeoMaster.IMsReadApi {
        
        public MsReadApiClient() {
        }
        
        public MsReadApiClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MsReadApiClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MsReadApiClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MsReadApiClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DoubleGis.Erm.Platform.API.GeoMaster.GetCapabilitiesResponse GetCapabilities(DoubleGis.Erm.Platform.API.GeoMaster.GetCapabilitiesRequest request) {
            return base.Channel.GetCapabilities(request);
        }
        
        public DoubleGis.Erm.Platform.API.GeoMaster.GetAllPhoneZonesResponse GetAllPhoneZones(DoubleGis.Erm.Platform.API.GeoMaster.GetAllPhoneZonesRequest request) {
            return base.Channel.GetAllPhoneZones(request);
        }
        
        public DoubleGis.Erm.Platform.API.GeoMaster.GetAddressesStringResponse GetAddressesString(DoubleGis.Erm.Platform.API.GeoMaster.GetAddressesStringRequest request) {
            return base.Channel.GetAddressesString(request);
        }
    }
}
