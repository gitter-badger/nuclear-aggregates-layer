//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using DoubleGis.Erm.Platform.Model.Entities.Interfaces;
using DoubleGis.Erm.Platform.Model.Entities.Interfaces.Integration;

namespace DoubleGis.Erm.Platform.Model.Entities.Security
{
    public sealed partial class Privilege : 
        IEntity, 
        IEntityKey
    {
        public Privilege()
        {
            this.FunctionalPrivilegeDepths = new HashSet<FunctionalPrivilegeDepth>();
            this.UserEntities = new HashSet<UserEntity>();
            this.RolePrivileges = new HashSet<RolePrivilege>();
        }
    
        public long Id { get; set; }
        public Nullable<int> EntityType { get; set; }
        public int Operation { get; set; }
    
        public ICollection<FunctionalPrivilegeDepth> FunctionalPrivilegeDepths { get; set; }
        public ICollection<UserEntity> UserEntities { get; set; }
        public ICollection<RolePrivilege> RolePrivileges { get; set; }
    
    	public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }
    
            if (GetType() != obj.GetType())
            {
                return false;
            }
    
            if (ReferenceEquals(this, obj))
            {
                return true;
            }
    
    		var entityKey = obj as IEntityKey;
    		if (entityKey != null)
    		{
    			return Id == entityKey.Id;
    		}
    		
    		return false;
        }
    
    	override public int GetHashCode()
    	{
    		return Id.GetHashCode();
    	}
    }
}
