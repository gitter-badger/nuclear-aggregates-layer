#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubleGis.Erm.BL.UI.Web.Mvc.Views.Price
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using DoubleGis.Erm.BLCore.Resources.Server.Properties;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Controllers;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Models;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Utils;
    using DoubleGis.Erm.Platform.Common;
    using DoubleGis.Erm.Platform.Model.Entities;
    using DoubleGis.Erm.Platform.Model.Entities.Enums;
    using DoubleGis.Erm.Platform.Model.Metadata.Enums;
    using DoubleGis.Erm.Platform.UI.Web.Mvc;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Utils;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Price/Copy.cshtml")]
    public partial class Copy : System.Web.Mvc.WebViewPage<Models.CopyPriceViewModel>
    {
        public Copy()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 4 "..\..\Views\Price\Copy.cshtml"
  
    Layout = "../Shared/_DialogLayout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("Title", () => {

WriteLiteral(" ");

            
            #line 8 "..\..\Views\Price\Copy.cshtml"
            Write(BLResources.CopyPrice);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarTitle", () => {

WriteLiteral(" ");

            
            #line 9 "..\..\Views\Price\Copy.cshtml"
                  Write(BLResources.CopyPrice);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarMessage", () => {

WriteLiteral(" ");

            
            #line 10 "..\..\Views\Price\Copy.cshtml"
                    Write(BLResources.CopyPrice);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

WriteLiteral("\r\n");

DefineSection("PageContent", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        var setVisualFeatures = function ()\r\n        {\r\n            var divRow" +
"s = window.Ext.query(\"div.field-wrapper\");\r\n            var i;\r\n            for " +
"(i = 0; i < divRows.length; i++)\r\n            {\r\n                window.Ext.fly(" +
"divRows[i]).addClassOnOver(\"field-wrapper-over\");\r\n            }\r\n\r\n            " +
"var inputs = window.Ext.query(\".inputfields\");\r\n            for (i = 0; i < inpu" +
"ts.length; i++)\r\n            {\r\n                window.Ext.fly(inputs[i]).addCla" +
"ssOnFocus(\"inputfields-selected\");\r\n            }\r\n        };\r\n\r\n        var Sub" +
"mitForm = function ()\r\n        {\r\n            if (Ext.getDom(\"CopyNewPrice\").che" +
"cked)\r\n            {\r\n                var params = \"dialogWidth:\" + 500 + \"px; d" +
"ialogHeight:\" + 250 + \"px; status:yes; scroll:no;resizable:no;\";\r\n              " +
"  var url = \'/Price/CopyNew\';\r\n                var arguments = {\r\n              " +
"      sourcePriceId: window.dialogArguments.priceId\r\n                };\r\n\r\n     " +
"           var nextAction = window.showModalDialog(url, arguments, params);\r\n\r\n " +
"               if (nextAction != \"Cancel\")\r\n                {\r\n                 " +
"   window.returnValue = \"Close\";\r\n                    window.close();\r\n         " +
"       }\r\n            }\r\n            else\r\n            {\r\n                if (Ex" +
"t.DoubleGis.FormValidator.validate(EntityForm, null))\r\n                {\r\n\r\n    " +
"                Ext.getDom(\"OK\").disabled = \"disabled\";\r\n                    Ext" +
".getDom(\"Cancel\").disabled = \"disabled\";\r\n                    EntityForm.submit(" +
");\r\n                }\r\n            }\r\n        };\r\n\r\n        Ext.onReady(function" +
" ()\r\n        {\r\n            window.Ext.each(window.Ext.CardLookupSettings, funct" +
"ion (item)\r\n            {\r\n                var l = new window.Ext.ux.LookupField" +
"(item);\r\n            }, this);\r\n            setVisualFeatures();\r\n\r\n            " +
"//Show error messages\r\n            if (Ext.getDom(\"Notifications\").innerHTML.tri" +
"m() == \"OK\") { window.returnValue = \"Reload\"; window.close(); return; }\r\n\r\n     " +
"       else if (Ext.getDom(\"Notifications\").innerHTML.trim() != \"\")\r\n           " +
" {\r\n                Ext.get(\"Notifications\").addClass(\"Notifications\");\r\n       " +
"     }\r\n\r\n            Ext.getDom(\"SourcePriceId\").value = window.dialogArguments" +
".priceId;\r\n\r\n            //write eventhandlers for buttons\r\n            Ext.get(" +
"\"Cancel\").on(\"click\", function () { window.close(); });\r\n            Ext.get(\"OK" +
"\").on(\"click\", SubmitForm);\r\n\r\n            Ext.get(EntityForm.CopyNewPrice[0]).o" +
"n(\"click\", radioClick);\r\n            Ext.get(EntityForm.CopyNewPrice[1]).on(\"cli" +
"ck\", radioClick);\r\n            if (Ext.getDom(\"CopyNewPrice\").checked)\r\n        " +
"    {\r\n                Ext.getCmp(\"TargetPrice\").disable();\r\n            }\r\n    " +
"    });\r\n\r\n        var radioClick = function ()\r\n        {\r\n            if (Ext." +
"getDom(\"CopyNewPrice\").checked)\r\n            {\r\n                Ext.getCmp(\"Targ" +
"etPrice\").disable();\r\n            }\r\n            else\r\n            {\r\n          " +
"      Ext.getCmp(\"TargetPrice\").enable();\r\n            };\r\n\r\n        };\r\n    </s" +
"cript>\r\n");

            
            #line 104 "..\..\Views\Price\Copy.cshtml"
    
            
            #line default
            #line hidden
            
            #line 104 "..\..\Views\Price\Copy.cshtml"
     using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {
    
            
            #line default
            #line hidden
            
            #line 106 "..\..\Views\Price\Copy.cshtml"
Write(Html.HiddenFor(m => m.SourcePriceId));

            
            #line default
            #line hidden
            
            #line 106 "..\..\Views\Price\Copy.cshtml"
                                         

            
            #line default
            #line hidden
WriteLiteral("    <table");

WriteLiteral(" cellspacing=\"5\"");

WriteLiteral(" cellpadding=\"5\"");

WriteLiteral(" width=\"100%\"");

WriteLiteral(" height=\"100%\"");

WriteLiteral(">\r\n        <colgroup>\r\n            <col />\r\n            <col />\r\n        </colgro" +
"up>\r\n        <tbody>\r\n            <tr>\r\n                <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" style=\"height: 15px;\"");

WriteLiteral(" id=\"Notifications\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 116 "..\..\Views\Price\Copy.cshtml"
                   Write(Model.Message);

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n         " +
"   <tr>\r\n                <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 122 "..\..\Views\Price\Copy.cshtml"
               Write(Html.RadioButtonFor(m => m.CopyNewPrice, true, new Dictionary<string, object> { { "id", "CopyNewPriceYes" } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </td>\r\n                <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                    <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 126 "..\..\Views\Price\Copy.cshtml"
                   Write(BLResources.CopyPriceCreateNew);

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </label>\r\n                    <br />\r\n                    <" +
"div");

WriteLiteral(" style=\"color: #444444; padding-top: 5px\"");

WriteLiteral(">\r\n                        <label>\r\n");

WriteLiteral("                            ");

            
            #line 131 "..\..\Views\Price\Copy.cshtml"
                       Write(BLResources.CopyPriceCreateNewLegend);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n " +
"           <tr>\r\n                <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n                    &nbsp;\r\n                </td>\r\n            </tr>\r\n        " +
"    <tr>\r\n                <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 142 "..\..\Views\Price\Copy.cshtml"
               Write(Html.RadioButtonFor(m => m.CopyNewPrice, false, new Dictionary<string, object> { { "id", "CopyNewPriceNo" } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </td>\r\n                <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                    <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 146 "..\..\Views\Price\Copy.cshtml"
                   Write(BLResources.CopyPricetReplaceExisting);

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </label>\r\n                    <br />\r\n                    <" +
"div");

WriteLiteral(" style=\"padding-bottom: 10px; color: #444444; padding-top: 5px\"");

WriteLiteral(">\r\n                        <label>\r\n");

WriteLiteral("                            ");

            
            #line 151 "..\..\Views\Price\Copy.cshtml"
                       Write(BLResources.CopyPricetReplaceExistingLegend);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n");

WriteLiteral("                    ");

            
            #line 153 "..\..\Views\Price\Copy.cshtml"
               Write(Html.LookupFor(k => k.TargetPrice, new LookupSettings { EntityName = EntityName.Price, ExtendedInfo = "excludeId={SourcePriceId}" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n");

            
            #line 158 "..\..\Views\Price\Copy.cshtml"
    }

            
            #line default
            #line hidden
});

        }
    }
}
#pragma warning restore 1591
