
@using System.Globalization
@model Models.GetOrdersWithDummyAdvertisementDialogModel

@{
    Layout = "../Shared/_DialogLayout.cshtml";
}

@section Title { @BLResources.GetOrdersWithDummyAdvertisementReportTitle }
@section TopBarTitle { @BLResources.GetOrdersWithDummyAdvertisementReportTitle}
@section TopBarMessage { @BLResources.GetOrdersWithDummyAdvertisementParametersInformation }

@section PageContent
{
    <link rel="stylesheet" type="text/css" href="/Content/Ext.ux.DetailedProgressWindow.css?@SolutionInfo.ProductVersion.Build" />
    
    <script src="/Scripts/Ext.ux.DetailedProgressWindow.js?@SolutionInfo.ProductVersion.Build" type="text/javascript"></script>
    <script src="/Scripts/Ext.ux.AsyncOperationClientManager.js?@SolutionInfo.ProductVersion.Build" type="text/javascript"></script>

    <script type="text/javascript">

        Ext.onReady(function() {
            if (Ext.getDom('ReportLink')) {
                Ext.getDom('ReportLink').onclick = function() {
                    Ext.getDom('ReportForm').submit();
                };
            }

            //Show error messages
            if (Ext.getDom("Notifications").innerHTML.trim() != "") {
                Ext.get("Notifications").addClass("Notifications");
            } else {
                Ext.get("Notifications").removeClass("Notifications");
            }

            Ext.get("Cancel").on("click", function() {
                window.close();
            });

            Ext.get("OK").on("click", function () {
                if (Ext.DoubleGis.FormValidator.validate(window.EntityForm)) {
                    Ext.getDom("OK").disabled = "disabled";
                    Ext.getDom("Cancel").disabled = "disabled";
                    EntityForm.submit();
                }
            });

            Ext.each(Ext.CardLookupSettings, function(item, i) {
                new window.Ext.ux.LookupField(item);
            }, this);
        });

    </script>
    
    @if (Model.HasOrders == true)
    {
        <div style="height: 8px; padding-left: 5px; padding-top: 4px; position: fixed;" id="DivErrors">
            @using (Html.BeginForm("GetOperationLog", "Operation", FormMethod.Post, new Dictionary<string, object> { { "target", "_blank" }, { "id", "ReportForm" } }))
            {
                <input type="hidden" name="operationId" value="@Model.OrdersListFileId" />
            }
        </div>
    }

    @using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {
        @Html.Hidden("now", DateTime.UtcNow.ToString(CultureInfo.InvariantCulture))
        @Html.HiddenFor(m=>m.UserId)
        <div class="Tab">
            <div style="height: 18px;" id="Notifications" class="Notifications">
                @Model.Message
                @if (Model.HasOrders == true)
                {
                    <a href="#" id="ReportLink"> Просмотреть отчет...</a>
                }
            </div>
       
            <div class="row-wrapper">
                @Html.TemplateField(m => m.OrganizationUnit, FieldFlex.lone, new LookupSettings { EntityName = EntityName.OrganizationUnit, SearchFormFilterInfo = "IsDeleted=false&&IsActive=true", ExtendedInfo = "userId=" + Model.UserId })
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.Owner, FieldFlex.lone, new LookupSettings { EntityName = EntityName.User, ExtendedInfo = "subordinatesOf=" + Model.UserId })
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.IncludeOwnerDescendants, FieldFlex.lone)
            </div>
        </div>
    }
}