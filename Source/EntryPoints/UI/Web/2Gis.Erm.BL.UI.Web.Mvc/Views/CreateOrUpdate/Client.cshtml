@* 2+: BLFlex\Source\EntryPoints\UI\Web\2Gis.Erm.BLFlex.Web.Mvc.Global\Views\CreateOrUpdate\Client.cshtml *@

@model Models.ClientViewModel
@{
    Layout = "../Shared/_CardLayout.cshtml";
}

@section CardScripts
{
    <script src="/Scripts/Ext.DoubleGis.UI.Client.js?@SolutionInfo.ProductVersion.Build" type="text/javascript"></script>
}

@section CardBody
{
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.ReplicationCode)
    @Html.HiddenFor(m => m.CanEditIsAdvertisingAgency)
    <div class="Tab" id="MainTab" title="@BLResources.GeneralTabTitle">
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Name, FieldFlex.lone)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.MainAddress, FieldFlex.lone)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.MainPhoneNumber, FieldFlex.twins)
            @Html.TemplateField(m => m.Fax, FieldFlex.twins)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.AdditionalPhoneNumber1, FieldFlex.twins)
            @Html.TemplateField(m => m.Email, FieldFlex.twins)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.AdditionalPhoneNumber2, FieldFlex.twins)
            @Html.TemplateField(m => m.Website, FieldFlex.twins)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.IsAdvertisingAgency, FieldFlex.lone)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Comment, FieldFlex.lone, new Dictionary<string, object> { { "rows", 5 } })
        </div>
        @Html.SectionHead("SectionHead2", BLResources.AdditionalTabTitle)
        <div class="row-wrapper">
            @Html.TemplateField(m => m.InformationSource, FieldFlex.twins, null, EnumResources.ResourceManager)
            @Html.TemplateField(m => m.LastQualifyTime, FieldFlex.twins, new DateTimeSettings { ReadOnly = true, ShiftOffset = false })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.PromisingScore, FieldFlex.twins, new Dictionary<string, object> { { "readonly", "readonly" } })
            @Html.TemplateField(m => m.LastDisqualifyTime, FieldFlex.twins, new DateTimeSettings { ReadOnly = true, ShiftOffset = false })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.MainFirm, FieldFlex.lone, new LookupSettings { EntityName = EntityName.Firm, SearchFormFilterInfo = "ClientId={Id}" })
        </div>
    </div>
    <div class="Tab" id="AdministrationTab" title="@BLResources.AdministrationTabTitle">
        @Html.SectionHead("adminHeader", BLResources.AdministrationTabTitle)
        @if (Model.IsCurated && Model.IsSecurityRoot)
        {
            <div class="row-wrapper">
                @Html.TemplateField(m => m.Owner, FieldFlex.twins, new LookupSettings { EntityName = EntityName.User, Plugins = new[] { "new Ext.ux.LookupFieldOwner()" } })
                @Html.TemplateField(m => m.Territory, FieldFlex.twins, new LookupSettings { EntityName = EntityName.Territory, ReadOnly = Model != null && Model.Territory != null && !string.IsNullOrEmpty(Model.Territory.Value) })
            </div>
        }
        <div class="row-wrapper">
            @Html.TemplateField(m => m.CreatedBy, FieldFlex.twins, new LookupSettings { EntityName = EntityName.User, ReadOnly = true })
            @Html.TemplateField(m => m.CreatedOn, FieldFlex.twins, new DateTimeSettings { ReadOnly = true })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.ModifiedBy, FieldFlex.twins, new LookupSettings { EntityName = EntityName.User, ReadOnly = true })
            @Html.TemplateField(m => m.ModifiedOn, FieldFlex.twins, new DateTimeSettings { ReadOnly = true })
        </div>
    </div>
}
