
@model Models.BargainViewModel

@{
    Layout = "../Shared/_CardLayout.cshtml";
}

@section CardScripts
{
<script type="text/javascript">
    window.InitPage = function ()
    {
        window.Card.on('beforepost', function () { window.returnValue = true; });
    }
</script>
}

@section CardBody
{
<div style="display: none">
    @Html.HiddenFor(m => m.Id)
</div>
<div class="Tab" id="MainTab" title="@BLResources.GeneralTabTitle">
    <div class="row-wrapper">
        @Html.TemplateField(m => m.Number, FieldFlex.twins, new Dictionary<string, object> {{"readonly", "readonly"}, {"class", "readonly"}})
        @Html.TemplateField(m => m.BargainType, FieldFlex.twins, new LookupSettings { EntityName = EntityName.BargainType, ShowReadOnlyCard = true, ReadOnly = true })
    </div>
    <div class="row-wrapper">
        @Html.TemplateField(m => m.SignedOn, FieldFlex.twins, new DateTimeSettings {ReadOnly = true})
        @Html.TemplateField(m => m.ClosedOn, FieldFlex.twins, new DateTimeSettings {ReadOnly = true})
    </div>
    <div class="row-wrapper">
        @Html.TemplateField(m => m.LegalPerson, FieldFlex.lone, new LookupSettings {EntityName = EntityName.LegalPerson, ShowReadOnlyCard = true, ReadOnly = true})
    </div>
    <div class="row-wrapper">
        @Html.TemplateField(m => m.BranchOfficeOrganizationUnit, FieldFlex.lone, new LookupSettings { EntityName = EntityName.BranchOfficeOrganizationUnit, ShowReadOnlyCard = true, ReadOnly = true })
    </div>
    <div class="row-wrapper">
        @Html.TemplateField(m => m.Comment, FieldFlex.lone, new Dictionary<string, object> {{"rows", "4"}})
    </div>
    <div class="row-wrapper">
        @Html.TemplateField(m => m.HasDocumentsDebt, FieldFlex.lone, null, EnumResources.ResourceManager)
    </div>
    <div class="row-wrapper">
        @Html.TemplateField(m => m.DocumentsComment, FieldFlex.lone)
    </div>
</div>
}