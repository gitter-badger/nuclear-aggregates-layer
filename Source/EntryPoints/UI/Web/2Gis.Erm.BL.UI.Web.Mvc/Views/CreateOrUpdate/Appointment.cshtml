@model DoubleGis.Erm.BL.UI.Web.Mvc.Models.Activity.AppointmentViewModel

@{
    Layout = "../Shared/_CardLayout.cshtml";
}

@section CardScripts
{
    <script src="/Scripts/Ext.ux.TimeComboBox.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Activity/Ext.DoubleGis.UI.RegardingObjectController.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Activity/Ext.DoubleGis.UI.ActivityBase.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Activity/Ext.DoubleGis.UI.Appointment.js?@ThisAssembly.Build" type="text/javascript"></script>
}

@section CustomInit
{
    <script type="text/javascript">
        Ext.onReady(function()
        {
            var cardSettings = @Html.WriteJson(Model.ViewConfig.CardSettings);
            window.Card = new window.Ext.DoubleGis.UI.Appointment(cardSettings);
            window.Card.Build();
        });
    </script>
}

@section CardBody
{
    <div class="Tab" id="MainTab" title="@BLResources.GeneralTabTitle">
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.Status)
        
        @Html.SectionHead("regardingObjectHeader", BLResources.TitleRegarding)
        @Html.SectionRow(
            @Html.TemplateField(m => m.Client, FieldFlex.twins, new LookupSettings { EntityName = EntityName.Client }),
            @Html.TemplateField(m => m.Firm, FieldFlex.twins, new LookupSettings { EntityName = EntityName.Firm, ExtendedInfo = "filterToParent=true", ParentEntityName = EntityName.Client, ParentIdPattern = "ClientId", SupressMatchesErrors = true }))
        @Html.SectionRow(@Html.TemplateField(m => m.Deal, FieldFlex.twins, new LookupSettings { EntityName = EntityName.Deal, ExtendedInfo = "filterToParent=true", ParentEntityName = EntityName.Client, ParentIdPattern = "ClientId", SupressMatchesErrors = true }))

        @Html.SectionHead("planHeader", BLResources.TitlePlan)
        @Html.SectionRow(@Html.TemplateField(m => m.Purpose, FieldFlex.lone, null, EnumResources.ResourceManager))
        @Html.SectionRow(@Html.TemplateField(m => m.Title, FieldFlex.lone))
        <div class="row-wrapper">
            <div class="display-wrapper field-wrapper twins">
                <div class="label-wrapper">
                    <span>
                        @Html.LabelFor(m => m.ScheduledStart):
                    </span>
                </div>
                <div class="input-wrapper">
                    <table cellpadding="0" cellspacing="0">
                        <tbody>
                            <tr>
                                <td style="width: 120px">
                                    @Html.DateFor(m => m.ScheduledStart, new DateTimeSettings { ShiftOffset = false })
                                    @Html.ValidationMessageFor(m => m.ScheduledStart, null, new Dictionary<string, object> { { "class", "error" } })
                                </td>
                                <td style="width: 5px"></td>
                                <td style="width: 60px">
                                    @Html.TextBoxFor(m => m.ScheduledStartTime)
                                </td>
                                <td style="width: auto"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="display-wrapper field-wrapper twins">
                <div class="label-wrapper">
                    <span>
                        @Html.LabelFor(m => m.ScheduledEnd):
                    </span>
                </div>
                <div class="input-wrapper">
                    <table cellpadding="0" cellspacing="0">
                        <tbody>
                            <tr>
                                <td style="width: 120px">
                                    @Html.DateFor(m => m.ScheduledEnd, new DateTimeSettings { ShiftOffset = false })
                                    @Html.ValidationMessageFor(m => m.ScheduledEnd, null, new Dictionary<string, object> { { "class", "error" } })
                                </td>
                                <td style="width: 5px"></td>
                                <td style="width: 60px">
                                    @Html.TextBoxFor(m => m.ScheduledEndTime)
                                </td>
                                <td style="width: auto"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        @Html.SectionRow(@Html.TemplateField(m => m.Attendee, FieldFlex.lone, new LookupSettings { EntityName = EntityName.Contact, ExtendedInfo = "filterToParent=true", ParentEntityName = EntityName.Client, ParentIdPattern = "ClientId" }))
        @Html.SectionRow(@Html.TemplateField(m => m.Location, FieldFlex.lone))

        @Html.SectionHead("resultHeader", BLResources.TitleResult)
        @Html.SectionRow(@Html.TemplateField(m => m.Description, FieldFlex.lone, new Dictionary<string, object> { { "rows", "10" } }))
   </div>
}