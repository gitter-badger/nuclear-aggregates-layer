#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubleGis.Erm.BL.UI.Web.Mvc.Views.CreateOrUpdate
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using DoubleGis.Erm.BL.UI.Web.Mvc.Models;
    using DoubleGis.Erm.BLCore.Resources.Server.Properties;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Controllers;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Models;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Utils;
    using DoubleGis.Erm.Platform.Common;
    using DoubleGis.Erm.Platform.Model.Entities;
    using DoubleGis.Erm.Platform.Model.Entities.Enums;
    using DoubleGis.Erm.Platform.Model.Metadata.Enums;
    using DoubleGis.Erm.Platform.UI.Web.Mvc;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Utils;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/CreateOrUpdate/Deal.cshtml")]
    public partial class Deal : System.Web.Mvc.WebViewPage<Models.DealViewModel>
    {
        public Deal()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 4 "..\..\Views\CreateOrUpdate\Deal.cshtml"
  
    Layout = "../Shared/_CardLayout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("CardScripts", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        window.InitPage = function ()\r\n        {\r\n            window.Card.on(\"" +
"beforebuild\", function (card)\r\n            {\r\n                this.ChangeOwner =" +
" function ()\r\n                {\r\n                    if (Ext.getDom(\"Id\").value " +
"!= 0)\r\n                    {\r\n                        var params = \"dialogWidth:" +
"450px; dialogHeight:300px; status:yes; scroll:no;resizable:no;\";\r\n              " +
"          var sUrl = \"/GroupOperation/Assign/Deal\";\r\n                        var" +
" result = window.showModalDialog(sUrl, [Ext.getDom(\"Id\").value], params);\r\n     " +
"                   if (result === true)\r\n                        {\r\n            " +
"                this.refresh(true);\r\n                        }\r\n                " +
"    }\r\n                };\r\n\r\n                this.ReopenDeal = function ()\r\n    " +
"            {\r\n                    if (Ext.getDom(\"Id\").value != 0)\r\n           " +
"         {\r\n                        var params = \"dialogWidth:450px; dialogHeigh" +
"t:200px; status:yes; scroll:no;resizable:no;\";\r\n                        var sUrl" +
" = \"/Deal/ReopenDeal\";\r\n                        var result = window.showModalDia" +
"log(sUrl, Ext.getDom(\"Id\").value, params);\r\n                        if (result =" +
"== true)\r\n                        {\r\n                            this.refresh(tr" +
"ue);\r\n                        }\r\n                    }\r\n\r\n                };\r\n\r\n" +
"                this.CloseDeal = function ()\r\n                {\r\n               " +
"     if (Ext.getDom(\"Id\").value != 0)\r\n                    {\r\n                  " +
"      var params = \"dialogWidth:450px; dialogHeight:450px; status:yes; scroll:no" +
";resizable:no;\";\r\n                        var sUrl = \"/Deal/Close\";\r\n           " +
"             var result = window.showModalDialog(sUrl, [Ext.getDom(\"Id\").value]," +
" params);\r\n                        if (result === true)\r\n                       " +
" {\r\n                            this.refresh(true);\r\n                        }\r\n" +
"                    }\r\n                };\r\n\r\n                this.ChangeDealClie" +
"nt = function ()\r\n                {\r\n                    if (Ext.getDom(\"Id\").va" +
"lue != 0)\r\n                    {\r\n                        var params = \"dialogWi" +
"dth:450px; dialogHeight:200px; status:yes; scroll:no;resizable:no;\";\r\n          " +
"              var sUrl = \"/GroupOperation/ChangeClient/Deal\";\r\n                 " +
"       var result = window.showModalDialog(sUrl, [Ext.getDom(\"Id\").value], param" +
"s);\r\n                        if (result === true)\r\n                        {\r\n  " +
"                          this.refresh(true);\r\n                        }\r\n      " +
"              }\r\n                };\r\n\r\n                this.AutoFillDealName = f" +
"unction ()\r\n                {\r\n                    if (Ext.getDom(\"Name\").value." +
"length == 0 && Ext.getCmp(\"Client\").item && Ext.getCmp(\"MainFirm\").item)\r\n      " +
"              {\r\n                        var clientName = Ext.getCmp(\"Client\").i" +
"tem.name;\r\n                        var mainFirmName = Ext.getCmp(\"MainFirm\").ite" +
"m.name;\r\n\r\n                        var response = window.Ext.Ajax.syncRequest({\r" +
"\n                            method: \'POST\',\r\n                            url: \'" +
"/Deal/GenerateDealName\',\r\n                            params: { clientName: clie" +
"ntName, mainFirmName : mainFirmName }\r\n                        });\r\n\r\n          " +
"              if ((response.conn.status >= 200 && response.conn.status < 300)\r\n " +
"                           || (Ext.isIE && response.conn.status == 1223)) {\r\n   " +
"                         var responseDecoded = window.Ext.decode(response.conn.r" +
"esponseText);\r\n                            if (responseDecoded) {\r\n             " +
"                   Ext.getDom(\"Name\").value = responseDecoded;\r\n                " +
"            }\r\n                        }\r\n                        else {\r\n      " +
"                      Ext.Msg.show({\r\n                                title: Ext" +
".LocalizedResources.Error,\r\n                                msg: response.conn.r" +
"esponseText,\r\n                                buttons: Ext.Msg.OK,\r\n            " +
"                    icon: Ext.MessageBox.ERROR\r\n                            });\r" +
"\n                            return false;\r\n                        }\r\n         " +
"           }\r\n                };\r\n            });\r\n\r\n            window.Card.on(" +
"\"afterbuild\", function (card)\r\n            {\r\n                if (Ext.getDom(\"Id" +
"\").value == 0 && Ext.getDom(\"Message\").innerHTML.trim() == \"\")\r\n                " +
"{\r\n\r\n                    var isReasonSet = false;\r\n\r\n                    // Если" +
" по данному клиенту существует задача с признаком \r\n                    // \"Тепл" +
"ый клиент\", то, не спрашивая, выставляем \r\n                    // соответствующу" +
"ю причину сделки.\r\n                    var clientLookup = Ext.getCmp(\'Client\');\r" +
"\n                    if (clientLookup.item)\r\n                    {\r\n            " +
"            var clientId = clientLookup.item.id;\r\n\r\n                        var " +
"response = window.Ext.Ajax.syncRequest({\r\n                            method: \'P" +
"OST\',\r\n                            url: \'/Deal/CheckIsWarmClient\',\r\n            " +
"                params: { clientId: clientId }\r\n                        });\r\n\r\n " +
"                       if ((response.conn.status >= 200 && response.conn.status " +
"< 300)\r\n                            || (Ext.isIE && response.conn.status == 1223" +
"))\r\n                        {\r\n                            var responseDecoded =" +
" window.Ext.decode(response.conn.responseText);\r\n                            if " +
"(responseDecoded && responseDecoded.IsWarmClient == true)\r\n                     " +
"       {\r\n                                isReasonSet = true;\r\n                 " +
"               // Hardcode for ReasonForNewDeal.WarmClient:\r\n                   " +
"             Ext.getDom(\"StartReason\").value = \"WarmClient\";\r\n                  " +
"              var dateFormatted = responseDecoded.TaskActualEnd ?\r\n             " +
"                       responseDecoded.TaskActualEnd.format(Ext.CultureInfo.Date" +
"TimeFormatInfo.PhpShortDatePattern) : \"\";\r\n\r\n                                //\"" +
"Выставлена причина сделки \\\"Теплый клиент\\\", т.к. для данного клиента существует" +
" задача \\\"NNN\\\", закрытая \\\"\\\" с типом \\\"Теплый клиент\\\"\";\r\n                    " +
"            var alertText = String.format(Ext.LocalizedResources.IsWarmClientWar" +
"ningFormat, responseDecoded.TaskDescription, dateFormatted);\r\n                  " +
"              alert(alertText);\r\n                            }\r\n                " +
"        }\r\n                        else\r\n                        {\r\n            " +
"                alert(response.conn.responseText);\r\n                            " +
"return false;\r\n                        }\r\n                    }\r\n\r\n             " +
"       if (isReasonSet == false)\r\n                    {\r\n                       " +
" var params = \"dialogWidth:450px; dialogHeight:200px; status:yes; scroll:no;resi" +
"zable:no;\";\r\n                        var sUrl = \"/Deal/PickCreateReason\";\r\n     " +
"                   var result = window.showModalDialog(sUrl, null, params);\r\n   " +
"                     if (result)\r\n                        {\r\n                   " +
"         Ext.getDom(\"StartReason\").value = result.ReasonForNewDeal;\r\n           " +
"                 this.AutoFillDealName();\r\n                        } else {\r\n   " +
"                         window.close();\r\n                        }\r\n           " +
"         }\r\n                }\r\n\r\n                if (window.Ext.getDom(\"ViewConf" +
"ig_Id\").value && window.Ext.getDom(\"ViewConfig_Id\").value != \"0\") {\r\n           " +
"         this.Items.TabPanel.add(\r\n                        {\r\n                  " +
"          xtype: \"actionshistorytab\",\r\n                            pCardInfo:\r\n " +
"                           {\r\n                                pTypeName: this.Se" +
"ttings.EntityName,\r\n                                pId: window.Ext.getDom(\"View" +
"Config_Id\").value\r\n                            }\r\n                        });\r\n " +
"               }\r\n            });\r\n\r\n            // if client have changed, chan" +
"ge the main firm\r\n            window.Card.on(\"afterbuild\", function (card)\r\n    " +
"        {\r\n                Ext.getCmp(\"Client\").on(\"change\", function ()\r\n      " +
"          {\r\n                    var cmpFrm = Ext.getCmp(\"MainFirm\");\r\n         " +
"           cmpFrm.clearValue();\r\n                    if (this.getValue() != unde" +
"fined)\r\n                    {\r\n                        cmpFrm.getDataFromServer(" +
");\r\n                    }\r\n\r\n                    window.Card.AutoFillDealName();" +
"\r\n                });\r\n\r\n                Ext.getCmp(\"MainFirm\").on(\"change\", fun" +
"ction ()\r\n                {\r\n                    window.Card.AutoFillDealName();" +
"\r\n                });\r\n            });\r\n\r\n        }\r\n    </script>\r\n");

});

WriteLiteral("\r\n");

DefineSection("CardBody", () => {

WriteLiteral("\r\n");

            
            #line 205 "..\..\Views\CreateOrUpdate\Deal.cshtml"
    
            
            #line default
            #line hidden
            
            #line 205 "..\..\Views\CreateOrUpdate\Deal.cshtml"
     if (Model != null)
    {
        
            
            #line default
            #line hidden
            
            #line 207 "..\..\Views\CreateOrUpdate\Deal.cshtml"
   Write(Html.HiddenFor(m => m.Id));

            
            #line default
            #line hidden
            
            #line 207 "..\..\Views\CreateOrUpdate\Deal.cshtml"
                                  
        
            
            #line default
            #line hidden
            
            #line 208 "..\..\Views\CreateOrUpdate\Deal.cshtml"
   Write(Html.HiddenFor(m => m.ReplicationCode));

            
            #line default
            #line hidden
            
            #line 208 "..\..\Views\CreateOrUpdate\Deal.cshtml"
                                               

        
            
            #line default
            #line hidden
            
            #line 210 "..\..\Views\CreateOrUpdate\Deal.cshtml"
                                                    
        
            
            #line default
            #line hidden
            
            #line 211 "..\..\Views\CreateOrUpdate\Deal.cshtml"
   Write(Html.HiddenFor(m => m.ClientReplicationCode));

            
            #line default
            #line hidden
            
            #line 211 "..\..\Views\CreateOrUpdate\Deal.cshtml"
                                                     
        
            
            #line default
            #line hidden
            
            #line 212 "..\..\Views\CreateOrUpdate\Deal.cshtml"
   Write(Html.HiddenFor(m => m.ClientName));

            
            #line default
            #line hidden
            
            #line 212 "..\..\Views\CreateOrUpdate\Deal.cshtml"
                                          
    }

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"Tab\"");

WriteLiteral(" id=\"Div2\"");

WriteAttribute("title", Tuple.Create(" title=\"", 9112), Tuple.Create("\"", 9148)
            
            #line 214 "..\..\Views\CreateOrUpdate\Deal.cshtml"
, Tuple.Create(Tuple.Create("", 9120), Tuple.Create<System.Object, System.Int32>(BLResources.GeneralTabTitle
            
            #line default
            #line hidden
, 9120), false)
);

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 216 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.Name, FieldFlex.lone));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 219 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.Client, FieldFlex.lone, new LookupSettings { EntityName = EntityName.Client }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 222 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.DealStage, FieldFlex.lone, new Dictionary<string, object> { { "disabled", "disabled" } }, EnumResources.ResourceManager));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 225 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.Comment, FieldFlex.lone, new Dictionary<string, object> { { "rows", "5" } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n");

WriteLiteral("        ");

            
            #line 227 "..\..\Views\CreateOrUpdate\Deal.cshtml"
   Write(Html.SectionHead("section", BLResources.DealFinancialIndicatorsHead));

            
            #line default
            #line hidden
WriteLiteral("\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 229 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.EstimatedProfit, FieldFlex.twins, new Dictionary<string, object> { { "readonly", "readonly" } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 230 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.Currency, FieldFlex.twins, new LookupSettings { EntityName = EntityName.Currency, ReadOnly = true }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 233 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.ActualProfit, FieldFlex.twins, new Dictionary<string, object> { { "readonly", "readonly" } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n    </div>\r\n    <div");

WriteLiteral(" class=\"Tab\"");

WriteLiteral(" id=\"AdditionalTab\"");

WriteAttribute("title", Tuple.Create(" title=\"", 10459), Tuple.Create("\"", 10498)
            
            #line 236 "..\..\Views\CreateOrUpdate\Deal.cshtml"
, Tuple.Create(Tuple.Create("", 10467), Tuple.Create<System.Object, System.Int32>(BLResources.AdditionalTabTitle
            
            #line default
            #line hidden
, 10467), false)
);

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 238 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.MainFirm, FieldFlex.twins, new LookupSettings { EntityName = EntityName.Firm, ExtendedInfo = "filterToParent=true", ParentEntityName = EntityName.Client, ParentIdPattern = "ClientId" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 241 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.StartReason, FieldFlex.lone, new Dictionary<string, object>{{"disabled", "disabled"}}, EnumResources.ResourceManager));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n");

WriteLiteral("        ");

            
            #line 243 "..\..\Views\CreateOrUpdate\Deal.cshtml"
   Write(Html.SectionHead("sectionCloseReason", BLResources.DealCloseInfoHead));

            
            #line default
            #line hidden
WriteLiteral("\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 245 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.CloseDate, FieldFlex.twins, new DateTimeSettings { ReadOnly = true }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 248 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.CloseReason, FieldFlex.lone, new Dictionary<string, object> { { "disabled", "disabled" } }, EnumResources.ResourceManager));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 251 "..\..\Views\CreateOrUpdate\Deal.cshtml"
       Write(Html.TemplateField(m => m.CloseReasonOther, FieldFlex.lone, new Dictionary<string, object> { { "rows", 3 }, { "disabled", "disabled" } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n    </div>\r\n");

});

        }
    }
}
#pragma warning restore 1591
