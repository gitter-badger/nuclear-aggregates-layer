#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubleGis.Erm.BL.UI.Web.Mvc.Views.Deal
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using DoubleGis.Erm.BL.UI.Web.Mvc.Models;
    using DoubleGis.Erm.BLCore.Resources.Server.Properties;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Controllers;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Models;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Utils;
    using DoubleGis.Erm.Platform.Common;
    using DoubleGis.Erm.Platform.Model.Entities;
    using DoubleGis.Erm.Platform.Model.Entities.Enums;
    using DoubleGis.Erm.Platform.Model.Metadata.Enums;
    using DoubleGis.Erm.Platform.UI.Web.Mvc;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Utils;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Deal/Close.cshtml")]
    public partial class Close : System.Web.Mvc.WebViewPage<CloseDealViewModel>
    {
        public Close()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 4 "..\..\Views\Deal\Close.cshtml"
  
    Layout = "../Shared/_DialogLayout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("Title", () => {

WriteLiteral(" ");

            
            #line 8 "..\..\Views\Deal\Close.cshtml"
            Write(BLResources.DealClosing);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarTitle", () => {

WriteLiteral(" ");

            
            #line 9 "..\..\Views\Deal\Close.cshtml"
                  Write(BLResources.PickCloseDealReason);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarMessage", () => {

WriteLiteral(" ");

            
            #line 10 "..\..\Views\Deal\Close.cshtml"
                    Write(BLResources.PickCloseDealReason);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

WriteLiteral("\r\n");

DefineSection("PageContent", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        Ext.onReady(function ()\r\n        {\r\n            if (!window.dialogArgu" +
"ments.length)\r\n            {\r\n                window.Ext.MessageBox.show({\r\n    " +
"                title: \'\',\r\n                    msg: Ext.LocalizedResources.Need" +
"ToSelectOneItem,\r\n                    buttons: window.Ext.MessageBox.OK,\r\n      " +
"              fn: function () { window.close(); },\r\n                    width: 3" +
"00,\r\n                    icon: window.Ext.MessageBox.ERROR\r\n                });\r" +
"\n                return;\r\n            }\r\n            else\r\n            {\r\n      " +
"          window.Ext.getDom(\"TopBarMessage\").innerHTML = String.format(window.Ex" +
"t.getDom(\"TopBarMessage\").innerHTML, window.dialogArguments.length);\r\n          " +
"  }\r\n\r\n            // write eventhandlers for buttons\r\n            Ext.get(\"Canc" +
"el\").on(\"click\", function () { window.close(); });\r\n            Ext.get(\"OK\").on" +
"(\"click\", submitForm);\r\n\r\n            Ext.get(\"CloseReason\").on(\"change\", functi" +
"on ()\r\n            {\r\n                // \"other\" reasons\r\n                if (ev" +
"ent.srcElement.value == \"Reason5\" || event.srcElement.value == \"Reason10\")\r\n    " +
"            {\r\n                    Ext.get(\"CloseReasonOther\").removeClass(\"read" +
"only\");\r\n                    Ext.getDom(\"CloseReasonOther\").disabled = false;\r\n " +
"               }\r\n                else\r\n                {\r\n                    E" +
"xt.get(\"CloseReasonOther\").addClass(\"readonly\");\r\n                    Ext.getDom" +
"(\"CloseReasonOther\").disabled = true;\r\n                    Ext.getDom(\"CloseReas" +
"onOther\").value = \"\";\r\n                }\r\n            });\r\n        });\r\n\r\n      " +
"  var submitForm = function ()\r\n        {\r\n            var closeReason = Ext.get" +
"Dom(\"CloseReason\");\r\n            if (closeReason.value == \"\") {\r\n               " +
" // TODO {all, 15.09.2014}: заменить alert на ext\'ый messagebox\r\n               " +
" alert(");

            
            #line 60 "..\..\Views\Deal\Close.cshtml"
                 Write(Html.Resource(()=>BLResources.MustPickCloseReason));

            
            #line default
            #line hidden
WriteLiteral(");\r\n                closeReason.focus();\r\n                return;\r\n            }\r" +
"\n\r\n            // \"other\" reasons\r\n            if ((closeReason.value == \"Reason" +
"5\" || closeReason.value == \"Reason10\") && Ext.getDom(\"CloseReasonOther\").value =" +
"= \"\")\r\n            {\r\n                alert(Ext.LocalizedResources.DealMustPickO" +
"therReason);\r\n                Ext.getDom(\"CloseReasonOther\").focus();\r\n         " +
"       return;\r\n            }\r\n\r\n            Ext.getDom(\"OK\").disabled = true;\r\n" +
"            Ext.getDom(\"Cancel\").disabled = true;\r\n\r\n            Ext.getDom(\"Clo" +
"seReason\").disabled = true;\r\n            Ext.get(\"CloseReasonOther\").addClass(\"r" +
"eadonly\");\r\n            Ext.getDom(\"CloseReasonOther\").disabled = true;\r\n       " +
"     Ext.get(\"Comment\").addClass(\"readonly\");\r\n            Ext.getDom(\"Comment\")" +
".disabled = true;\r\n\r\n            window.Ext.get(\"Notifications\").removeClass(\"No" +
"tifications\");\r\n\r\n            if (window.dialogArguments && window.dialogArgumen" +
"ts.length)\r\n            {\r\n                var arr = window.dialogArguments;\r\n  " +
"              processItem(arr, 0);\r\n            }\r\n            else\r\n           " +
" {\r\n                window.Ext.MessageBox.show({\r\n                    title: \'\'," +
"\r\n                    msg: Ext.LocalizedResources.NeedToSelectOneOrMoreItems,\r\n " +
"                   buttons: window.Ext.MessageBox.OK,\r\n                    fn: f" +
"unction () { window.close(); },\r\n                    width: 300,\r\n              " +
"      icon: window.Ext.MessageBox.ERROR\r\n                });\r\n                re" +
"turn;\r\n            }\r\n        };\r\n\r\n        var processItem = function (items, i" +
"ndex)\r\n        {\r\n            if (index == items.length)\r\n            {\r\n       " +
"         window.returnValue = true;\r\n                window.close();\r\n          " +
"      return;\r\n            }\r\n\r\n            var callLink = String.format(\"/Deal/" +
"Close?id={0}\", items[index]);\r\n\r\n            window.Ext.Ajax.request({\r\n        " +
"        timeout: 1200000,\r\n                url: callLink,\r\n                param" +
"s:\r\n                {\r\n                    closeReason: window.Ext.getDom(\"Close" +
"Reason\").value,\r\n                    closeReasonOther: window.Ext.getDom(\"CloseR" +
"easonOther\").value,\r\n                    comment: window.Ext.getDom(\"Comment\").v" +
"alue\r\n                },\r\n                method: \'POST\',\r\n                succe" +
"ss: function ()\r\n                {\r\n                    processItem(items, index" +
" + 1);\r\n                },\r\n                failure: fail\r\n            });\r\n    " +
"    };\r\n\r\n        var fail = function (xmlHttpRequest)\r\n        {\r\n            w" +
"indow.Ext.getDom(\"Notifications\").innerHTML = xmlHttpRequest.responseText;\r\n    " +
"        window.Ext.get(\"Notifications\").addClass(\"Notifications\");\r\n            " +
"window.Ext.getDom(\"OK\").disabled = false;\r\n            window.Ext.getDom(\"Cancel" +
"\").disabled = false;\r\n\r\n            window.Ext.getDom(\"CloseReason\").disabled = " +
"false;\r\n            window.Ext.get(\"CloseReasonOther\").removeClass(\"readonly\");\r" +
"\n            window.Ext.getDom(\"CloseReasonOther\").disabled = false;\r\n          " +
"  window.Ext.get(\"Comment\").removeClass(\"readonly\");\r\n            window.Ext.get" +
"Dom(\"Comment\").disabled = false;\r\n        };\r\n    </script>\r\n");

            
            #line 146 "..\..\Views\Deal\Close.cshtml"
    
            
            #line default
            #line hidden
            
            #line 146 "..\..\Views\Deal\Close.cshtml"
     using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {
    
            
            #line default
            #line hidden
            
            #line 148 "..\..\Views\Deal\Close.cshtml"
Write(Html.HiddenFor(m => m.Id));

            
            #line default
            #line hidden
            
            #line 148 "..\..\Views\Deal\Close.cshtml"
                              

            
            #line default
            #line hidden
WriteLiteral("    <table");

WriteLiteral(" cellspacing=\"5\"");

WriteLiteral(" cellpadding=\"5\"");

WriteLiteral(" width=\"100%\"");

WriteLiteral(">\r\n        <colgroup>\r\n            <col");

WriteLiteral(" width=\"100%\"");

WriteLiteral(" />\r\n        </colgroup>\r\n        <tbody>\r\n            <tr>\r\n                <td>" +
"\r\n                    <div");

WriteLiteral(" style=\"height: 24px;\"");

WriteLiteral(" id=\"Notifications\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 157 "..\..\Views\Deal\Close.cshtml"
                   Write(Model.Message);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n             " +
"   <td>\r\n");

WriteLiteral("                    ");

            
            #line 162 "..\..\Views\Deal\Close.cshtml"
               Write(Html.LabelFor(m => m.CloseReason));

            
            #line default
            #line hidden
WriteLiteral(":\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <t" +
"d>\r\n");

WriteLiteral("                    ");

            
            #line 167 "..\..\Views\Deal\Close.cshtml"
               Write(Html.DropDownListFor(m => m.CloseReason, EnumResources.ResourceManager, new Dictionary<string, object> { { "class", "inputfields" } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </td>\r\n            </tr>\r\n            <tr");

WriteLiteral(" style=\"height: 10px\"");

WriteLiteral(">\r\n                <td>\r\n                </td>\r\n            </tr>\r\n            <t" +
"r>\r\n                <td>\r\n");

WriteLiteral("                    ");

            
            #line 176 "..\..\Views\Deal\Close.cshtml"
               Write(Html.LabelFor(m => m.CloseReasonOther));

            
            #line default
            #line hidden
WriteLiteral(":\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <t" +
"d>\r\n");

WriteLiteral("                    ");

            
            #line 181 "..\..\Views\Deal\Close.cshtml"
               Write(Html.TextBoxFor(m => m.CloseReasonOther, new Dictionary<string, object> { { "class", "readonly inputfields" }, {"disabled", "disabled"}, {"style", "width:100%"} } ));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </td>\r\n            </tr>\r\n            <tr");

WriteLiteral(" style=\"height: 10px\"");

WriteLiteral(">\r\n                <td>\r\n                </td>\r\n            </tr>\r\n            <t" +
"r>\r\n                <td>\r\n");

WriteLiteral("                    ");

            
            #line 190 "..\..\Views\Deal\Close.cshtml"
               Write(Html.LabelFor(m => m.Comment));

            
            #line default
            #line hidden
WriteLiteral(":\r\n                </td>\r\n            </tr>\r\n            <tr");

WriteLiteral(" style=\"height: 150px\"");

WriteLiteral(">\r\n                <td>\r\n");

WriteLiteral("                    ");

            
            #line 195 "..\..\Views\Deal\Close.cshtml"
               Write(Html.TextAreaFor(m => m.Comment, new Dictionary<string, object> { {"class", "inputfields"}, {"rows", "10"} } ));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n");

            
            #line 200 "..\..\Views\Deal\Close.cshtml"
    }

            
            #line default
            #line hidden
});

        }
    }
}
#pragma warning restore 1591
