#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubleGis.Erm.BLCore.UI.Web.Mvc.Views.LocalMessage
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using DoubleGis.Erm.BLCore.Resources.Server.Properties;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Controllers;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Models;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Utils;
    using DoubleGis.Erm.Platform.Common;
    using DoubleGis.Erm.Platform.Model.Entities;
    using DoubleGis.Erm.Platform.Model.Entities.Enums;
    using DoubleGis.Erm.Platform.Model.Metadata.Enums;
    using DoubleGis.Erm.Platform.UI.Web.Mvc;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Utils;
    
    #line 1 "..\..\Views\LocalMessage\Export.cshtml"
    using Platform.Model.Metadata.Enums;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/LocalMessage/Export.cshtml")]
    public partial class Export : System.Web.Mvc.WebViewPage<LocalMessageExportViewModel>
    {
        public Export()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 5 "..\..\Views\LocalMessage\Export.cshtml"
  
    Layout = "../Shared/_DialogLayout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("Title", () => {

WriteLiteral(" Выгрузить сообщение ");

});

DefineSection("TopBarTitle", () => {

WriteLiteral(" Выгрузить сообщение ");

});

DefineSection("TopBarMessage", () => {

WriteLiteral(" Выгрузить сообщение ");

});

WriteLiteral("\r\n");

DefineSection("PageContent", () => {

WriteLiteral("\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 307), Tuple.Create("\"", 367)
, Tuple.Create(Tuple.Create("", 313), Tuple.Create("/Scripts/Tooltip.js?", 313), true)
            
            #line 15 "..\..\Views\LocalMessage\Export.cshtml"
, Tuple.Create(Tuple.Create("", 333), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 333), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        Ext.onReady(function() {\r\n\r\n            Ext.each(Ext.CardLookupSetting" +
"s, function(item) {\r\n                new window.Ext.ux.LookupField(item);\r\n     " +
"       }, this);\r\n\r\n            // show error messages\r\n            if (Ext.getD" +
"om(\"Notifications\").innerHTML.trim() != \"\") {\r\n                Ext.getDom(\"Notif" +
"ications\").style.display = \"block\";\r\n            }\r\n\r\n            var depList = " +
"window.Ext.getDom(\"ViewConfig_DependencyList\");\r\n            if (depList.value) " +
"{\r\n                this.DependencyHandler = new window.Ext.DoubleGis.DependencyH" +
"andler();\r\n                this.DependencyHandler.register(window.Ext.decode(dep" +
"List.value), window.EntityForm);\r\n            }\r\n\r\n            var orgUnitLookup" +
" = Ext.getCmp(\"OrganizationUnit\");\r\n            var dropDown = Ext.getDom(\"Integ" +
"rationType\");\r\n\r\n            if (dropDown.value == \"AccountDetailsTo1C\" || dropD" +
"own.value == \"LegalPersonsTo1C\") {\r\n                orgUnitLookup.extendedInfo =" +
" \"filterByMovedToErm=true\";\r\n            } else {\r\n                orgUnitLookup" +
".extendedInfo = \"\";\r\n            }\r\n\r\n            Ext.get(\"Cancel\").on(\"click\", " +
"function() { window.close(); });\r\n            Ext.get(\"OK\").on(\"click\", function" +
"() {\r\n                if (Ext.DoubleGis.FormValidator.validate(window.EntityForm" +
")) {\r\n                    Ext.getDom(\"OK\").disabled = \"disabled\";\r\n             " +
"       Ext.getDom(\"Cancel\").disabled = \"disabled\";\r\n                    window.E" +
"xt.each(window.Ext.query(\"input.x-calendar\", window.EntityForm), function(node) " +
"{\r\n                        node.value = window.Ext.getCmp(node.id).getValue()\r\n " +
"                           ? new Date(window.Ext.getCmp(node.id).getValue()).for" +
"mat(Ext.CultureInfo.DateTimeFormatInfo.PhpInvariantDateTimePattern)\r\n           " +
"                 : \"\";\r\n                    });\r\n                    Ext.getDom(" +
"\"Notifications\").style.display = \"none\";\r\n                    window.EntityForm." +
"submit();\r\n                }\r\n            });\r\n\r\n            Ext.get(\"Integratio" +
"nType\").on(\"change\", function() {\r\n                var orgUnitLookup = Ext.getCm" +
"p(\"OrganizationUnit\");\r\n                var dropDown = Ext.getDom(\"IntegrationTy" +
"pe\");\r\n\r\n                if (dropDown.value == \"AccountDetailsTo1C\" || dropDown." +
"value == \"LegalPersonsTo1C\" || dropDown.value == \"AccountDetailsToServiceBus\") {" +
"\r\n                    orgUnitLookup.extendedInfo = \"filterByMovedToErm=true\";\r\n " +
"               } else {\r\n                    orgUnitLookup.extendedInfo = \"\";\r\n " +
"               }\r\n            });\r\n\r\n            //Запрещаем выбрать поздравлени" +
"я и уведомления об оплате. Это временное требование. Убрать, когда нужно будет\r\n" +
"            var sendingTypes = document.getElementById(\'MailSendingType\').getEle" +
"mentsByTagName(\'option\');\r\n            sendingTypes[1].disabled = true;\r\n       " +
"     sendingTypes[2].disabled = true;\r\n        });\r\n    </script>\r\n");

            
            #line 76 "..\..\Views\LocalMessage\Export.cshtml"
    
            
            #line default
            #line hidden
            
            #line 76 "..\..\Views\LocalMessage\Export.cshtml"
     using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" class=\"Tab\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 79 "..\..\Views\LocalMessage\Export.cshtml"
       Write(Html.Hidden("ViewConfig_DependencyList", Model.ViewConfig.DependencyList));

            
            #line default
            #line hidden
WriteLiteral("\r\n            <div");

WriteLiteral(" style=\"display: none; height: 26px;\"");

WriteLiteral(" id=\"Notifications\"");

WriteLiteral(" class=\"Notifications\"");

WriteLiteral(" onmouseover=\" AddTooltip(Ext.getDom(\'Notifications\') ? Ext.getDom(\'Notifications" +
"\').innerHTML : \'\'); \"");

WriteLiteral(" onmouseout=\" RemoveTooltip(); \"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 81 "..\..\Views\LocalMessage\Export.cshtml"
           Write(Model.Message);

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n            <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 84 "..\..\Views\LocalMessage\Export.cshtml"
           Write(Html.TemplateField(m => m.IntegrationType, FieldFlex.lone, null, LocalMessageController.IntegrationTypeExportResourceManager));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n            <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 87 "..\..\Views\LocalMessage\Export.cshtml"
           Write(Html.TemplateField(m => m.OrganizationUnit, FieldFlex.lone, new LookupSettings { EntityName = EntityName.OrganizationUnit }));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n            <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 90 "..\..\Views\LocalMessage\Export.cshtml"
           Write(Html.TemplateField(m => m.MailSendingType, FieldFlex.lone, null, EnumResources.ResourceManager));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n            <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 93 "..\..\Views\LocalMessage\Export.cshtml"
           Write(Html.TemplateField(m => m.PeriodStart, FieldFlex.lone, new DateTimeSettings
                    {
                        ShiftOffset = false,
                        PeriodType = PeriodType.MonthlyLowerBound,
                        MinDate = new DateTime(2010, 12, 1),
                        MaxDate = DateTime.UtcNow.AddMonths(1).AddDays(-1 * (DateTime.UtcNow.Day - 1))
                    }));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n            <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 102 "..\..\Views\LocalMessage\Export.cshtml"
           Write(Html.TemplateField(m => m.PeriodStartFor1C, FieldFlex.lone, new DateTimeSettings
                    {
                        ShiftOffset = false,
                        MinDate = new DateTime(2010, 12, 1),
                        MaxDate = DateTime.Today
                    }));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n            <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 110 "..\..\Views\LocalMessage\Export.cshtml"
           Write(Html.TemplateField(m => m.IncludeRegionalAdvertisement, FieldFlex.lone));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n            <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 113 "..\..\Views\LocalMessage\Export.cshtml"
           Write(Html.TemplateField(m => m.CreateCsvFile, FieldFlex.lone));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n        </div>\r\n");

            
            #line 116 "..\..\Views\LocalMessage\Export.cshtml"
    }

            
            #line default
            #line hidden
});

        }
    }
}
#pragma warning restore 1591
