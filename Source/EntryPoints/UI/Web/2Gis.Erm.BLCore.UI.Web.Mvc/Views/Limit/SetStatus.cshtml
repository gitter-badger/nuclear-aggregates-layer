@model SetLimitStatusViewModel

@{
	Layout = "../Shared/_DialogLayout.cshtml";
}

@section Title { @BLResources.SetLimitStatusDialogTitle }
@section TopBarTitle { @BLResources.SetLimitStatusDialogTitle }
@section TopBarMessage { }

@section PageScript
{
	<script type="text/javascript">
	    Ext.onReady(function ()
	    {
	        Ext.get("Cancel").on("click", function () { window.close(); });
	        Ext.get("OK").on("click", function ()
	        {
	            Ext.getDom("Id").value = limitId;
	            Ext.getDom("Status").value = status;
	            Ext.getDom("CrmIds").value = crmIds;

	            Ext.getDom("OK").disabled = "disabled";
	            Ext.getDom("Cancel").disabled = "disabled";
	            EntityForm.submit();
	        });

	        if (Ext.getDom("Notifications").innerHTML.trim() == "OK")
	        {
	            window.close();
	            return;
	        }
	        else if (Ext.getDom("Notifications").innerHTML.trim() != "")
	        {
	            Ext.get("Notifications").addClass("Notifications");
	            Ext.getDom("OK").disabled = "disabled";
	            return;
	        }

	        var crmIds;
	        var limitId;
	        var status;

	        if (window.dialogArguments) {
	            limitId = window.dialogArguments.limitId;
	            status = window.dialogArguments.status;
	        } else {
	            var queryParameters = Ext.urlDecode(window.location.search.substring(1));
	            crmIds = queryParameters.CrmIds;
	            status = queryParameters.Status;
	        }

	        var statusLocalized;
	        switch (status) {
	            case 'Opened':
	                statusLocalized = Ext.LocalizedResources.LimitStatusOpened;
	                break;
	            case 'Approved':
	                statusLocalized = Ext.LocalizedResources.LimitStatusApproved;
	                break;
	            case 'Rejected':
	                statusLocalized = Ext.LocalizedResources.LimitStatusRejected;
	                break;
	            default:
	                statusLocalized = Ext.LocalizedResources.LimitStatusError;
	                break;
	        }
	        // TODO {all, 18.12.2013}: возможно некоректное отображение диакритики
	        // TODO {all, 18.12.2013}: ресурс можно перенести в ClientResourceStorage
	        Ext.getDom("TopBarMessage").innerText = '@BLResources.SetLimitStatusDialogConfirmation' + ' ' + statusLocalized + '?';
	    });
	</script>    
}

@section PageContent
{
    <div id="Notifications">
        @Model.Message
    </div>
    
    @using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {
		@Html.HiddenFor(m => m.Id)
		@Html.HiddenFor(m => m.Status)
		@Html.HiddenFor(m => m.CrmIds)
	}
}