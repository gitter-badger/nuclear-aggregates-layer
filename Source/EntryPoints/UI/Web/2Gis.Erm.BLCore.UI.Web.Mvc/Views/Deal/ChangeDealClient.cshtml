
@model ChangeDealClientViewModel

@{
    Layout = "../Shared/_DialogLayout.cshtml";
}

@section Title { @BLResources.ChangeClient }
@section TopBarTitle { @BLResources.ChangeClient }
@section TopBarMessage { @BLResources.ChangeClientLegend }

@section PageContent
{
    <script type="text/javascript">
        Ext.onReady(function ()
        {

            Ext.each(Ext.CardLookupSettings, function (item, i)
            {
                new window.Ext.ux.LookupField(item);
            }, this);

            //Show error messages
            if (Ext.getDom("Notifications").innerHTML.trim() == "OK")
            {
                window.returnValue = true;
                window.close();
                return;
            }
            else if (Ext.getDom("Notifications").innerHTML.trim() != "")
            {
                Ext.get("Notifications").addClass("Notifications");
            }

            if (!window.dialogArguments.length)
            {
                alert('"Resources.NeedToSelectOneOrMoreItems');
                window.close();
                return;
            }
            else
            {
                Ext.getDom("DealId").value = window.dialogArguments;
            }

            //write eventhandlers for buttons
            Ext.get("Cancel").on("click", function () { window.returnValue = null; window.close(); });
            Ext.get("OK").on("click", function ()
            {
                if (window.Ext.getDom("ClientId").value == "")
                {
                    window.Ext.MessageBox.show({
                        title: '',
                        msg: 'Необходимо указать клиента',
                        buttons: window.Ext.MessageBox.OK,
                        width: 300,
                        icon: window.Ext.MessageBox.ERROR
                    });
                    return;
                }

                Ext.getDom("OK").disabled = "disabled";
                Ext.getDom("Cancel").disabled = "disabled";
                EntityForm.submit();
            });
        });

    </script>
    @using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {
    <table cellspacing="5" cellpadding="5" width="100%" height="100%">
        <colgroup>
            <col width="26" />
            <col />
        </colgroup>
        <tbody>
            <tr>
                <td colspan="2">
                    <div style="height: 24px;" id="Notifications">
                        @Model.Message</div>
                </td>
            </tr>
            <tr>
                    <td>Клиент:</td>
                    <td>
                    <table style="table-layout: fixed" cellspacing="0" cellpadding="0" width="100%">
                        <tbody>
                            <tr>
                                <td>
                                    @Html.LookupFor(m => m.Client, new LookupSettings { EntityName = EntityName.Client})
                                    @Html.ValidationMessageFor(m => m.Client, null, new Dictionary<string, object> { { "class", "error" } })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </td>
            </tr>
            <tr style="display: none">
                <td>
                    @Html.HiddenFor(m=>m.DealId)
                </td>
            </tr>
        </tbody>
    </table>
    }
}