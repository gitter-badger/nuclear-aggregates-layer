#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubleGis.Erm.BLCore.UI.Web.Mvc.Views.GroupOperation
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using DoubleGis.Erm.BLCore.Resources.Server.Properties;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Controllers;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Models;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Utils;
    using DoubleGis.Erm.Platform.Common;
    using DoubleGis.Erm.Platform.Model.Entities;
    using DoubleGis.Erm.Platform.Model.Entities.Enums;
    using DoubleGis.Erm.Platform.Model.Metadata.Enums;
    using DoubleGis.Erm.Platform.UI.Web.Mvc;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Utils;
    
    #line 1 "..\..\Views\GroupOperation\Assign.cshtml"
    using Platform.Common.Utils;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/GroupOperation/Assign.cshtml")]
    public partial class Assign : System.Web.Mvc.WebViewPage<Models.GroupOperation.AssignViewModel>
    {
        public Assign()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 5 "..\..\Views\GroupOperation\Assign.cshtml"
  
    Layout = "../Shared/_DialogLayout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("Title", () => {

WriteLiteral(" ");

            
            #line 9 "..\..\Views\GroupOperation\Assign.cshtml"
            Write(BLResources.GroupOperationConfirm);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarTitle", () => {

WriteLiteral(" ");

            
            #line 10 "..\..\Views\GroupOperation\Assign.cshtml"
                  Write(string.Format(BLResources.AssignAssignMessage, Model.EntityTypeName.ToStringLocalized(EnumResources.ResourceManager, EnumResources.Culture)));

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarMessage", () => {

WriteLiteral(" ");

            
            #line 11 "..\..\Views\GroupOperation\Assign.cshtml"
                    Write(string.Format(BLResources.GroupOperationTopBarMessage, Model.EntityTypeName.ToStringLocalized(EnumResources.ResourceManager, EnumResources.Culture)));

            
            #line default
            #line hidden
WriteLiteral(" ");

});

WriteLiteral("\r\n");

DefineSection("PageContent", () => {

WriteLiteral("\r\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteAttribute("href", Tuple.Create(" href=\"", 607), Tuple.Create("\"", 670)
, Tuple.Create(Tuple.Create("", 614), Tuple.Create("/Content/Progress.css?", 614), true)
            
            #line 15 "..\..\Views\GroupOperation\Assign.cshtml"
, Tuple.Create(Tuple.Create("", 636), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 636), false)
);

WriteLiteral(" />\r\n\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 689), Tuple.Create("\"", 762)
, Tuple.Create(Tuple.Create("", 695), Tuple.Create("/Scripts/Ext.Ajax.syncRequest.js?", 695), true)
            
            #line 17 "..\..\Views\GroupOperation\Assign.cshtml"
, Tuple.Create(Tuple.Create("", 728), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 728), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 809), Tuple.Create("\"", 890)
, Tuple.Create(Tuple.Create("", 815), Tuple.Create("/Scripts/DoubleGis.UI.GroupOperations.js?", 815), true)
            
            #line 18 "..\..\Views\GroupOperation\Assign.cshtml"
, Tuple.Create(Tuple.Create("", 856), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 856), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 937), Tuple.Create("\"", 997)
, Tuple.Create(Tuple.Create("", 943), Tuple.Create("/Scripts/Tooltip.js?", 943), true)
            
            #line 19 "..\..\Views\GroupOperation\Assign.cshtml"
, Tuple.Create(Tuple.Create("", 963), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 963), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n    \r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        Ext.namespace(\'Ext.DoubleGis.UI.Assign\');\r\n        Ext.DoubleGis.UI.As" +
"sign.AssignProcessor = Ext.extend(Ext.DoubleGis.UI.GroupProcessor, {\r\n          " +
"  FailedEntitiesMessages: [],\r\n            OwnerCode: 0,\r\n            IsPartialA" +
"ssign: false,\r\n            UserCodeLookup: {},\r\n            bypassValidationInfo" +
": false, // информация о том, есть ли привилегия \"Обработка лицевых счетов с зад" +
"олжностью\"\r\n            BypassValidationView: {},   // представление для Предлож" +
"енния продолжить операцию, если есть задолженность по лицевым счетам\r\n          " +
"  constructor: function (config) {\r\n                Ext.apply(config, {\r\n       " +
"             listeners: {\r\n                        configspecificcontrols: funct" +
"ion () {\r\n                            this.ConfigCustomControls();\r\n            " +
"            },\r\n                        applyusersettings: function () {\r\n      " +
"                      this.ApplyUserSettings();\r\n                        },\r\n   " +
"                     processingfinished: function () {\r\n                        " +
"    this.ProcessingFinished();\r\n                        },\r\n                    " +
"    entityprocessingfail: function (msg) {\r\n                            this.Ent" +
"ityAssignFailed(msg);\r\n                        }\r\n                    }\r\n       " +
"         });\r\n                Ext.DoubleGis.UI.Assign.AssignProcessor.superclass" +
".constructor.call(this, config);\r\n            },\r\n            ConfigCustomContro" +
"ls: function () {\r\n                var onRadioClick = this.RadioClick.createDele" +
"gate(this);\r\n                Ext.get(\"rdoAssignToMe\").on(\"click\", onRadioClick);" +
"\r\n                Ext.get(\"rdoAssignToUser\").on(\"click\", onRadioClick);\r\n       " +
"         this.UserCodeLookup = Ext.getCmp(\"UserCode\");\r\n            },\r\n        " +
"    RadioClick: function () {\r\n                if (Ext.getDom(\"rdoAssignToMe\").c" +
"hecked) {\r\n                    this.UserCodeLookup.disable();\r\n                }" +
"\r\n                else if (Ext.getDom(\"rdoAssignToUser\").checked) {\r\n           " +
"         this.UserCodeLookup.enable();\r\n                }\r\n            },\r\n     " +
"       IsUserSettingsValid: function () {\r\n                if (Ext.getDom(\"rdoAs" +
"signToUser\").checked) {\r\n                    if (Ext.getDom(\"UserCode\").value ==" +
" \"\") {\r\n                        Ext.MessageBox.show({\r\n                         " +
"   title: \'\',\r\n                            // TODO {all, 18.12.2013}: возможно н" +
"екоректное отображение диакритики\r\n                            // TODO {all, 18." +
"12.2013}: ресурс можно перенести в ClientResourceStorage\r\n                      " +
"      msg: \'");

            
            #line 70 "..\..\Views\GroupOperation\Assign.cshtml"
                             Write(BLResources.AssignMustPickUser);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                            buttons: window.Ext.MessageBox.OK,\r\n             " +
"               width: 300,\r\n                            icon: window.Ext.Message" +
"Box.ERROR\r\n                        });\r\n                        return false;\r\n " +
"                   }\r\n                }\r\n\r\n                return true;\r\n       " +
"     },\r\n            ApplyUserSettings: function () {\r\n                this.Owne" +
"rCode = Ext.getDom(\"rdoAssignToUser\").checked ? this.UserCodeLookup.getValue().i" +
"d : \"\";\r\n\r\n                var ctx = Ext.getDom(\"rdoCascadeAssign\");\r\n          " +
"      this.IsPartialAssign = ctx && !ctx.checked;\r\n\r\n                Ext.getDom(" +
"\"rdoAssignToMe\").disabled = \"disabled\";\r\n                Ext.getDom(\"rdoAssignTo" +
"User\").disabled = \"disabled\";\r\n                this.UserCodeLookup.disable();\r\n " +
"           },\r\n            CreateParamsForControllerCall: function (entityId) {\r" +
"\n                return { entityId: entityId, ownerCode: this.OwnerCode, isParti" +
"alAssign: this.IsPartialAssign, bypassValidation: null };\r\n            },\r\n     " +
"       ValidateEntryProcessingSuccessStatus: function (message) {\r\n             " +
"   var bypassValidationInfo = window.Ext.decode(message);\r\n                if (b" +
"ypassValidationInfo.CanProceed && bypassValidationInfo.CanProceed == true) {\r\n  " +
"                  var isOperationContinue = confirm(bypassValidationInfo.Message" +
");\r\n                    if (isOperationContinue) {\r\n                        var " +
"params = this.CreateParamsForControllerCall(bypassValidationInfo.EntityId);\r\n   " +
"                     params.bypassValidation = true;\r\n                        va" +
"r url = this.EvaluateOperationUrl();\r\n                        this.ProcessSingle" +
"Entity(url, params);\r\n\r\n                        return this.SuccessStatus.Reproc" +
"essingRequired;\r\n                    }\r\n\r\n                    return this.Succes" +
"sStatus.Rejected;\r\n                }\r\n                return this.SuccessStatus." +
"Approved;\r\n            },\r\n            ProcessingFinished: function () {\r\n      " +
"          // innerHTML элемента Notifications присваивается по окончании операци" +
"и (см. файл GroupOperations.js),\r\n                // динамически засовываем туда" +
" линк.\r\n                if (this.SuccessProcessed < this.EntitiesCount && !this." +
"IsSingleEntityProcessing) {\r\n\r\n                    this.FinishOperation(this.Fai" +
"ledEntitiesMessages.join(\'\\r\\n\'));\r\n\r\n                    var notifications = Ex" +
"t.getDom(\'Notifications\');\r\n                    var errorsLinkNode = document.cr" +
"eateElement(\"a\");\r\n                    errorsLinkNode.id = \'ErrorsLink\';\r\n      " +
"              errorsLinkNode.href = \'#\';\r\n                    errorsLinkNode.app" +
"endChild(document.createTextNode(\'");

            
            #line 122 "..\..\Views\GroupOperation\Assign.cshtml"
                                                                   Write(BLResources.DisplayErrorsList);

            
            #line default
            #line hidden
WriteLiteral("\'));\r\n                    notifications.appendChild(errorsLinkNode);\r\n           " +
"         Ext.getDom(\'ErrorsLink\').onclick = function () {\r\n                     " +
"   Ext.getDom(\'ErrorsForm\').submit();\r\n                    };\r\n                 " +
"   Ext.getDom(\'ErrorsLink\').onclick();\r\n                }\r\n                else " +
"{\r\n                    this.FinishOperation();\r\n                }\r\n            }" +
",\r\n            EntityAssignFailed: function (msg) {\r\n                this.Failed" +
"EntitiesMessages[this.FailedEntitiesMessages.length] = msg;\r\n            },\r\n   " +
"         FinishOperation: function (msg) {\r\n                var finishOperationR" +
"esponse = window.Ext.Ajax.syncRequest({\r\n                    method: \'POST\',\r\n  " +
"                  url: \'/Operation/CreateOperationWithErrorLog\',\r\n              " +
"      params: { operationId: Ext.getDom(\"operationId\").value, log: msg, contentT" +
"ype: \'text/csv\', logFileName: \'Assign_errors.csv\' }\r\n                });\r\n      " +
"          if ((finishOperationResponse.conn.status >= 200 && finishOperationResp" +
"onse.conn.status < 300) || (Ext.isIE && finishOperationResponse.conn.status == 1" +
"223)) {\r\n                }\r\n                else {\r\n                    alert(fi" +
"nishOperationResponse.conn.responseText);\r\n                    return;\r\n        " +
"        }\r\n            }\r\n        });\r\n\r\n        Ext.onReady(function ()\r\n      " +
"  {\r\n            var ids = !window.dialogArguments ? [] : (window.dialogArgument" +
"s.Values ? window.dialogArguments.Values : window.dialogArguments);\r\n\r\n         " +
"   //window.Tooltip = new Ext.DoubleGis.UI.Tooltip(document);\r\n            Ext.g" +
"etDom(\'DivErrors\').style.visibility = \'hidden\';\r\n            Ext.getDom(\'PageCon" +
"tentCell\').style[\"vertical-align\"] = \"top\";\r\n            var config = {\r\n       " +
"         Entities: ids, // массив id сущностей\r\n                OperationName: \'" +
"");

            
            #line 160 "..\..\Views\GroupOperation\Assign.cshtml"
                           Write(Model.OperationName);

            
            #line default
            #line hidden
WriteLiteral("\', // тип операции - Qualify, Assign, ChangeTerritory\r\n                CloseButto" +
"nText: \'");

            
            #line 161 "..\..\Views\GroupOperation\Assign.cshtml"
                             Write(BLResources.Close);

            
            #line default
            #line hidden
WriteLiteral("\', // локализованная надпись для кнопки закрыть\r\n                NeedToSelectOneO" +
"rMoreItemsMsg: \'");

            
            #line 162 "..\..\Views\GroupOperation\Assign.cshtml"
                                           Write(BLResources.NeedToSelectOneOrMoreItems);

            
            #line default
            #line hidden
WriteLiteral("\', // локализованная надпись о том что нужно выбрать один или несколько элементов" +
"\r\n                ResultMessageTitle: \'");

            
            #line 163 "..\..\Views\GroupOperation\Assign.cshtml"
                                Write(BLResources.GroupOperationResultsTitle);

            
            #line default
            #line hidden
WriteLiteral("\', // локализованная надпись - заголовок для результатов операции\r\n              " +
"  ResultMessageTemplate: \'");

            
            #line 164 "..\..\Views\GroupOperation\Assign.cshtml"
                                   Write(BLResources.GroupOperationResultsMessage);

            
            #line default
            #line hidden
WriteLiteral(@"' // локализованная надпись - шаблон строки для результатов операции
            };
            var assignProcessor = new Ext.DoubleGis.UI.Assign.AssignProcessor(config);
            if (!assignProcessor.CheckProcessingPossibility())
            {
                return;
            }
            assignProcessor.Process();
        });
    </script>
    
    <div");

WriteLiteral(" style=\"height: 8px; padding-left: 5px;padding-top: 4px;position: fixed;\"");

WriteLiteral(" id=\"DivErrors\"");

WriteLiteral(">\r\n");

            
            #line 176 "..\..\Views\GroupOperation\Assign.cshtml"
    
            
            #line default
            #line hidden
            
            #line 176 "..\..\Views\GroupOperation\Assign.cshtml"
     using (Html.BeginForm("GetOperationLog", "Operation", FormMethod.Post, new Dictionary<string, object> { { "target", "_blank" }, { "id", "ErrorsForm" } }))
    {

            
            #line default
            #line hidden
WriteLiteral("        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"operationId\"");

WriteAttribute("value", Tuple.Create(" value=\"", 9474), Tuple.Create("\"", 9497)
            
            #line 178 "..\..\Views\GroupOperation\Assign.cshtml"
, Tuple.Create(Tuple.Create("", 9482), Tuple.Create<System.Object, System.Int32>(Guid.NewGuid()
            
            #line default
            #line hidden
, 9482), false)
);

WriteLiteral(" />\r\n");

            
            #line 179 "..\..\Views\GroupOperation\Assign.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("        \r\n   </div>\r\n\r\n");

            
            #line 183 "..\..\Views\GroupOperation\Assign.cshtml"
    
            
            #line default
            #line hidden
            
            #line 183 "..\..\Views\GroupOperation\Assign.cshtml"
     using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {

            
            #line default
            #line hidden
WriteLiteral("        <table");

WriteLiteral(" cellspacing=\"5\"");

WriteLiteral(" cellpadding=\"5\"");

WriteLiteral(" width=\"100%\"");

WriteLiteral(" style=\"position: fixed;\"");

WriteLiteral(">\r\n            <colgroup>\r\n                <col");

WriteLiteral(" width=\"32\"");

WriteLiteral(" />\r\n                <col />\r\n            </colgroup>\r\n            <tbody>\r\n     " +
"           <tr>\r\n                    <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" style=\"height: 30px;\"");

WriteLiteral(" id=\"Notifications\"");

WriteLiteral(" \r\n                             onmouseover=\"AddTooltip(Ext.getDom(\'Notifications" +
"\').childNodes.length > 0 ? Ext.getDom(\'Notifications\').childNodes[0].data : \'\');" +
"\"");

WriteLiteral(" \r\n                             onmouseout=\"RemoveTooltip();\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 196 "..\..\Views\GroupOperation\Assign.cshtml"
                       Write(Model.Message);

            
            #line default
            #line hidden
WriteLiteral("\r\n                        </div>\r\n                    </td>\r\n                </tr" +
">\r\n                <tr>\r\n                    <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <input");

WriteLiteral(" id=\"rdoAssignToMe\"");

WriteLiteral(" class=\"radio\"");

WriteLiteral(" checked=\"checked\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"AssignedUser\"");

WriteLiteral(" />\r\n                    </td>\r\n                    <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(" for=\"rdoAssignTome\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 206 "..\..\Views\GroupOperation\Assign.cshtml"
                       Write(BLResources.AssignAssignToMe);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                        <br />\r\n                        <div");

WriteLiteral(" style=\"color: #444444; padding-top: 5px\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 209 "..\..\Views\GroupOperation\Assign.cshtml"
                       Write(String.Format(BLResources.AssignAssignToMeLegend, Model.EntityTypeName.ToStringLocalized(EnumResources.ResourceManager, EnumResources.Culture)));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n " +
"                   <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n                        &nbsp;\r\n                    </td>\r\n                </t" +
"r>\r\n                <tr>\r\n                    <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <input");

WriteLiteral(" id=\"rdoAssignToUser\"");

WriteLiteral(" class=\"radio\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"AssignedUser\"");

WriteLiteral(" />\r\n                    </td>\r\n                    <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(" for=\"rdoAssignToUser\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 223 "..\..\Views\GroupOperation\Assign.cshtml"
                       Write(BLResources.AssignAssignToOther);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                        <br />\r\n                        <div");

WriteLiteral(" style=\"padding-bottom: 10px; color: #444444; padding-top: 5px\"");

WriteLiteral(">\r\n                            <label");

WriteLiteral(" for=\"rdoAssignToUser\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 227 "..\..\Views\GroupOperation\Assign.cshtml"
                           Write(String.Format(BLResources.AssignAssignToOtherLegend, Model.EntityTypeName.ToStringLocalized(EnumResources.ResourceManager, EnumResources.Culture)));

            
            #line default
            #line hidden
WriteLiteral("</label></div>\r\n                        <table");

WriteLiteral(" style=\"table-layout: fixed\"");

WriteLiteral(" cellspacing=\"0\"");

WriteLiteral(" cellpadding=\"0\"");

WriteLiteral(" width=\"100%\"");

WriteLiteral(">\r\n                            <tbody>\r\n                                <tr>\r\n   " +
"                                 <td>\r\n");

WriteLiteral("                                        ");

            
            #line 232 "..\..\Views\GroupOperation\Assign.cshtml"
                                   Write(Html.LookupFor(k => k.UserCode, new LookupSettings { Disabled = true, EntityName = EntityName.User, ExtendedInfo = "'hideReserveUser=true'" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    </td>\r\n                                </tr" +
">\r\n                            </tbody>\r\n                        </table>\r\n     " +
"               </td>\r\n                </tr>\r\n");

            
            #line 239 "..\..\Views\GroupOperation\Assign.cshtml"
                
            
            #line default
            #line hidden
            
            #line 239 "..\..\Views\GroupOperation\Assign.cshtml"
                 if (Model.PartialAssignSupported)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <tr>\r\n                        <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                            <input");

WriteLiteral(" id=\"rdoCascadeAssign\"");

WriteLiteral(" class=\"checkbox\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" name=\"IsPartialAssign\"");

WriteAttribute("disabled", Tuple.Create(" disabled=\"", 12855), Tuple.Create("\"", 12897)
            
            #line 243 "..\..\Views\GroupOperation\Assign.cshtml"
                                          , Tuple.Create(Tuple.Create("", 12866), Tuple.Create<System.Object, System.Int32>(Model.IsCascadeAssignForbidden
            
            #line default
            #line hidden
, 12866), false)
);

WriteLiteral(" />\r\n                        </td>\r\n                        <td >\r\n              " +
"              <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(" for=\"rdoCascadeAssign\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 247 "..\..\Views\GroupOperation\Assign.cshtml"
                           Write(BLResources.AssignInAllHierarchy);

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </label>\r\n                        </td>\r\n          " +
"          </tr>\r\n");

            
            #line 251 "..\..\Views\GroupOperation\Assign.cshtml"

                }

            
            #line default
            #line hidden
WriteLiteral("                <tr>\r\n                    <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"padding-left: 10px;\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"pbDiv\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" id=\"pbInner\"");

WriteLiteral(">\r\n                            </div>\r\n                        </div>\r\n          " +
"          </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n" +
"");

            
            #line 263 "..\..\Views\GroupOperation\Assign.cshtml"
        
            
            #line default
            #line hidden
            
            #line 263 "..\..\Views\GroupOperation\Assign.cshtml"
   Write(Html.HiddenFor(m => m.EntityTypeName));

            
            #line default
            #line hidden
            
            #line 263 "..\..\Views\GroupOperation\Assign.cshtml"
                                              
        
            
            #line default
            #line hidden
            
            #line 264 "..\..\Views\GroupOperation\Assign.cshtml"
   Write(Html.HiddenFor(m => m.PartialAssignSupported));

            
            #line default
            #line hidden
            
            #line 264 "..\..\Views\GroupOperation\Assign.cshtml"
                                                      
    }

            
            #line default
            #line hidden
});

        }
    }
}
#pragma warning restore 1591
