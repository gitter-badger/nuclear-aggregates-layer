#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubleGis.Erm.BLCore.UI.Web.Mvc.Views.GroupOperation
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using DoubleGis.Erm.BLCore.Resources.Server.Properties;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Controllers;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Models;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Settings;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.UserProfiles;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Utils;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.ViewModels;
    using DoubleGis.Erm.Platform.Common;
    
    #line 1 "..\..\Views\GroupOperation\Assign.cshtml"
    using DoubleGis.Erm.Platform.Common.Utils;
    
    #line default
    #line hidden
    using DoubleGis.Erm.Platform.Model.Entities;
    using DoubleGis.Erm.Platform.Model.Entities.Enums;
    using DoubleGis.Erm.Platform.Model.Metadata.Enums;
    using DoubleGis.Erm.Platform.UI.Web.Mvc;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Security;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Utils;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/GroupOperation/Assign.cshtml")]
    public partial class Assign : System.Web.Mvc.WebViewPage<DoubleGis.Erm.BLCore.UI.Web.Mvc.Models.GroupOperation.AssignViewModel>
    {
        public Assign()
        {
        }
        public override void Execute()
        {
            
            #line 4 "..\..\Views\GroupOperation\Assign.cshtml"
  
    Layout = "../Shared/_DialogLayout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("Title", () => {

WriteLiteral(" ");

            
            #line 8 "..\..\Views\GroupOperation\Assign.cshtml"
            Write(BLResources.GroupOperationConfirm);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarTitle", () => {

WriteLiteral(" ");

            
            #line 9 "..\..\Views\GroupOperation\Assign.cshtml"
                  Write(string.Format(BLResources.AssignAssignMessage, Model.EntityTypeName.ToStringLocalized(EnumResources.ResourceManager, EnumResources.Culture)));

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarMessage", () => {

WriteLiteral(" ");

            
            #line 10 "..\..\Views\GroupOperation\Assign.cshtml"
                    Write(string.Format(BLResources.GroupOperationTopBarMessage, Model.EntityTypeName.ToStringLocalized(EnumResources.ResourceManager, EnumResources.Culture)));

            
            #line default
            #line hidden
WriteLiteral(" ");

});

WriteLiteral("\r\n");

DefineSection("PageContent", () => {

WriteLiteral("\r\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteAttribute("href", Tuple.Create(" href=\"", 651), Tuple.Create("\"", 714)
, Tuple.Create(Tuple.Create("", 658), Tuple.Create("/Content/Progress.css?", 658), true)
            
            #line 14 "..\..\Views\GroupOperation\Assign.cshtml"
, Tuple.Create(Tuple.Create("", 680), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 680), false)
);

WriteLiteral(" />\r\n\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 733), Tuple.Create("\"", 806)
, Tuple.Create(Tuple.Create("", 739), Tuple.Create("/Scripts/Ext.Ajax.syncRequest.js?", 739), true)
            
            #line 16 "..\..\Views\GroupOperation\Assign.cshtml"
, Tuple.Create(Tuple.Create("", 772), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 772), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 853), Tuple.Create("\"", 934)
, Tuple.Create(Tuple.Create("", 859), Tuple.Create("/Scripts/DoubleGis.UI.GroupOperations.js?", 859), true)
            
            #line 17 "..\..\Views\GroupOperation\Assign.cshtml"
, Tuple.Create(Tuple.Create("", 900), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 900), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 981), Tuple.Create("\"", 1041)
, Tuple.Create(Tuple.Create("", 987), Tuple.Create("/Scripts/Tooltip.js?", 987), true)
            
            #line 18 "..\..\Views\GroupOperation\Assign.cshtml"
, Tuple.Create(Tuple.Create("", 1007), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 1007), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n    \r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        Ext.namespace(\'Ext.DoubleGis.UI.Assign\');\r\n        Ext.DoubleGis.UI.As" +
"sign.AssignProcessor = Ext.extend(Ext.DoubleGis.UI.GroupProcessor, {\r\n          " +
"  FailedEntitiesMessages: [],\r\n            OwnerCode: 0,\r\n            IsPartialA" +
"ssign: false,\r\n            UserCodeLookup: {},\r\n            bypassValidationInfo" +
": false, // информация о том, есть ли привилегия \"Обработка лицевых счетов с зад" +
"олжностью\"\r\n            BypassValidationView: {},   // представление для Предлож" +
"енния продолжить операцию, если есть задолженность по лицевым счетам\r\n          " +
"  constructor: function (config) {\r\n                Ext.apply(config, {\r\n       " +
"             listeners: {\r\n                        configspecificcontrols: funct" +
"ion () {\r\n                            this.ConfigCustomControls();\r\n            " +
"            },\r\n                        applyusersettings: function () {\r\n      " +
"                      this.ApplyUserSettings();\r\n                        },\r\n   " +
"                     processingfinished: function () {\r\n                        " +
"    this.ProcessingFinished();\r\n                        },\r\n                    " +
"    entityprocessingfail: function (msg) {\r\n                            this.Ent" +
"ityAssignFailed(msg);\r\n                        }\r\n                    }\r\n       " +
"         });\r\n                Ext.DoubleGis.UI.Assign.AssignProcessor.superclass" +
".constructor.call(this, config);\r\n            },\r\n            ConfigCustomContro" +
"ls: function () {\r\n                var onRadioClick = this.RadioClick.createDele" +
"gate(this);\r\n                Ext.get(\"rdoAssignToMe\").on(\"click\", onRadioClick);" +
"\r\n                Ext.get(\"rdoAssignToUser\").on(\"click\", onRadioClick);\r\n       " +
"         this.UserCodeLookup = Ext.getCmp(\"UserCode\");\r\n            },\r\n        " +
"    RadioClick: function () {\r\n                if (Ext.getDom(\"rdoAssignToMe\").c" +
"hecked) {\r\n                    this.UserCodeLookup.disable();\r\n                }" +
"\r\n                else if (Ext.getDom(\"rdoAssignToUser\").checked) {\r\n           " +
"         this.UserCodeLookup.enable();\r\n                }\r\n            },\r\n     " +
"       IsUserSettingsValid: function () {\r\n                if (Ext.getDom(\"rdoAs" +
"signToUser\").checked) {\r\n                    if (Ext.getDom(\"UserCode\").value ==" +
" \"\") {\r\n                        Ext.MessageBox.show({\r\n                         " +
"   title: \'\',\r\n                            msg: Ext.LocalizedResources.AssignMus" +
"tPickUser,\r\n                            buttons: window.Ext.MessageBox.OK,\r\n    " +
"                        width: 300,\r\n                            icon: window.Ex" +
"t.MessageBox.ERROR\r\n                        });\r\n                        return " +
"false;\r\n                    }\r\n                }\r\n\r\n                return true;" +
"\r\n            },\r\n            ApplyUserSettings: function () {\r\n                " +
"this.OwnerCode = Ext.getDom(\"rdoAssignToUser\").checked ? this.UserCodeLookup.get" +
"Value().id : \"\";\r\n\r\n                var ctx = Ext.getDom(\"rdoCascadeAssign\");\r\n " +
"               this.IsPartialAssign = ctx && !ctx.checked;\r\n\r\n                Ex" +
"t.getDom(\"rdoAssignToMe\").disabled = \"disabled\";\r\n                Ext.getDom(\"rd" +
"oAssignToUser\").disabled = \"disabled\";\r\n                this.UserCodeLookup.disa" +
"ble();\r\n            },\r\n            CreateParamsForControllerCall: function (ent" +
"ityId) {\r\n                return { entityId: entityId, ownerCode: this.OwnerCode" +
", isPartialAssign: this.IsPartialAssign, bypassValidation: null };\r\n            " +
"},\r\n            ValidateEntryProcessingSuccessStatus: function (message) {\r\n    " +
"            var bypassValidationInfo = window.Ext.decode(message);\r\n            " +
"    if (bypassValidationInfo.CanProceed && bypassValidationInfo.CanProceed == tr" +
"ue) {\r\n                    var isOperationContinue = confirm(bypassValidationInf" +
"o.Message);\r\n                    if (isOperationContinue) {\r\n                   " +
"     var params = this.CreateParamsForControllerCall(bypassValidationInfo.Entity" +
"Id);\r\n                        params.bypassValidation = true;\r\n                 " +
"       var url = this.EvaluateOperationUrl();\r\n                        this.Proc" +
"essSingleEntity(url, params);\r\n\r\n                        return this.SuccessStat" +
"us.ReprocessingRequired;\r\n                    }\r\n\r\n                    return th" +
"is.SuccessStatus.Rejected;\r\n                }\r\n                return this.Succe" +
"ssStatus.Approved;\r\n            },\r\n            ProcessingFinished: function () " +
"{\r\n                // innerHTML элемента Notifications присваивается по окончани" +
"и операции (см. файл GroupOperations.js),\r\n                // динамически засовы" +
"ваем туда линк.\r\n                if (this.SuccessProcessed < this.EntitiesCount " +
"&& !this.IsSingleEntityProcessing) {\r\n\r\n                    this.FinishOperation" +
"(this.FailedEntitiesMessages.join(\'\\r\\n\'));\r\n\r\n                    var notificat" +
"ions = Ext.getDom(\'Notifications\');\r\n                    var errorsLinkNode = do" +
"cument.createElement(\"a\");\r\n                    errorsLinkNode.id = \'ErrorsLink\'" +
";\r\n                    errorsLinkNode.href = \'#\';\r\n                    errorsLin" +
"kNode.appendChild(document.createTextNode(Ext.LocalizedResources.DisplayErrorsLi" +
"st));\r\n                    notifications.appendChild(errorsLinkNode);\r\n         " +
"           Ext.getDom(\'ErrorsLink\').onclick = function () {\r\n                   " +
"     Ext.getDom(\'ErrorsForm\').submit();\r\n                    };\r\n               " +
"     Ext.getDom(\'ErrorsLink\').onclick();\r\n                }\r\n                els" +
"e {\r\n                    this.FinishOperation();\r\n                }\r\n           " +
" },\r\n            EntityAssignFailed: function (msg) {\r\n                this.Fail" +
"edEntitiesMessages[this.FailedEntitiesMessages.length] = msg;\r\n            },\r\n " +
"           FinishOperation: function (msg) {\r\n                var finishOperatio" +
"nResponse = window.Ext.Ajax.syncRequest({\r\n                    method: \'POST\',\r\n" +
"                    url: \'/Operation/CreateOperationWithErrorLog\',\r\n            " +
"        params: { operationId: Ext.getDom(\"operationId\").value, log: msg, conten" +
"tType: \'text/csv\', logFileName: \'Assign_errors.csv\' }\r\n                });\r\n    " +
"            if ((finishOperationResponse.conn.status >= 200 && finishOperationRe" +
"sponse.conn.status < 300) || (Ext.isIE && finishOperationResponse.conn.status ==" +
" 1223)) {\r\n                }\r\n                else {\r\n                    alert(" +
"finishOperationResponse.conn.responseText);\r\n                    return;\r\n      " +
"          }\r\n            }\r\n        });\r\n\r\n        Ext.onReady(function ()\r\n    " +
"    {\r\n            var ids = !window.dialogArguments ? [] : (window.dialogArgume" +
"nts.Values ? window.dialogArguments.Values : window.dialogArguments);\r\n\r\n       " +
"     //window.Tooltip = new Ext.DoubleGis.UI.Tooltip(document);\r\n            Ext" +
".getDom(\'DivErrors\').style.visibility = \'hidden\';\r\n            Ext.getDom(\'PageC" +
"ontentCell\').style[\"vertical-align\"] = \"top\";\r\n            var config = {\r\n     " +
"           Entities: ids, // массив id сущностей\r\n                OperationName:" +
" \'");

            
            #line 157 "..\..\Views\GroupOperation\Assign.cshtml"
                           Write(Model.OperationName);

            
            #line default
            #line hidden
WriteLiteral(@"', // тип операции - Qualify, Assign, ChangeTerritory
                CloseButtonText: Ext.LocalizedResources.Close, // локализованная надпись для кнопки закрыть
                NeedToSelectOneOrMoreItemsMsg: Ext.LocalizedResources.NeedToSelectOneOrMoreItems, // локализованная надпись о том что нужно выбрать один или несколько элементов
                ResultMessageTitle: Ext.LocalizedResources.GroupOperationResultsTitle, // локализованная надпись - заголовок для результатов операции
                ResultMessageTemplate: Ext.LocalizedResources.GroupOperationResultsMessage // локализованная надпись - шаблон строки для результатов операции
            };
            var assignProcessor = new Ext.DoubleGis.UI.Assign.AssignProcessor(config);
            if (!assignProcessor.CheckProcessingPossibility())
            {
                return;
            }
            assignProcessor.Process();
        });
    </script>
    
    <div");

WriteLiteral(" style=\"height: 8px; padding-left: 5px;padding-top: 4px;position: fixed;\"");

WriteLiteral(" id=\"DivErrors\"");

WriteLiteral(">\r\n");

            
            #line 173 "..\..\Views\GroupOperation\Assign.cshtml"
    
            
            #line default
            #line hidden
            
            #line 173 "..\..\Views\GroupOperation\Assign.cshtml"
     using (Html.BeginForm("GetOperationLog", "Operation", FormMethod.Post, new Dictionary<string, object> { { "target", "_blank" }, { "id", "ErrorsForm" } }))
    {

            
            #line default
            #line hidden
WriteLiteral("        <input");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" name=\"operationId\"");

WriteAttribute("value", Tuple.Create(" value=\"", 9363), Tuple.Create("\"", 9386)
            
            #line 175 "..\..\Views\GroupOperation\Assign.cshtml"
, Tuple.Create(Tuple.Create("", 9371), Tuple.Create<System.Object, System.Int32>(Guid.NewGuid()
            
            #line default
            #line hidden
, 9371), false)
);

WriteLiteral(" />\r\n");

            
            #line 176 "..\..\Views\GroupOperation\Assign.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("        \r\n   </div>\r\n\r\n");

            
            #line 180 "..\..\Views\GroupOperation\Assign.cshtml"
    
            
            #line default
            #line hidden
            
            #line 180 "..\..\Views\GroupOperation\Assign.cshtml"
     using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {

            
            #line default
            #line hidden
WriteLiteral("        <table");

WriteLiteral(" cellspacing=\"5\"");

WriteLiteral(" cellpadding=\"5\"");

WriteLiteral(" width=\"100%\"");

WriteLiteral(" style=\"position: fixed;\"");

WriteLiteral(">\r\n            <colgroup>\r\n                <col");

WriteLiteral(" width=\"32\"");

WriteLiteral(" />\r\n                <col />\r\n            </colgroup>\r\n            <tbody>\r\n     " +
"           <tr>\r\n                    <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" style=\"height: 30px;\"");

WriteLiteral(" id=\"Notifications\"");

WriteLiteral(" \r\n                             onmouseover=\"AddTooltip(Ext.getDom(\'Notifications" +
"\').childNodes.length > 0 ? Ext.getDom(\'Notifications\').childNodes[0].data : \'\');" +
"\"");

WriteLiteral(" \r\n                             onmouseout=\"RemoveTooltip();\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 193 "..\..\Views\GroupOperation\Assign.cshtml"
                       Write(Model.Message);

            
            #line default
            #line hidden
WriteLiteral("\r\n                        </div>\r\n                    </td>\r\n                </tr" +
">\r\n                <tr>\r\n                    <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <input");

WriteLiteral(" id=\"rdoAssignToMe\"");

WriteLiteral(" class=\"radio\"");

WriteLiteral(" checked=\"checked\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"AssignedUser\"");

WriteLiteral(" />\r\n                    </td>\r\n                    <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(" for=\"rdoAssignTome\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 203 "..\..\Views\GroupOperation\Assign.cshtml"
                       Write(BLResources.AssignAssignToMe);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                        <br />\r\n                        <div");

WriteLiteral(" style=\"color: #444444; padding-top: 5px\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 206 "..\..\Views\GroupOperation\Assign.cshtml"
                       Write(String.Format(BLResources.AssignAssignToMeLegend, Model.EntityTypeName.ToStringLocalized(EnumResources.ResourceManager, EnumResources.Culture)));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n " +
"                   <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n                        &nbsp;\r\n                    </td>\r\n                </t" +
"r>\r\n                <tr>\r\n                    <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <input");

WriteLiteral(" id=\"rdoAssignToUser\"");

WriteLiteral(" class=\"radio\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"AssignedUser\"");

WriteLiteral(" />\r\n                    </td>\r\n                    <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(" for=\"rdoAssignToUser\"");

WriteLiteral(">\r\n");

WriteLiteral("                            ");

            
            #line 220 "..\..\Views\GroupOperation\Assign.cshtml"
                       Write(BLResources.AssignAssignToOther);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                        <br />\r\n                        <div");

WriteLiteral(" style=\"padding-bottom: 10px; color: #444444; padding-top: 5px\"");

WriteLiteral(">\r\n                            <label");

WriteLiteral(" for=\"rdoAssignToUser\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 224 "..\..\Views\GroupOperation\Assign.cshtml"
                           Write(String.Format(BLResources.AssignAssignToOtherLegend, Model.EntityTypeName.ToStringLocalized(EnumResources.ResourceManager, EnumResources.Culture)));

            
            #line default
            #line hidden
WriteLiteral("</label></div>\r\n                        <table");

WriteLiteral(" style=\"table-layout: fixed\"");

WriteLiteral(" cellspacing=\"0\"");

WriteLiteral(" cellpadding=\"0\"");

WriteLiteral(" width=\"100%\"");

WriteLiteral(">\r\n                            <tbody>\r\n                                <tr>\r\n   " +
"                                 <td>\r\n");

WriteLiteral("                                        ");

            
            #line 229 "..\..\Views\GroupOperation\Assign.cshtml"
                                   Write(Html.LookupFor(k => k.UserCode, new LookupSettings { Disabled = true, EntityName = EntityName.User, ExtendedInfo = "'hideReserveUser=true'" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    </td>\r\n                                </tr" +
">\r\n                            </tbody>\r\n                        </table>\r\n     " +
"               </td>\r\n                </tr>\r\n");

            
            #line 236 "..\..\Views\GroupOperation\Assign.cshtml"
                
            
            #line default
            #line hidden
            
            #line 236 "..\..\Views\GroupOperation\Assign.cshtml"
                 if (Model.PartialAssignSupported)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <tr>\r\n                        <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                            <input");

WriteLiteral(" id=\"rdoCascadeAssign\"");

WriteLiteral(" class=\"checkbox\"");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" name=\"IsPartialAssign\"");

WriteAttribute("disabled", Tuple.Create(" disabled=\"", 12744), Tuple.Create("\"", 12786)
            
            #line 240 "..\..\Views\GroupOperation\Assign.cshtml"
                                          , Tuple.Create(Tuple.Create("", 12755), Tuple.Create<System.Object, System.Int32>(Model.IsCascadeAssignForbidden
            
            #line default
            #line hidden
, 12755), false)
);

WriteLiteral(" />\r\n                        </td>\r\n                        <td >\r\n              " +
"              <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(" for=\"rdoCascadeAssign\"");

WriteLiteral(">\r\n");

WriteLiteral("                                ");

            
            #line 244 "..\..\Views\GroupOperation\Assign.cshtml"
                           Write(BLResources.AssignInAllHierarchy);

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </label>\r\n                        </td>\r\n          " +
"          </tr>\r\n");

            
            #line 248 "..\..\Views\GroupOperation\Assign.cshtml"

                }

            
            #line default
            #line hidden
WriteLiteral("                <tr>\r\n                    <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"padding-left: 10px;\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"pbDiv\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" id=\"pbInner\"");

WriteLiteral(">\r\n                            </div>\r\n                        </div>\r\n          " +
"          </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n" +
"");

            
            #line 260 "..\..\Views\GroupOperation\Assign.cshtml"
        
            
            #line default
            #line hidden
            
            #line 260 "..\..\Views\GroupOperation\Assign.cshtml"
   Write(Html.HiddenFor(m => m.EntityTypeName));

            
            #line default
            #line hidden
            
            #line 260 "..\..\Views\GroupOperation\Assign.cshtml"
                                              
        
            
            #line default
            #line hidden
            
            #line 261 "..\..\Views\GroupOperation\Assign.cshtml"
   Write(Html.HiddenFor(m => m.PartialAssignSupported));

            
            #line default
            #line hidden
            
            #line 261 "..\..\Views\GroupOperation\Assign.cshtml"
                                                      
    }

            
            #line default
            #line hidden
});

        }
    }
}
#pragma warning restore 1591
