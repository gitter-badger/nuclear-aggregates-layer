#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubleGis.Erm.BLCore.UI.Web.Mvc.Views.GroupOperation
{
    using System;
    using System.Collections.Generic;
    using System.Web.Mvc;
    using System.Web.Mvc.Html;

    using DoubleGis.Erm.BLCore.Resources.Server.Properties;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Utils;
    using DoubleGis.Erm.Platform.Common;
    using DoubleGis.Erm.Platform.Model.Entities;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Utils;
    
    #line 1 "..\..\Views\GroupOperation\QualifyClient.cshtml"
    using Platform.Common.Utils;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/GroupOperation/QualifyClient.cshtml")]
    public partial class QualifyClient : System.Web.Mvc.WebViewPage<Models.GroupOperation.OwnerGroupOperationViewModel>
    {
        public QualifyClient()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 5 "..\..\Views\GroupOperation\QualifyClient.cshtml"
  
    Layout = "../Shared/_DialogLayout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("Title", () => {

WriteLiteral(" ");

            
            #line 9 "..\..\Views\GroupOperation\QualifyClient.cshtml"
            Write(BLResources.Qualify);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarTitle", () => {

WriteLiteral(" ");

            
            #line 10 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                  Write(BLResources.QualifyClient);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarMessage", () => {

WriteLiteral(" ");

            
            #line 11 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                    Write(string.Format(BLResources.GroupOperationTopBarMessage, Model.EntityTypeName.ToStringLocalized(EnumResources.ResourceManager, EnumResources.Culture)));

            
            #line default
            #line hidden
WriteLiteral(" ");

});

WriteLiteral("\r\n");

DefineSection("PageContent", () => {

WriteLiteral("\r\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteAttribute("href", Tuple.Create(" href=\"", 491), Tuple.Create("\"", 554)
, Tuple.Create(Tuple.Create("", 498), Tuple.Create("/Content/Progress.css?", 498), true)
            
            #line 15 "..\..\Views\GroupOperation\QualifyClient.cshtml"
, Tuple.Create(Tuple.Create("", 520), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 520), false)
);

WriteLiteral(" />\r\n\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 573), Tuple.Create("\"", 646)
, Tuple.Create(Tuple.Create("", 579), Tuple.Create("/Scripts/Ext.Ajax.syncRequest.js?", 579), true)
            
            #line 17 "..\..\Views\GroupOperation\QualifyClient.cshtml"
, Tuple.Create(Tuple.Create("", 612), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 612), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 693), Tuple.Create("\"", 774)
, Tuple.Create(Tuple.Create("", 699), Tuple.Create("/Scripts/DoubleGis.UI.GroupOperations.js?", 699), true)
            
            #line 18 "..\..\Views\GroupOperation\QualifyClient.cshtml"
, Tuple.Create(Tuple.Create("", 740), Tuple.Create<System.Object, System.Int32>(SolutionInfo.ProductVersion.Build
            
            #line default
            #line hidden
, 740), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        Ext.namespace(\'Ext.DoubleGis.UI.Client\');\r\n        Ext.DoubleGis.UI.Cl" +
"ient.QualifyProcessor = Ext.extend(Ext.DoubleGis.UI.GroupProcessor, {\r\n         " +
"   OwnerCode: 0,\r\n            UserCodeLookup: {},\r\n            constructor: func" +
"tion (config)\r\n            {\r\n                Ext.apply(config, {\r\n             " +
"       listeners: {\r\n                        configspecificcontrols: function ()" +
"\r\n                        {\r\n                            this.ConfigCustomContro" +
"ls();\r\n                        },\r\n                        applyusersettings: fu" +
"nction ()\r\n                        {\r\n                            this.ApplyUser" +
"Settings();\r\n                        }\r\n                    }\r\n                }" +
");\r\n                Ext.DoubleGis.UI.Client.QualifyProcessor.superclass.construc" +
"tor.call(this, config);\r\n            },\r\n            ConfigCustomControls: funct" +
"ion ()\r\n            {\r\n                var onRadioClick = this.RadioClick.create" +
"Delegate(this);\r\n                Ext.get(\"rdoAssignToMe\").on(\"click\", onRadioCli" +
"ck);\r\n                Ext.get(\"rdoAssignToUser\").on(\"click\", onRadioClick);\r\n   " +
"             this.UserCodeLookup = Ext.getCmp(\"UserCode\");\r\n            },\r\n    " +
"        RadioClick: function ()\r\n            {\r\n                if (Ext.getDom(\"" +
"rdoAssignToMe\").checked)\r\n                {\r\n                    this.UserCodeLo" +
"okup.disable();\r\n                }\r\n                else if (Ext.getDom(\"rdoAssi" +
"gnToUser\").checked)\r\n                {\r\n                    this.UserCodeLookup." +
"enable();\r\n                }\r\n            },\r\n            IsUserSettingsValid: f" +
"unction ()\r\n            {\r\n                if (Ext.getDom(\"rdoAssignToUser\").che" +
"cked)\r\n                {\r\n                    if (Ext.getDom(\"UserCode\").value =" +
"= \"\")\r\n                    {\r\n                        Ext.MessageBox.show({\r\n   " +
"                         title: \'\',\r\n                            // TODO {all, 1" +
"8.12.2013}: возможно некоректное отображение диакритики\r\n                       " +
"     // TODO {all, 18.12.2013}: ресурс можно перенести в ClientResourceStorage\r\n" +
"                            msg: \'");

            
            #line 69 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                             Write(BLResources.QualifyMustPickUser);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                            buttons: window.Ext.MessageBox.OK,\r\n             " +
"               width: 300,\r\n                            icon: window.Ext.Message" +
"Box.ERROR\r\n                        });\r\n                        return false;\r\n " +
"                   }\r\n                }\r\n                return true;\r\n         " +
"   },\r\n            CheckForDebtsAndProcess: function () {\r\n                if (t" +
"his.Config.Entities.length) {\r\n\r\n                    // waitbox заменён на Mask," +
" поскольку от первого в некоторых случаях у ie сносило крышу:\r\n                 " +
"   // ExtJs при обработке задач использует функции setInterval/clearInterval и в" +
"от последний не отрабатывал как надо: обработчик продолжал вызываться.\r\n        " +
"            // Внешне это выглядело как неограниченное число вызовов обработчико" +
"в, зарегистрированных через Ext.onReady.\r\n                    var waitMask = new" +
" Ext.LoadMask(Ext.getBody());\r\n                    waitMask.show();\r\n\r\n         " +
"           var checkUrl = Ext.BasicOperationsServiceRestUrl + \'CheckForDebts.svc" +
"/Rest/Client/\' + Ext.encode(this.Config.Entities);\r\n                    var resp" +
"onse = window.Ext.Ajax.syncRequest({\r\n                        timeout: 1200000,\r" +
"\n                        url: checkUrl,\r\n                        method: \'POST\'\r" +
"\n                    });\r\n\r\n                    waitMask.hide();\r\n\r\n            " +
"        if ((response.conn.status >= 200 && response.conn.status < 300) || (Ext." +
"isIE && response.conn.status == 1223)) {\r\n                        var checkResul" +
"t = Ext.decode(response.conn.responseText);\r\n\r\n                        if (check" +
"Result.DebtsExist) {\r\n                            Ext.MessageBox.show({\r\n       " +
"                         title: Ext.LocalizedResources.Alert,\r\n                 " +
"               msg: Ext.LocalizedResources.SomeOfTheClientsHaveDebtsAlert + \"\\r\\" +
"n\" + checkResult.Message,\r\n                                width: 300,\r\n        " +
"                        buttons: window.Ext.MessageBox.ContinueCANCEL,\r\n        " +
"                        processor: this,\r\n                                fn: fu" +
"nction(buttonId, value, opt) {\r\n                                    if (buttonId" +
" == \'Continue\') {\r\n                                        opt.processor.Process" +
"();\r\n                                    } else {\r\n                             " +
"           window.close();\r\n                                    }\r\n             " +
"                   },\r\n                                icon: window.Ext.MessageB" +
"ox.QUESTION\r\n                            });\r\n                        } else {\r\n" +
"                            this.Process();\r\n                        }\r\n        " +
"            } else {\r\n                        Ext.MessageBox.show({\r\n           " +
"                 title: Ext.LocalizedResources.Alert,\r\n                         " +
"   msg: Ext.LocalizedResources.CheckClientsDebtsFailed,\r\n                       " +
"     width: 300,\r\n                            buttons: window.Ext.MessageBox.Con" +
"tinueCANCEL,\r\n                            processor: this,\r\n                    " +
"        fn: function(buttonId, value, opt) {\r\n                                if" +
" (buttonId == \'Continue\') {\r\n                                    opt.processor.P" +
"rocess();\r\n                                } else {\r\n                           " +
"         window.close();\r\n                                }\r\n                   " +
"         },\r\n                            icon: window.Ext.MessageBox.QUESTION\r\n " +
"                       });\r\n                    }\r\n                } else {\r\n   " +
"                 window.close();\r\n                }\r\n            },\r\n           " +
" ApplyUserSettings: function ()\r\n            {\r\n                this.OwnerCode =" +
" Ext.getDom(\"rdoAssignToUser\").checked ? this.UserCodeLookup.getValue().id : \"\";" +
"\r\n\r\n                Ext.getDom(\"rdoAssignToMe\").disabled = \"disabled\";\r\n        " +
"        Ext.getDom(\"rdoAssignToUser\").disabled = \"disabled\";\r\n                th" +
"is.UserCodeLookup.disable();\r\n            },\r\n            CreateParamsForControl" +
"lerCall: function (entityId)\r\n            {\r\n                return  { entityId:" +
" entityId, ownerCode: this.OwnerCode };\r\n            }\r\n        });\r\n        Ext" +
".onReady(function ()\r\n        {\r\n            var ids;\r\n            if (window.di" +
"alogArguments) {\r\n                ids = window.dialogArguments.Values ? window.d" +
"ialogArguments.Values : window.dialogArguments;\r\n            } else {\r\n         " +
"       var queryParameters = Ext.urlDecode(window.location.search.substring(1));" +
"\r\n                ids = queryParameters.CrmIds.split(\',\');\r\n            }\r\n\r\n   " +
"         var config = {\r\n                Entities: ids, // массив id сущностей\r\n" +
"                OperationName: \'");

            
            #line 165 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                           Write(Model.OperationName);

            
            #line default
            #line hidden
WriteLiteral("\', // тип операции - Qualify, Assign, ChangeTerritory\r\n                CloseButto" +
"nText: \'");

            
            #line 166 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                             Write(BLResources.Close);

            
            #line default
            #line hidden
WriteLiteral("\', // локализованная надпись для кнопки закрыть\r\n                NeedToSelectOneO" +
"rMoreItemsMsg: \'");

            
            #line 167 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                           Write(BLResources.NeedToSelectOneOrMoreItems);

            
            #line default
            #line hidden
WriteLiteral("\', // локализованная надпись о том что нужно выбрать один или несколько элементов" +
"\r\n                ResultMessageTitle: \'");

            
            #line 168 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                Write(BLResources.GroupOperationResultsTitle);

            
            #line default
            #line hidden
WriteLiteral("\', // локализованная надпись - заголовок для результатов операции\r\n              " +
"  ResultMessageTemplate: \'");

            
            #line 169 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                   Write(BLResources.GroupOperationResultsMessage);

            
            #line default
            #line hidden
WriteLiteral(@"' // локализованная надпись - шаблон строки для результатов операции
            };
            var qualifyProcessor = new Ext.DoubleGis.UI.Client.QualifyProcessor(config);
            if (!qualifyProcessor.CheckProcessingPossibility())
            {
                return;
            }
            qualifyProcessor.CheckForDebtsAndProcess();
        }, window, { single: true });
    </script>
");

            
            #line 179 "..\..\Views\GroupOperation\QualifyClient.cshtml"
    
            
            #line default
            #line hidden
            
            #line 179 "..\..\Views\GroupOperation\QualifyClient.cshtml"
     using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {

            
            #line default
            #line hidden
WriteLiteral("    <table");

WriteLiteral(" cellspacing=\"5\"");

WriteLiteral(" cellpadding=\"5\"");

WriteLiteral(" width=\"100%\"");

WriteLiteral(" height=\"100%\"");

WriteLiteral(">\r\n        <colgroup>\r\n            <col");

WriteLiteral(" width=\"26\"");

WriteLiteral(" />\r\n            <col />\r\n        </colgroup>\r\n        <tbody");

WriteLiteral(" id=\"qualifysettings\"");

WriteLiteral(">\r\n            <tr>\r\n                <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" style=\"height: 24px;\"");

WriteLiteral(" id=\"Notifications\"");

WriteLiteral(">");

            
            #line 189 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                                             Write(Model.Message);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n             " +
"   <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                    <input");

WriteLiteral(" id=\"rdoAssignToMe\"");

WriteLiteral(" class=\"radio\"");

WriteLiteral(" checked=\"checked\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"AssignedUser\"");

WriteLiteral(" />\r\n                </td>\r\n                <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                    <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(" for=\"rdoAssignTome\"");

WriteLiteral(">");

            
            #line 197 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                                                    Write(BLResources.QualifyAssignToMe);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    <br />\r\n                    <div");

WriteLiteral(" style=\"color: #444444; padding-top: 5px\"");

WriteLiteral(">");

            
            #line 199 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                                             Write(BLResources.QualifyAssignToMeClientLegend);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n             " +
"   <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n                    &nbsp;\r\n                </td>\r\n            </tr>\r\n        " +
"    <tr>\r\n                <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                    <input");

WriteLiteral(" id=\"rdoAssignToUser\"");

WriteLiteral(" class=\"radio\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"AssignedUser\"");

WriteLiteral(" />\r\n                </td>\r\n                <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                    <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(" for=\"rdoAssignToUser\"");

WriteLiteral(">");

            
            #line 212 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                                                      Write(BLResources.QualifyAssignToOtherUser);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    <br />\r\n                    <div");

WriteLiteral(" style=\"padding-bottom: 10px; color: #444444; padding-top: 5px\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"rdoAssignToUser\"");

WriteLiteral(">");

            
            #line 215 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                                Write(BLResources.QualifyAssignToOtherUserClientLegend);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                    </div>\r\n                    <table");

WriteLiteral(" style=\"table-layout: fixed\"");

WriteLiteral(" cellspacing=\"0\"");

WriteLiteral(" cellpadding=\"0\"");

WriteLiteral(" width=\"100%\"");

WriteLiteral(">\r\n                        <tbody>\r\n                            <tr>\r\n           " +
"                     <td>\r\n");

WriteLiteral("                                    ");

            
            #line 221 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                               Write(Html.LookupFor(k => k.UserCode, new LookupSettings { Disabled = true, EntityName = EntityName.User, ExtendedInfo = "'hideReserveUser=true'"}));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                </td>\r\n                            </tr>\r\n     " +
"                   </tbody>\r\n                    </table>\r\n                </td>" +
"\r\n            </tr>\r\n            <tr");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n                <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 230 "..\..\Views\GroupOperation\QualifyClient.cshtml"
               Write(Html.HiddenFor(m => m.EntityTypeName));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n        <tbody>\r\n  " +
"          <tr>\r\n                <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"padding-left: 10px;\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" id=\"pbDiv\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"pbInner\"");

WriteLiteral(">\r\n                        </div>\r\n                    </div>\r\n                </" +
"td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n");

            
            #line 245 "..\..\Views\GroupOperation\QualifyClient.cshtml"
    }

            
            #line default
            #line hidden
});

        }
    }
}
#pragma warning restore 1591
