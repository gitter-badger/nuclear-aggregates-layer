
@model AdvertisementTemplateViewModel

@{
    Layout = "../Shared/_CardLayout.cshtml";
}

@section CardScripts
{
    <script type="text/javascript">
        window.InitPage = function () {
            window.Card.on("beforebuild", function (cardObject) {

                this.Publish = function () {
                    if (Ext.getDom("IsPublished").checked) {
                        // TODO {all, 18.12.2013}: возможно некоректное отображение диакритики
                        // TODO {all, 18.12.2013}: alert можно заменить на ext'овый messagebox
                        // TODO {all, 18.12.2013}: ресурс можно перенести в ClientResourceStorage
                        alert('@BLResources.PriceIsAlreadyPublished');
                        return;
                    }
                    var params = "dialogWidth:" + 500 + "px; dialogHeight:" + 150 + "px; status:yes; scroll:no;resizable:no;";
                    var url = '/AdvertisementTemplate/Publish';
                    var arguments = {
                        advertisementTemplateId: Ext.getDom("Id").value
                    };

                    this.Items.Toolbar.disable();
                    window.showModalDialog(url, arguments, params);
                    this.refresh(true);
                };

                this.Unpublish = function () {
                    if (Ext.getDom("IsPublished").checked == 'false') {
                        // TODO {all, 18.12.2013}: возможно некоректное отображение диакритики
                        // TODO {all, 18.12.2013}: alert можно заменить на ext'овый messagebox
                        // TODO {all, 18.12.2013}: ресурс можно перенести в ClientResourceStorage
                        alert('@BLResources.CantUnpublishAdvertisementTemplateWhenUnpublished');
                        return;
                    }
                    var params = "dialogWidth:" + 500 + "px; dialogHeight:" + 150 + "px; status:yes; scroll:no;resizable:no;";
                    var url = '/AdvertisementTemplate/Unpublish';
                    var arguments = {
                        advertisementTemplateId: Ext.getDom("Id").value
                    };

                    this.Items.Toolbar.disable();
                    window.showModalDialog(url, arguments, params);
                    this.refresh(true);
                };
            });
        };
    </script>
}

@section CardBody
{
    @Html.HiddenFor(m => m.IdentityServiceUrl)
    @Html.HiddenFor(m => m.IsPublished)
    <div class="Tab" id="MainTab" title="@BLResources.GeneralTabTitle">
        <div class="row-wrapper">
            @Html.EditableId(m => m.Id)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Name, FieldFlex.lone)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.DummyAdvertisement, FieldFlex.lone, new LookupSettings { EntityName = EntityName.Advertisement, ReadOnly = true })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.IsAdvertisementRequired, FieldFlex.lone)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.IsAllowedToWhiteList, FieldFlex.lone)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Comment, FieldFlex.lone, new Dictionary<string, object> { { "rows", "5" } })
        </div>
    </div>
}
