#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubleGis.Erm.BLCore.UI.Web.Mvc.Views.CreateOrUpdate
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using DoubleGis.Erm.BLCore.Resources.Server.Properties;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Controllers;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Models;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Utils;
    using DoubleGis.Erm.Platform.Common;
    using DoubleGis.Erm.Platform.Model.Entities;
    using DoubleGis.Erm.Platform.Model.Entities.Enums;
    using DoubleGis.Erm.Platform.Model.Metadata.Enums;
    using DoubleGis.Erm.Platform.UI.Web.Mvc;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Utils;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/CreateOrUpdate/Bill.cshtml")]
    public partial class Bill : System.Web.Mvc.WebViewPage<BillViewModel>
    {
        public Bill()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 4 "..\..\Views\CreateOrUpdate\Bill.cshtml"
  
    Layout = "../Shared/_CardLayout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("CardScripts", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        window.InitPage = function ()\r\n        {\r\n            Ext.apply(this,\r" +
"\n            {\r\n                PrintWithoutProfileChoosing: function (profileId" +
") {\r\n                    var entityId = Ext.getDom(\'Id\').value;\r\n               " +
"     url = \'/Bill/PrintBill/\' + entityId + \'?profileId=\' + profileId + \'&__dc=\' " +
"+ Ext.util.Format.cacheBuster();\r\n                    this.Items.Toolbar.disable" +
"();\r\n\r\n                    var iframe;\r\n                    iframe = document.ge" +
"tElementById(\"hiddenDownloader\");\r\n                    if (iframe === null) {\r\n " +
"                       iframe = document.createElement(\'iframe\');\r\n             " +
"           iframe.id = \"hiddenDownloader\";\r\n                        iframe.style" +
".visibility = \'hidden\';\r\n\r\n                        var iframeEl = new Ext.Elemen" +
"t(iframe);\r\n                        iframeEl.on(\"load\", function () {\r\n         " +
"                   var iframeContent = iframe.contentWindow.document.documentEle" +
"ment.innerText;\r\n                            if (iframeContent != \"\") {\r\n       " +
"                         alert(iframeContent);\r\n                            }\r\n " +
"                       });\r\n                        document.body.appendChild(if" +
"rame);\r\n                    }\r\n\r\n                    iframe.src = url;\r\n        " +
"            this.Items.Toolbar.enable();\r\n                },\r\n                Pr" +
"intWithProfileChoosing: function () {\r\n                    var entityId = Ext.ge" +
"tDom(\'Id\').value;\r\n                    url = \'/Bill/Print/\' + entityId + \'?__dc=" +
"\' + Ext.util.Format.cacheBuster();\r\n                    var params = \"dialogWidt" +
"h:500px; dialogHeight:250px; status:yes; scroll:no;resizable:no;\";\r\n            " +
"        window.showModalDialog(url, null, params);\r\n                },\r\n        " +
"        PrintBill: function ()\r\n                {\r\n                    var entit" +
"yId = Ext.getDom(\'Id\').value;\r\n                    var url = \'/Bill/IsChooseProf" +
"ileNeeded?billId=\' + entityId + \'&__dc=\' + Ext.util.Format.cacheBuster();\r\n     " +
"               Ext.Ajax.request(\r\n                        {\r\n                   " +
"         url: url,\r\n                            method: \'POST\',\r\n               " +
"             extinstance: this,\r\n                            success: function (" +
"result, opts) {\r\n                                var jsonData = Ext.decode(resul" +
"t.responseText);\r\n                                if (!jsonData.IsChooseProfileN" +
"eeded) {\r\n                                    opts.extinstance.PrintWithoutProfi" +
"leChoosing(jsonData.LegalPersonProfileId);\r\n                                } el" +
"se {\r\n                                    opts.extinstance.PrintWithProfileChoos" +
"ing();\r\n                                }\r\n                            },\r\n     " +
"                       params: { billId: entityId }\r\n                        });" +
"\r\n                }\r\n            });\r\n        }\r\n    </script>\r\n");

});

WriteLiteral("\r\n");

DefineSection("CardBody", () => {

WriteLiteral("\r\n    <div");

WriteLiteral(" class=\"Tab\"");

WriteLiteral(" id=\"MainTab\"");

WriteAttribute("title", Tuple.Create(" title=\"", 3065), Tuple.Create("\"", 3101)
            
            #line 73 "..\..\Views\CreateOrUpdate\Bill.cshtml"
, Tuple.Create(Tuple.Create("", 3073), Tuple.Create<System.Object, System.Int32>(BLResources.GeneralTabTitle
            
            #line default
            #line hidden
, 3073), false)
);

WriteLiteral(">\r\n");

WriteLiteral("        ");

            
            #line 74 "..\..\Views\CreateOrUpdate\Bill.cshtml"
   Write(Html.HiddenFor(m => m.Id));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("        ");

            
            #line 75 "..\..\Views\CreateOrUpdate\Bill.cshtml"
   Write(Html.HiddenFor(m => m.IsOrderActive));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("        ");

            
            #line 76 "..\..\Views\CreateOrUpdate\Bill.cshtml"
   Write(Html.HiddenFor(m => m.Owner));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("        ");

            
            #line 77 "..\..\Views\CreateOrUpdate\Bill.cshtml"
   Write(Html.HiddenFor(m => m.OrderId));

            
            #line default
            #line hidden
WriteLiteral("\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 79 "..\..\Views\CreateOrUpdate\Bill.cshtml"
       Write(Html.TemplateField(m => m.BillNumber, FieldFlex.twins, new Dictionary<string, object> { { "readonly", "readonly" } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 80 "..\..\Views\CreateOrUpdate\Bill.cshtml"
       Write(Html.TemplateField(m => m.BillDate, FieldFlex.twins, new DateTimeSettings { ReadOnly = true, ShiftOffset = false }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 83 "..\..\Views\CreateOrUpdate\Bill.cshtml"
       Write(Html.TemplateField(m => m.BeginDistributionDate, FieldFlex.twins, new DateTimeSettings { ReadOnly = true, ShiftOffset = false}));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 84 "..\..\Views\CreateOrUpdate\Bill.cshtml"
       Write(Html.TemplateField(m => m.PaymentDatePlan, FieldFlex.twins, new DateTimeSettings { ShiftOffset = false }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 87 "..\..\Views\CreateOrUpdate\Bill.cshtml"
       Write(Html.TemplateField(m => m.EndDistributionDate, FieldFlex.twins, new DateTimeSettings { ReadOnly = true, ShiftOffset = false }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 88 "..\..\Views\CreateOrUpdate\Bill.cshtml"
       Write(Html.TemplateField(m => m.PayablePlan, FieldFlex.twins, new Dictionary<string, object> { { "readonly", "readonly" } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 91 "..\..\Views\CreateOrUpdate\Bill.cshtml"
       Write(Html.TemplateField(m => m.Comment, FieldFlex.lone, new Dictionary<string, object> { { "rows", 5 } }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n    </div>\r\n");

});

        }
    }
}
#pragma warning restore 1591
