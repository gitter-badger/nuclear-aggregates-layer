@model DoubleGis.Erm.BLFlex.UI.Web.Mvc.Global.Models.Cyprus.CyprusBargainViewModel
@{
    Layout = "../../Shared/_CardLayout.cshtml";
}

@section CardScripts
{
    <script type="text/javascript">
        window.InitPage = function () {
            window.Card.on('beforepost', function () { window.returnValue = true; });
        }
    </script>
}

@section CardBody
{
    <div style="display: none">
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.UserCanWorkWithAdvertisingAgencies)
        @Html.HiddenFor(m => m.IsBranchOfficeOrganizationUnitChoosingDenied)
        @Html.HiddenFor(m => m.IsLegalPersonChoosingDenied)
        @Html.HiddenFor(m => m.ClientId)
    </div>
    <div class="Tab" id="MainTab" title="@BLResources.GeneralTabTitle">
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Number, FieldFlex.twins, new Dictionary<string, object> { { "readonly", "readonly" }, { "class", "readonly" } })
            @Html.TemplateField(m => m.BargainType, FieldFlex.twins, new LookupSettings { EntityName = EntityName.BargainType, ShowReadOnlyCard = true, ReadOnly = true })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.SignedOn, FieldFlex.twins, new DateTimeSettings { ReadOnly = true, ShiftOffset = false })
            @Html.TemplateField(m => m.ClosedOn, FieldFlex.twins, new DateTimeSettings { ReadOnly = true })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.BargainKind, FieldFlex.twins, null, EnumResources.ResourceManager)
            @Html.TemplateField(m => m.BargainEndDate, FieldFlex.twins, new DateTimeSettings { ShiftOffset = false })
        </div>
        <div class="row-wrapper">
            @if (Model.ClientId != 0)
            {
                @Html.TemplateField(m => m.LegalPerson, FieldFlex.lone, new LookupSettings
                    {
                        EntityName = EntityName.LegalPerson,
                        ShowReadOnlyCard = true,
                        ExtendedInfo = "filterToParent=true",
                        ParentEntityName = EntityName.Client,
                        ParentIdPattern = "ClientId"
                    })
            }
            else
            {
                @Html.TemplateField(m => m.LegalPerson, FieldFlex.lone, new LookupSettings
                    {
                        EntityName = EntityName.LegalPerson,
                        ShowReadOnlyCard = true
                    })
            }
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.BranchOfficeOrganizationUnit, FieldFlex.lone, new LookupSettings { EntityName = EntityName.BranchOfficeOrganizationUnit, ShowReadOnlyCard = true })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Comment, FieldFlex.lone, new Dictionary<string, object> { { "rows", "4" } })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.HasDocumentsDebt, FieldFlex.lone, null, EnumResources.ResourceManager)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.DocumentsComment, FieldFlex.lone)
        </div>
    </div>
}