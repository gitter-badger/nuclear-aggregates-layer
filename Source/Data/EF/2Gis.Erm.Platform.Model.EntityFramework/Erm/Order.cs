//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using DoubleGis.Erm.Platform.Model.Entities.Interfaces;
using DoubleGis.Erm.Platform.Model.Entities.Interfaces.Integration;

namespace DoubleGis.Erm.Platform.Model.Entities.Erm
{
    public sealed partial class Order : 
        IEntity, 
        IEntityKey, 
        ICuratedEntity, 
        IAuditableEntity, 
        IDeletableEntity, 
        IDeactivatableEntity, 
        IReplicableEntity, 
        IStateTrackingEntity
    {
        private long _ownerCode;
        private long? _oldOwnerCode;
    
        public Order()
        {
            this.Bills = new HashSet<Bill>();
            this.Locks = new HashSet<Lock>();
            this.OrderFiles = new HashSet<OrderFile>();
            this.OrderPositions = new HashSet<OrderPosition>();
            this.OrderReleaseTotals = new HashSet<OrderReleaseTotal>();
            this.ReplacingOrders = new HashSet<Order>();
            this.OrdersRegionalAdvertisingSharings = new HashSet<OrdersRegionalAdvertisingSharing>();
            this.ReleaseValidationResults = new HashSet<ReleaseValidationResult>();
            this.OrderValidationResults = new HashSet<OrderValidationResult>();
            this.BaseOrderProcessingRequests = new HashSet<OrderProcessingRequest>();
            this.RenewedOrderProcessingRequests = new HashSet<OrderProcessingRequest>();
            this.OrderValidationCacheEntries = new HashSet<OrderValidationCacheEntry>();
        }
        public long Id { get; set; }
        public System.Guid ReplicationCode { get; set; }
        public string Number { get; set; }
        public long FirmId { get; set; }
        public long SourceOrganizationUnitId { get; set; }
        public long DestOrganizationUnitId { get; set; }
        public Nullable<long> CurrencyId { get; set; }
        public Nullable<long> AccountId { get; set; }
        public System.DateTime BeginDistributionDate { get; set; }
        public System.DateTime EndDistributionDatePlan { get; set; }
        public System.DateTime EndDistributionDateFact { get; set; }
        public int BeginReleaseNumber { get; set; }
        public int EndReleaseNumberPlan { get; set; }
        public int EndReleaseNumberFact { get; set; }
        public short ReleaseCountPlan { get; set; }
        public short ReleaseCountFact { get; set; }
        public Nullable<long> LegalPersonId { get; set; }
        public Nullable<long> BranchOfficeOrganizationUnitId { get; set; }
        public int WorkflowStepId { get; set; }
        public int DiscountReasonEnum { get; set; }
        public string DiscountComment { get; set; }
        public Nullable<System.DateTime> ApprovalDate { get; set; }
        public Nullable<System.DateTime> RejectionDate { get; set; }
        public bool IsTerminated { get; set; }
        public Nullable<long> DealId { get; set; }
        public Nullable<long> DgppId { get; set; }
        public Nullable<long> BargainId { get; set; }
        public long OwnerCode 
    	{
    		get
    		{
    			return _ownerCode;
    		}
    				 
    		set
    		{
    			_oldOwnerCode = _ownerCode;
    			_ownerCode = value;
    		} 
    	}
    	long? ICuratedEntity.OldOwnerCode { get { return _oldOwnerCode; } }
        public long CreatedBy { get; set; }
        public System.DateTime CreatedOn { get; set; }
        public Nullable<long> ModifiedBy { get; set; }
        public Nullable<System.DateTime> ModifiedOn { get; set; }
        public bool IsActive { get; set; }
        public bool IsDeleted { get; set; }
        public byte[] Timestamp { get; set; }
        public byte HasDocumentsDebt { get; set; }
        public string DocumentsComment { get; set; }
        public Nullable<long> TechnicallyTerminatedOrderId { get; set; }
        public System.DateTime SignupDate { get; set; }
        public string RegionalNumber { get; set; }
        public decimal PayablePrice { get; set; }
        public decimal PayablePlan { get; set; }
        public decimal PayableFact { get; set; }
        public Nullable<decimal> DiscountSum { get; set; }
        public Nullable<decimal> DiscountPercent { get; set; }
        public decimal VatPlan { get; set; }
        public decimal AmountToWithdraw { get; set; }
        public decimal AmountWithdrawn { get; set; }
        public Nullable<long> InspectorCode { get; set; }
        public string Comment { get; set; }
        public int OrderType { get; set; }
        public int TerminationReason { get; set; }
        public Nullable<long> PlatformId { get; set; }
        public Nullable<long> LegalPersonProfileId { get; set; }
        public int PaymentMethod { get; set; }
    
        public Bargain Bargain { get; set; }
        public ICollection<Bill> Bills { get; set; }
        public Currency Currency { get; set; }
        public Deal Deal { get; set; }
        public ICollection<Lock> Locks { get; set; }
        public ICollection<OrderFile> OrderFiles { get; set; }
        public ICollection<OrderPosition> OrderPositions { get; set; }
        public ICollection<OrderReleaseTotal> OrderReleaseTotals { get; set; }
        public OrganizationUnit DestOrganizationUnit { get; set; }
        public OrganizationUnit SourceOrganizationUnit { get; set; }
        public Account Account { get; set; }
        public BranchOfficeOrganizationUnit BranchOfficeOrganizationUnit { get; set; }
        public Firm Firm { get; set; }
        public ICollection<Order> ReplacingOrders { get; set; }
        public Order TechnicallyTerminatedOrder { get; set; }
        public ICollection<OrdersRegionalAdvertisingSharing> OrdersRegionalAdvertisingSharings { get; set; }
        public ICollection<ReleaseValidationResult> ReleaseValidationResults { get; set; }
        public ICollection<OrderValidationResult> OrderValidationResults { get; set; }
        public Platform Platform { get; set; }
        public LegalPersonProfile LegalPersonProfile { get; set; }
        public LegalPerson LegalPerson { get; set; }
        public ICollection<OrderProcessingRequest> BaseOrderProcessingRequests { get; set; }
        public ICollection<OrderProcessingRequest> RenewedOrderProcessingRequests { get; set; }
        public ICollection<OrderValidationCacheEntry> OrderValidationCacheEntries { get; set; }
    
    	public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }
    
            if (GetType() != obj.GetType())
            {
                return false;
            }
    
            if (ReferenceEquals(this, obj))
            {
                return true;
            }
    
    		var entityKey = obj as IEntityKey;
    		if (entityKey != null)
    		{
    			return Id == entityKey.Id;
    		}
    		
    		return false;
        }
    
    	override public int GetHashCode()
    	{
    		return Id.GetHashCode();
    	}
    }
}
