@using System.Data.Entity.Core.Metadata.Edm
@using EntityType = NuClear.Model.Common.Entities.EntityType
@model WithdrawalRevertDialogViewModel

@{
    Layout = "../Shared/_DialogLayout.cshtml";
}

@section Title { @BLResources.RevertWithdraw }
@section TopBarTitle { @BLResources.RevertWithdraw }
@section TopBarMessage { @BLResources.SpecifyPeriodAccountingMethodAndOrganizationUnit }

@section PageContent
{
    <style type="text/css">
        td.itemCaption
        {
            vertical-align: top;
            padding-top: 5px;
        }
        
        td.itemValue
        {
            vertical-align: top;
        }
    </style>
    <script type="text/javascript">
    Ext.onReady(function ()
    {
        var isSuccess = '@Model.IsSuccess';
        if (isSuccess == 'True') {
            alert(Ext.getDom("Notifications").innerHTML.trim());
            window.close();
            return;
        } else if (Ext.getDom("Notifications").innerHTML.trim() != "")
        {
            Ext.getDom("Notifications").style.display = "block";
        }

        // show error messages
        if (Ext.getDom("Notifications").innerHTML.trim() != "")
        {
            Ext.get("Notifications").addClass("Notifications");
        }
        else
        {
            Ext.get("Notifications").removeClass("Notifications");
        }

        Ext.get("Cancel").on("click", function ()
        {
            window.close();
        });

        Ext.get("OK").on("click", function ()
        {
            Ext.get("Notifications").removeClass("Notifications");
            if (Ext.DoubleGis.FormValidator.validate(EntityForm))
            {
                Ext.getDom("OK").disabled = "disabled";
                Ext.getDom("Cancel").disabled = "disabled";
                EntityForm.submit();
            }
        });
    });
    </script>
    @using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {
        <div class="Tab">
            <div style="display: none; height: 30px;" id="Notifications" class="Notifications">
                @Model.Message
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.OrganizationUnit, FieldFlex.lone, new LookupSettings{EntityName = EntityType.Instance.OrganizationUnit(), ExtendedInfo = "restrictByUser=true"})
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.AccountingMethod, FieldFlex.lone, null, EnumResources.ResourceManager)
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.PeriodStart, FieldFlex.lone, new CalendarSettings { Store = CalendarSettings.StoreMode.Relative, Display = CalendarSettings.DisplayMode.Month })
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.Comment, FieldFlex.lone, new Dictionary<string, object> { { "rows", "5" } })
            </div>
       </div>
    }
}