#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubleGis.Erm.BLCore.UI.Web.Mvc.Views.CreateOrUpdate
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using DoubleGis.Erm.BLCore.Resources.Server.Properties;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Controllers;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Models;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Settings;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.UserProfiles;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Utils;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.ViewModels;
    using DoubleGis.Erm.Platform.Common;
    using DoubleGis.Erm.Platform.Model.Entities;
    using DoubleGis.Erm.Platform.Model.Entities.Enums;
    using DoubleGis.Erm.Platform.Model.Metadata.Enums;
    using DoubleGis.Erm.Platform.UI.Web.Mvc;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Security;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Utils;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/CreateOrUpdate/UserProfile.cshtml")]
    public partial class UserProfile : System.Web.Mvc.WebViewPage<UserProfileViewModel>
    {
        public UserProfile()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\CreateOrUpdate\UserProfile.cshtml"
  
    Layout = "../Shared/_CardLayout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("CardScripts", () => {

WriteLiteral("\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 122), Tuple.Create("\"", 171)
, Tuple.Create(Tuple.Create("", 128), Tuple.Create("/Scripts/Silverlight.js?", 128), true)
            
            #line 9 "..\..\Views\CreateOrUpdate\UserProfile.cshtml"
, Tuple.Create(Tuple.Create("", 152), Tuple.Create<System.Object, System.Int32>(ThisAssembly.Build
            
            #line default
            #line hidden
, 152), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        var silverlightControl = null;\r\n        window.InitPage = function() {" +
"\r\n            this.on(\"beforebuild\", function(card) {\r\n                Ext.apply" +
"(this, {\r\n                    Save: function() {\r\n                        this.I" +
"tems.Toolbar.disable();\r\n                        this.submitMode = this.submitMo" +
"des.SAVE;\r\n                        if (this.fireEvent(\'beforepost\', this) === fa" +
"lse) {\r\n                            this.Items.Toolbar.enable();\r\n              " +
"              return;\r\n                        }\r\n                        if (th" +
"is.normalizeForm() !== false) {\r\n                            var profileId = Ext" +
".getDom(\"Id\").value;\r\n                            var response = silverlightCont" +
"rol.Content.SLMainViewModel.Save(profileId);\r\n                            respon" +
"se = { responseText: response.ResponseText, isSuccessful: response.IsSuccessful," +
" statusText: response.StatusText };\r\n                            if (response.is" +
"Successful === true) {\r\n                                this.postFormSuccess.cal" +
"l(this, response, response.isSuccessful);\r\n                            } else {\r" +
"\n                                this.postFormFailure.call(this, response);\r\n   " +
"                         }\r\n                        }\r\n                        e" +
"lse {\r\n                            this.Items.Toolbar.enable();\r\n               " +
"         }\r\n                        this.Items.Toolbar.enable();\r\n              " +
"      },\r\n                    SaveAndClose: function() {\r\n                      " +
"  this.Items.Toolbar.disable();\r\n                        this.submitMode = this." +
"submitModes.SAVE_AND_CLOSE;\r\n                        if (this.fireEvent(\'beforep" +
"ost\', this) === false) {\r\n                            this.Items.Toolbar.enable(" +
");\r\n                            return;\r\n                        }\r\n            " +
"            if (this.normalizeForm() !== false) {\r\n                            v" +
"ar profileId = Ext.getDom(\"Id\").value;\r\n                            var response" +
" = silverlightControl.Content.SLMainViewModel.Save(profileId);\r\n                " +
"            response = { responseText: response.ResponseText, isSuccessful: resp" +
"onse.IsSuccessful, statusText: response.StatusText };\r\n                         " +
"   if (response.isSuccessful === true) {\r\n                                this.p" +
"ostFormSuccess.call(this, response, response.isSuccessful);\r\n                   " +
"         } else {\r\n                                this.postFormFailure.call(thi" +
"s, response);\r\n                            }\r\n                        }\r\n       " +
"                 else {\r\n                            this.Items.Toolbar.enable()" +
";\r\n                        }\r\n                        this.Items.Toolbar.enable(" +
");\r\n                        this.Close();\r\n                    },\r\n             " +
"       Close: function() {\r\n                        silverlightControl.Content.S" +
"LMainViewModel.Close();\r\n                        window.close();\r\n              " +
"      }\r\n                });\r\n            });\r\n        };\r\n        function Silv" +
"erlightError(sender, args) {\r\n            var appSource = \"\";\r\n            if (s" +
"ender != null && sender != 0) {\r\n                appSource = sender.getHost().So" +
"urce;\r\n            }\r\n\r\n            var errorType = args.ErrorType;\r\n           " +
" var iErrorCode = args.ErrorCode;\r\n\r\n            if (errorType == \"ImageError\" |" +
"| errorType == \"MediaError\") {\r\n                return;\r\n            }\r\n\r\n      " +
"      var errMsg = \"Unhandled Error in Silverlight Application \" + appSource + \"" +
"\\n\";\r\n\r\n            errMsg += \"Code: \" + iErrorCode + \"    \\n\";\r\n            err" +
"Msg += \"Category: \" + errorType + \"       \\n\";\r\n            errMsg += \"Message: " +
"\" + args.ErrorMessage + \"     \\n\";\r\n\r\n            if (errorType == \"ParserError\"" +
") {\r\n                errMsg += \"File: \" + args.xamlFile + \"     \\n\";\r\n          " +
"      errMsg += \"Line: \" + args.lineNumber + \"     \\n\";\r\n                errMsg " +
"+= \"Position: \" + args.charPosition + \"     \\n\";\r\n            } else if (errorTy" +
"pe == \"RuntimeError\") {\r\n                if (args.lineNumber != 0) {\r\n          " +
"          errMsg += \"Line: \" + args.lineNumber + \"     \\n\";\r\n                   " +
" errMsg += \"Position: \" + args.charPosition + \"     \\n\";\r\n                }\r\n   " +
"             errMsg += \"MethodName: \" + args.methodName + \"     \\n\";\r\n          " +
"  }\r\n\r\n            throw new Error(errMsg);\r\n        }\r\n        \r\n        functi" +
"on onSilverlightControlLoaded(sender, args) {\r\n            silverlightControl = " +
"sender.getHost();\r\n            var viewConfigTemplate = \'ViewConfig.\';\r\n        " +
"    var viewModel = {};\r\n            var viewConfig = {};\r\n            Ext.each(" +
"Ext.query(\"input\"), function (el) {\r\n                \r\n                if (el.id" +
" && !Ext.isEmpty(el.name) && el.name !== \'ViewConfig_DependencyList\') {\r\n       " +
"             var field = Ext.get(el.name);\r\n                    if (!field) {\r\n " +
"                       return;\r\n                    }\r\n                    \r\n   " +
"                 if (field.hasClass(\'x-calendar\')) {\r\n                        va" +
"r calendar = Ext.getCmp(field.id);\r\n                        var calendarValue = " +
"calendar.getValue();\r\n                        viewModel[field.dom.name] = !Ext.i" +
"sEmpty(calendarValue)\r\n                            ? calendarValue//.format(Ext." +
"CultureInfo.DateTimeFormatInfo.PhpInvariantDateTimePattern)\r\n                   " +
"         : null;\r\n                    }\r\n                    else if (field.hasC" +
"lass(\'x-lookup\')) {\r\n                        var lookupValue = Ext.getCmp(field." +
"id).getValue();\r\n                        viewModel[field.dom.name] = !Ext.isEmpt" +
"y(lookupValue)\r\n                            ? { Key: lookupValue.id, Value: look" +
"upValue.name }\r\n                            : null;\r\n                    }\r\n    " +
"                else if (field.dom.name.lastIndexOf(viewConfigTemplate, 0) === 0" +
") {\r\n                        viewConfig[field.dom.name.slice(viewConfigTemplate." +
"length)] = field.dom.value;\r\n                    }\r\n                    else if " +
"(field.dom.name == \"Id\" && field.dom.value == \"\") {\r\n                        vie" +
"wModel[field.dom.name] = \"0\";\r\n                    }\r\n                    else {" +
"\r\n                        viewModel[field.dom.name] = field.dom.value;\r\n        " +
"            }\r\n                }\r\n            }, this);\r\n            viewModel.V" +
"iewConfig = viewConfig;\r\n            var wrappedViewModel = silverlightControl.C" +
"ontent.services.createObject(\"UserProfileViewModel\", viewModel);\r\n            si" +
"lverlightControl.Content.SLMainViewModel.Init(wrappedViewModel);\r\n        }\r\n   " +
" </script>\r\n");

});

WriteLiteral("\r\n");

DefineSection("CardBody", () => {

WriteLiteral("\r\n");

WriteLiteral("    ");

            
            #line 148 "..\..\Views\CreateOrUpdate\UserProfile.cshtml"
Write(Html.HiddenFor(m => m.IdentityServiceUrl));

            
            #line default
            #line hidden
WriteLiteral("\r\n    <div");

WriteLiteral(" class=\"Tab\"");

WriteLiteral(" id=\"MainTab\"");

WriteAttribute("title", Tuple.Create(" title=\"", 6924), Tuple.Create("\"", 6960)
            
            #line 149 "..\..\Views\CreateOrUpdate\UserProfile.cshtml"
, Tuple.Create(Tuple.Create("", 6932), Tuple.Create<System.Object, System.Int32>(BLResources.GeneralTabTitle
            
            #line default
            #line hidden
, 6932), false)
);

WriteLiteral(">\r\n");

            
            #line 150 "..\..\Views\CreateOrUpdate\UserProfile.cshtml"
        
            
            #line default
            #line hidden
            
            #line 150 "..\..\Views\CreateOrUpdate\UserProfile.cshtml"
         if (Model != null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <div");

WriteLiteral(" class=\"row-wrapper\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 153 "..\..\Views\CreateOrUpdate\UserProfile.cshtml"
           Write(Html.EditableId(m => m.Id));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </div>\r\n");

            
            #line 155 "..\..\Views\CreateOrUpdate\UserProfile.cshtml"
            
            
            #line default
            #line hidden
            
            #line 155 "..\..\Views\CreateOrUpdate\UserProfile.cshtml"
       Write(Html.VersionedSilverlightControl(
                new SilverlightControlSettings
                    {
                        AutoUpgrade = true,
                        BackgroundColor = "#FFEAF3FF",
                        ControlCulture = ViewData.GetUserLocaleInfo().CultureName,
                        ControlXapFileName = "2Gis.Erm.BLCore.UI.Web.Silverlight.xap",
                        InitParams = @Model.InitParams,
                        MinRuntimeVersion = SilverlightControlSettings.Silverlight5ReleaseVersionNumberString,
                        OnLoadedJsHandlerName = "onSilverlightControlLoaded",
                        OnErrorJsHandlerName = "onSilverlightError"
                    }));

            
            #line default
            #line hidden
            
            #line 166 "..\..\Views\CreateOrUpdate\UserProfile.cshtml"
                      
        }

            
            #line default
            #line hidden
WriteLiteral("\r\n        \r\n    </div>\r\n");

});

        }
    }
}
#pragma warning restore 1591
