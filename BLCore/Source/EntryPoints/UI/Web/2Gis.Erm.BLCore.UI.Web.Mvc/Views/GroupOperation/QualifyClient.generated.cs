#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubleGis.Erm.BLCore.UI.Web.Mvc.Views.GroupOperation
{
    using System;
    using System.Collections.Generic;
    using System.Web.Mvc;
    using System.Web.Mvc.Html;

    using DoubleGis.Erm.BLCore.Resources.Server.Properties;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Models.GroupOperation;
    using DoubleGis.Erm.BLCore.UI.Web.Mvc.Utils;
    using DoubleGis.Erm.Platform.Model.Entities;
    using DoubleGis.Erm.Platform.UI.Web.Mvc.Utils;
    using NuClear.Model.Common.Entities;

    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/GroupOperation/QualifyClient.cshtml")]
    public partial class QualifyClient : System.Web.Mvc.WebViewPage<OwnerGroupOperationViewModel>
    {
        public QualifyClient()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\GroupOperation\QualifyClient.cshtml"
  
    Layout = "../Shared/_DialogLayout.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("Title", () => {

WriteLiteral(" ");

            
            #line 7 "..\..\Views\GroupOperation\QualifyClient.cshtml"
            Write(BLResources.Qualify);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarTitle", () => {

WriteLiteral(" ");

            
            #line 8 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                  Write(BLResources.QualifyClient);

            
            #line default
            #line hidden
WriteLiteral(" ");

});

DefineSection("TopBarMessage", () => {

WriteLiteral(" ");

            
            #line 9 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                    Write(string.Format(BLResources.GroupOperationTopBarMessage, Model.EntityTypeName.ToStringLocalized(EnumResources.ResourceManager, EnumResources.Culture)));

            
            #line default
            #line hidden
WriteLiteral(" ");

});

WriteLiteral("\r\n");

DefineSection("PageContent", () => {

WriteLiteral("\r\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteAttribute("href", Tuple.Create(" href=\"", 437), Tuple.Create("\"", 485)
, Tuple.Create(Tuple.Create("", 444), Tuple.Create("/Content/Progress.css?", 444), true)
            
            #line 13 "..\..\Views\GroupOperation\QualifyClient.cshtml"
, Tuple.Create(Tuple.Create("", 466), Tuple.Create<System.Object, System.Int32>(ThisAssembly.Build
            
            #line default
            #line hidden
, 466), false)
);

WriteLiteral(" />\r\n\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 504), Tuple.Create("\"", 562)
, Tuple.Create(Tuple.Create("", 510), Tuple.Create("/Scripts/Ext.Ajax.syncRequest.js?", 510), true)
            
            #line 15 "..\..\Views\GroupOperation\QualifyClient.cshtml"
, Tuple.Create(Tuple.Create("", 543), Tuple.Create<System.Object, System.Int32>(ThisAssembly.Build
            
            #line default
            #line hidden
, 543), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n    <script");

WriteAttribute("src", Tuple.Create(" src=\"", 609), Tuple.Create("\"", 675)
, Tuple.Create(Tuple.Create("", 615), Tuple.Create("/Scripts/DoubleGis.UI.GroupOperations.js?", 615), true)
            
            #line 16 "..\..\Views\GroupOperation\QualifyClient.cshtml"
, Tuple.Create(Tuple.Create("", 656), Tuple.Create<System.Object, System.Int32>(ThisAssembly.Build
            
            #line default
            #line hidden
, 656), false)
);

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral("></script>\r\n\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        Ext.namespace(\'Ext.DoubleGis.UI.Client\');\r\n        Ext.DoubleGis.UI.Cl" +
"ient.QualifyProcessor = Ext.extend(Ext.DoubleGis.UI.GroupProcessor, {\r\n         " +
"   OwnerCode: 0,\r\n            UserCodeLookup: {},\r\n            constructor: func" +
"tion(config) {\r\n                Ext.apply(config, {\r\n                    listene" +
"rs: {\r\n                        configspecificcontrols: function() {\r\n           " +
"                 this.ConfigCustomControls();\r\n                        },\r\n     " +
"                   applyusersettings: function() {\r\n                            " +
"this.ApplyUserSettings();\r\n                        }\r\n                    }\r\n   " +
"             });\r\n                Ext.DoubleGis.UI.Client.QualifyProcessor.super" +
"class.constructor.call(this, config);\r\n            },\r\n            ConfigCustomC" +
"ontrols: function() {\r\n                var onRadioClick = this.RadioClick.create" +
"Delegate(this);\r\n                Ext.get(\"rdoAssignToMe\").on(\"click\", onRadioCli" +
"ck);\r\n                Ext.get(\"rdoAssignToUser\").on(\"click\", onRadioClick);\r\n   " +
"             this.UserCodeLookup = Ext.getCmp(\"UserCode\");\r\n            },\r\n    " +
"        RadioClick: function() {\r\n                if (Ext.getDom(\"rdoAssignToMe\"" +
").checked) {\r\n                    this.UserCodeLookup.disable();\r\n              " +
"  } else if (Ext.getDom(\"rdoAssignToUser\").checked) {\r\n                    this." +
"UserCodeLookup.enable();\r\n                }\r\n            },\r\n            IsUserS" +
"ettingsValid: function() {\r\n                if (Ext.getDom(\"rdoAssignToUser\").ch" +
"ecked) {\r\n                    if (Ext.getDom(\"UserCode\").value == \"\") {\r\n       " +
"                 Ext.MessageBox.show({\r\n                            title: \'\',\r\n" +
"                            msg: Ext.LocalizedResources.QualifyMustPickUser,\r\n  " +
"                          buttons: window.Ext.MessageBox.OK,\r\n                  " +
"          width: 300,\r\n                            icon: window.Ext.MessageBox.E" +
"RROR\r\n                        });\r\n                        return false;\r\n      " +
"              }\r\n                }\r\n                return true;\r\n            }," +
"\r\n            CheckForDebtsAndProcess: function() {\r\n                if (this.Co" +
"nfig.Entities.length) {\r\n\r\n                    // waitbox заменён на Mask, поско" +
"льку от первого в некоторых случаях у ie сносило крышу:\r\n                    // " +
"ExtJs при обработке задач использует функции setInterval/clearInterval и вот пос" +
"ледний не отрабатывал как надо: обработчик продолжал вызываться.\r\n              " +
"      // Внешне это выглядело как неограниченное число вызовов обработчиков, зар" +
"егистрированных через Ext.onReady.\r\n                    var waitMask = new Ext.L" +
"oadMask(Ext.getBody());\r\n                    waitMask.show();\r\n\r\n               " +
"     // Config.Entities может содержать как массив id, так и массив {entityName," +
" id}, контракт сервиса предполагает наличие массива id\r\n                    var " +
"ids = [];\r\n                    this.Config.Entities.forEach(function(e) {\r\n     " +
"                   ids.push(e.Id ? e.Id : e);\r\n                    });\r\n\r\n      " +
"              var checkUrl = Ext.BasicOperationsServiceRestUrl + \'CheckForDebts." +
"svc/Rest\';\r\n                    var response = window.Ext.Ajax.syncRequest({\r\n  " +
"                      timeout: 1200000,\r\n                        url: checkUrl,\r" +
"\n                        method: \'POST\',\r\n                        jsonData: {\r\n " +
"                           entityName: \'Client\',\r\n                            en" +
"tityIds: Ext.encode(ids)\r\n                        }\r\n                    });\r\n\r\n" +
"                    waitMask.hide();\r\n\r\n                    if ((response.conn.s" +
"tatus >= 200 && response.conn.status < 300) || (Ext.isIE && response.conn.status" +
" == 1223)) {\r\n                        var checkResult = Ext.decode(response.conn" +
".responseText);\r\n\r\n                        if (checkResult.DebtsExist) {\r\n      " +
"                      Ext.MessageBox.show({\r\n                                tit" +
"le: Ext.LocalizedResources.Alert,\r\n                                msg: Ext.Loca" +
"lizedResources.SomeOfTheClientsHaveDebtsAlert + \"\\r\\n\" + checkResult.Message,\r\n " +
"                               width: 300,\r\n                                butt" +
"ons: window.Ext.MessageBox.ContinueCANCEL,\r\n                                proc" +
"essor: this,\r\n                                fn: function(buttonId, value, opt)" +
" {\r\n                                    if (buttonId == \'Continue\') {\r\n         " +
"                               opt.processor.Process();\r\n                       " +
"             } else {\r\n                                        window.close();\r\n" +
"                                    }\r\n                                },\r\n     " +
"                           icon: window.Ext.MessageBox.QUESTION\r\n               " +
"             });\r\n                        } else {\r\n                            " +
"this.Process();\r\n                        }\r\n                    } else {\r\n      " +
"                  Ext.MessageBox.show({\r\n                            title: Ext." +
"LocalizedResources.Alert,\r\n                            msg: Ext.LocalizedResourc" +
"es.CheckClientsDebtsFailed,\r\n                            width: 300,\r\n          " +
"                  buttons: window.Ext.MessageBox.ContinueCANCEL,\r\n              " +
"              processor: this,\r\n                            fn: function(buttonI" +
"d, value, opt) {\r\n                                if (buttonId == \'Continue\') {\r" +
"\n                                    opt.processor.Process();\r\n                 " +
"               } else {\r\n                                    window.close();\r\n  " +
"                              }\r\n                            },\r\n               " +
"             icon: window.Ext.MessageBox.QUESTION\r\n                        });\r\n" +
"                    }\r\n                } else {\r\n                    window.clos" +
"e();\r\n                }\r\n            },\r\n            ApplyUserSettings: function" +
"() {\r\n                this.OwnerCode = Ext.getDom(\"rdoAssignToUser\").checked ? t" +
"his.UserCodeLookup.getValue().id : \"\";\r\n\r\n                Ext.getDom(\"rdoAssignT" +
"oMe\").disabled = \"disabled\";\r\n                Ext.getDom(\"rdoAssignToUser\").disa" +
"bled = \"disabled\";\r\n                this.UserCodeLookup.disable();\r\n            " +
"},\r\n            CreateParamsForControllerCall: function(entityId) {\r\n           " +
"     return { entityId: entityId, ownerCode: this.OwnerCode };\r\n            }\r\n " +
"       });\r\n        Ext.onReady(function() {\r\n            var ids = !window.dial" +
"ogArguments ? [] : (window.dialogArguments.Values ? window.dialogArguments.Value" +
"s : window.dialogArguments);\r\n\r\n            var config = {\r\n                Enti" +
"ties: ids, // массив id сущностей\r\n                OperationName: \'");

            
            #line 151 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                           Write(Model.OperationName);

            
            #line default
            #line hidden
WriteLiteral(@"', // тип операции - Qualify, Assign, ChangeTerritory
                CloseButtonText: Ext.LocalizedResources.Close, // локализованная надпись для кнопки закрыть
                NeedToSelectOneOrMoreItemsMsg: Ext.LocalizedResources.NeedToSelectOneOrMoreItems, // локализованная надпись о том что нужно выбрать один или несколько элементов
                ResultMessageTitle: Ext.LocalizedResources.GroupOperationResultsTitle, // локализованная надпись - заголовок для результатов операции
                ResultMessageTemplate: Ext.LocalizedResources.GroupOperationResultsMessage // локализованная надпись - шаблон строки для результатов операции
            };
            var qualifyProcessor = new Ext.DoubleGis.UI.Client.QualifyProcessor(config);
            if (!qualifyProcessor.CheckProcessingPossibility()) {
                return;
            }
            qualifyProcessor.CheckForDebtsAndProcess();
        }, window, { single: true });
    </script>
");

            
            #line 164 "..\..\Views\GroupOperation\QualifyClient.cshtml"
    
            
            #line default
            #line hidden
            
            #line 164 "..\..\Views\GroupOperation\QualifyClient.cshtml"
     using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {

            
            #line default
            #line hidden
WriteLiteral("        <table");

WriteLiteral(" cellspacing=\"5\"");

WriteLiteral(" cellpadding=\"5\"");

WriteLiteral(" width=\"100%\"");

WriteLiteral(" height=\"100%\"");

WriteLiteral(">\r\n            <colgroup>\r\n                <col");

WriteLiteral(" width=\"26\"");

WriteLiteral(" />\r\n                <col />\r\n            </colgroup>\r\n            <tbody");

WriteLiteral(" id=\"qualifysettings\"");

WriteLiteral(">\r\n                <tr>\r\n                    <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" style=\"height: 24px;\"");

WriteLiteral(" id=\"Notifications\"");

WriteLiteral(">");

            
            #line 174 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                                                 Write(Model.Message);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n " +
"                   <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <input");

WriteLiteral(" id=\"rdoAssignToMe\"");

WriteLiteral(" class=\"radio\"");

WriteLiteral(" checked=\"checked\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"AssignedUser\"");

WriteLiteral(" />\r\n                    </td>\r\n                    <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(" for=\"rdoAssignTome\"");

WriteLiteral(">");

            
            #line 182 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                                                        Write(BLResources.QualifyAssignToMe);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                        <br />\r\n                        <div");

WriteLiteral(" style=\"color: #444444; padding-top: 5px\"");

WriteLiteral(">");

            
            #line 184 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                                                 Write(BLResources.QualifyAssignToMeClientLegend);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n " +
"                   <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n                        &nbsp;\r\n                    </td>\r\n                </t" +
"r>\r\n                <tr>\r\n                    <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <input");

WriteLiteral(" id=\"rdoAssignToUser\"");

WriteLiteral(" class=\"radio\"");

WriteLiteral(" type=\"radio\"");

WriteLiteral(" name=\"AssignedUser\"");

WriteLiteral(" />\r\n                    </td>\r\n                    <td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" style=\"font-weight: bold\"");

WriteLiteral(" for=\"rdoAssignToUser\"");

WriteLiteral(">");

            
            #line 197 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                                                          Write(BLResources.QualifyAssignToOtherUser);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                        <br />\r\n                        <div");

WriteLiteral(" style=\"padding-bottom: 10px; color: #444444; padding-top: 5px\"");

WriteLiteral(">\r\n                            <label");

WriteLiteral(" for=\"rdoAssignToUser\"");

WriteLiteral(">");

            
            #line 200 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                                    Write(BLResources.QualifyAssignToOtherUserClientLegend);

            
            #line default
            #line hidden
WriteLiteral("</label>\r\n                        </div>\r\n                        <table");

WriteLiteral(" style=\"table-layout: fixed\"");

WriteLiteral(" cellspacing=\"0\"");

WriteLiteral(" cellpadding=\"0\"");

WriteLiteral(" width=\"100%\"");

WriteLiteral(">\r\n                            <tbody>\r\n                                <tr>\r\n   " +
"                                 <td>\r\n");

WriteLiteral("                                        ");

            
            #line 206 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                                   Write(Html.LookupFor(k => k.UserCode, new LookupSettings { Disabled = true, EntityName = EntityType.Instance.User(), ExtendedInfo = "'hideReserveUser=true'" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                    </td>\r\n                                </tr" +
">\r\n                            </tbody>\r\n                        </table>\r\n     " +
"               </td>\r\n                </tr>\r\n                <tr");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(">\r\n                    <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(">\r\n");

WriteLiteral("                        ");

            
            #line 215 "..\..\Views\GroupOperation\QualifyClient.cshtml"
                   Write(Html.Hidden("EntityType", Model.EntityTypeName.Description));

            
            #line default
            #line hidden
WriteLiteral("\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n       " +
"     <tbody>\r\n                <tr>\r\n                    <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral(" style=\"padding-left: 10px;\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"pbDiv\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" id=\"pbInner\"");

WriteLiteral(">\r\n                            </div>\r\n                        </div>\r\n          " +
"          </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n" +
"");

            
            #line 230 "..\..\Views\GroupOperation\QualifyClient.cshtml"
    }

            
            #line default
            #line hidden
});

        }
    }
}
#pragma warning restore 1591
