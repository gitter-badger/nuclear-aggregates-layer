<UserControl x:Class="DoubleGis.Erm.UI.WPF.Client.Modules.ErmClient.Views.Custom.OrderPositionAdvertisementsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:custom="clr-namespace:DoubleGis.Erm.UI.WPF.Client.Modules.ErmClient.Views.Custom"
             xmlns:lookup="clr-namespace:DoubleGis.Erm.UI.WPF.Client.Common.Presentation.Controls.Lookup"
             xmlns:blendability="clr-namespace:DoubleGis.Erm.UI.WPF.Client.Blendability"
             mc:Ignorable="d" 
             d:DataContext="{x:Static blendability:DesignTimeDataContainer+Cards.OrderPositionAdvertisementViewModel}">
    <UserControl.Resources>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                            <Path Fill="Transparent" Stroke="#FF989898" x:Name="ExpandPath">
                                <Path.Data>
                                    <PathGeometry Figures="M0,0 L0,6 L6,0 z"/>
                                </Path.Data>
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="PricePosition">
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="450" />
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" x:Name="Label" VerticalAlignment="Center" Margin="0" Content="{Binding Name}" FontWeight="Bold"/>
                <CheckBox Grid.Column="1" VerticalAlignment="Center" Margin="5,0" IsChecked="{Binding IsChecked, Mode=TwoWay}" Visibility="{Binding CheckVisibility, Mode=OneWay}"/>
                <lookup:LookupControl Grid.Column="2" VerticalAlignment="Center" Margin="5,0" 
                                      DataContext="{Binding AdvertisementLink}"
                                      Visibility="{Binding Path=DataContext.AdvertisementVisibility, Mode=OneWay, ElementName=ContentItem}" 
                                      IsEnabled="{Binding Path=DataContext.IsChecked, Mode=OneWay, ElementName=ContentItem}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="Address">
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="450" />
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" x:Name="Label" VerticalAlignment="Center" Margin="0"  Content="{Binding Name}" />
                <CheckBox Grid.Column="1" VerticalAlignment="Center" Margin="5,0" IsChecked="{Binding IsChecked, Mode=TwoWay}" Visibility="{Binding CheckVisibility, Mode=OneWay}"/>
                <lookup:LookupControl Grid.Column="2" VerticalAlignment="Center" Margin="5,0" 
                                      DataContext="{Binding AdvertisementLink}"
                                      Visibility="{Binding Path=DataContext.AdvertisementVisibility, Mode=OneWay, ElementName=ContentItem}" 
                                      IsEnabled="{Binding Path=DataContext.IsChecked, Mode=OneWay, ElementName=ContentItem}" />
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsLeaf}" Value="false">
                    <Setter Property="FontWeight" TargetName="Label" Value="Bold"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="Category">
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="450" />
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" x:Name="Label" VerticalAlignment="Center" Margin="0"  Content="{Binding Name}" />
                <CheckBox Grid.Column="1" VerticalAlignment="Center" Margin="5,0" IsChecked="{Binding IsChecked, Mode=TwoWay}" Visibility="{Binding CheckVisibility, Mode=OneWay}"/>
                <lookup:LookupControl Grid.Column="2" VerticalAlignment="Center" Margin="5,0"
                                      DataContext="{Binding AdvertisementLink}"
                                      Visibility="{Binding Path=DataContext.AdvertisementVisibility, Mode=OneWay, ElementName=ContentItem}" 
                                      IsEnabled="{Binding Path=DataContext.IsChecked, Mode=OneWay, ElementName=ContentItem}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="Theme">
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="450" />
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" x:Name="Label" VerticalAlignment="Center" Margin="0"  Content="{Binding Name}" />
                <CheckBox Grid.Column="1" VerticalAlignment="Center" Margin="5,0" IsChecked="{Binding IsChecked, Mode=TwoWay}" Visibility="{Binding CheckVisibility, Mode=OneWay}"/>
                <lookup:LookupControl Grid.Column="2" VerticalAlignment="Center" Margin="5,0" 
                                      DataContext="{Binding AdvertisementLink}"
                                      Visibility="{Binding Path=DataContext.AdvertisementVisibility, Mode=OneWay, ElementName=ContentItem}" 
                                      IsEnabled="{Binding Path=DataContext.IsChecked, Mode=OneWay, ElementName=ContentItem}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="CategoryAdder">
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" x:Name="Button" VerticalAlignment="Center" Margin="0" Content="{Binding Name, Mode=OneWay}" Command="{Binding OrderPositionCommand}"/>
            </Grid>
        </DataTemplate>

        <custom:OrderPositionAdvertisementStyleSelector x:Key="OrderPositionAdvertisementStyleSelector" 
                                                       PricePosition="{StaticResource PricePosition}"
                                                       Address="{StaticResource Address}"
                                                       Category="{StaticResource Category}"
                                                       CategoryAdder="{StaticResource CategoryAdder}"
                                                       Theme="{StaticResource Theme}"/>

        <Style x:Key="OrderPositionAdvertisementTreeStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="16" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentControl Grid.Column="1" ContentTemplateSelector="{StaticResource OrderPositionAdvertisementStyleSelector}" Content="{Binding}" x:Name="ContentItem"/>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <TreeView ItemContainerStyle="{DynamicResource OrderPositionAdvertisementTreeStyle}" ItemsSource="{Binding}" Grid.IsSharedSizeScope="True">
        <TreeView.ItemTemplate>
            <HierarchicalDataTemplate ItemsSource="{Binding Children}" />
        </TreeView.ItemTemplate>
    </TreeView>
</UserControl>
