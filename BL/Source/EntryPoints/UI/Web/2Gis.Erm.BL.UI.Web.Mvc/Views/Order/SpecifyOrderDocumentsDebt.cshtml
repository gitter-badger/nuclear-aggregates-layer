@model SpecifyOrderDocumentsDebtViewModel

@{
    Layout = "../Shared/_DialogLayout.cshtml";
}

@section Title { @BLResources.ManageDocumentsDebt }
@section TopBarTitle { @BLResources.ManageDocumentsDebt }
@section TopBarMessage {  }

@section PageContent
{
    <script type="text/javascript">
        Ext.onReady(function () {
            if (Ext.getDom("Notifications").innerHTML.trim() == "OK") {
                window.returnValue = 'OK';
                window.close();
                return;
            } else if (Ext.getDom("Notifications").innerHTML.trim() != "") {
                Ext.getDom("Notifications").style.display = "block";
            }

            Ext.get("Cancel").on("click", function () { window.returnValue = 'CANCELED'; window.close(); });
            Ext.get("OK").on("click", function () {
                if (Ext.DoubleGis.FormValidator.validate(window.EntityForm)) {
                    Ext.getDom("OK").disabled = "disabled";
                    Ext.getDom("Cancel").disabled = "disabled";
                    EntityForm.submit();
                }
            });
        });
    </script>
    
   
    @using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {
        <div class="Tab">
            <div style="display: none; height: 15px;" id="Notifications" class="Notifications">
                @Model.Message
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.Order,
                                    FieldFlex.lone,
                                    new LookupSettings { EntityName = EntityName.Order, ReadOnly = true })
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.HasDocumentsDebt,  FieldFlex.lone, null, EnumResources.ResourceManager)
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.DocumentsComment, FieldFlex.lone)
            </div>
        </div>
    }
}