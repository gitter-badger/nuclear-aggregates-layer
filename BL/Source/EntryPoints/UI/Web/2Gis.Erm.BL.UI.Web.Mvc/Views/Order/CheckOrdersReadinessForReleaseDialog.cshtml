@using System.Globalization

@model CheckOrdersReadinessForReleaseDialogViewModel

@{
    Layout = "../Shared/_DialogLayout.cshtml";
}

@section Title { @BLResources.OrdersReadinessForReleaseReportTitle }
@section TopBarTitle { @BLResources.OrdersReadinessForReleaseReportTitle }
@section TopBarMessage { @BLResources.OrdersReadinessForReleaseReportParametersInformation }

@section PageContent
{
    <link rel="stylesheet" type="text/css" href="/Content/Ext.ux.DetailedProgressWindow.css?@ThisAssembly.Build" />
    
    <script src="/Scripts/Ext.ux.DetailedProgressWindow.js?@ThisAssembly.Build" type="text/javascript"></script>
    <script src="/Scripts/Ext.ux.AsyncOperationClientManager.js?@ThisAssembly.Build" type="text/javascript"></script>

    <script type="text/javascript">
    Ext.onReady(function ()
    {
        if (Ext.getDom('ErrorsLink'))
        {
            Ext.getDom('ErrorsLink').onclick = function ()
            {
                Ext.getDom('ErrorsForm').submit();
            };
        }

        //Show error messages
        if (Ext.getDom("Notifications").innerHTML.trim() != "")
        {
            Ext.get("Notifications").addClass("Notifications");
        }
        else
        {
            Ext.get("Notifications").removeClass("Notifications");
        }

        Ext.get("Cancel").on("click", function ()
        {
            window.close();
        });

        Ext.get("OK").on("click", function ()
        {
            if (Ext.DoubleGis.FormValidator.validate(EntityForm))
            {
                Ext.getDom("OK").disabled = true;
                EntityForm.submit();
            }
        });

        // Временно отключаем галку "Включая подчинённых", ERM-925
        var tt = new Ext.ToolTip({
            target: 'IncludeOwnerDescendants-wrapper',
            html: Ext.LocalizedResources.DisabledFunctionality
        });
    });

    </script>
    
    @if(Model.HasErrors == true)
    {
    <div style="height: 8px; padding-left: 5px;padding-top: 4px;position: fixed;" id="DivErrors">
        @using(Html.BeginForm("GetOperationLog", "Operation", FormMethod.Post, new Dictionary<string, object> { { "target", "_blank" }, {"id", "ErrorsForm"} }))
        {
            <input type="hidden" name="operationId" value="@Model.ErrorLogFileId" />
        }
    </div>
    }

    @using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {
        @Html.Hidden("now", DateTime.UtcNow.ToString(CultureInfo.InvariantCulture))
        <div class="Tab">
        <div style="height: 18px;" id="Notifications" class="Notifications">
            @Model.Message
            @if (Model.HasErrors == true)
            {
                <a href="#" id="ErrorsLink"> Просмотреть ошибки...</a>
            }
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.StartPeriodDate, FieldFlex.lone, new CalendarSettings { Store = CalendarSettings.StoreMode.Relative, Display = CalendarSettings.DisplayMode.Month })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.OrganizationUnit, FieldFlex.lone, new LookupSettings { EntityName = EntityType.Instance.OrganizationUnit() })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Owner, FieldFlex.lone, new LookupSettings { EntityName = EntityType.Instance.User()})
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.IncludeOwnerDescendants, FieldFlex.lone, new Dictionary<string, object> {{"disabled", "disabled"}})
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.CheckAccountBalance, FieldFlex.lone)
        </div>
    </div>
    }
}