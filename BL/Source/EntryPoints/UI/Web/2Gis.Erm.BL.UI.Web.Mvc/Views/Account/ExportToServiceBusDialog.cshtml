@using System.Globalization

@model ExportAccountToServiceBusViewModel

@{
    Layout = "../Shared/_DialogLayout.cshtml";
}

@section Title { @BLResources.Withdrawal }
@section TopBarTitle { @BLResources.Withdrawal }
@section TopBarMessage { @BLResources.SpecifyPeriodAndOrganizationUnit }

@section PageContent
{
    <style type="text/css">
        td.itemCaption {
            vertical-align: top;
            padding-top: 5px;
        }

        td.itemValue {
            vertical-align: top;
        }
    </style>

    <script type="text/javascript">
        Ext.onReady(function () {

            if (Ext.getDom('ErrorsLink')) {
                Ext.getDom('ErrorsLink').onclick = function () {
                    Ext.getDom('ResultForm').submit();
                };
            }

            if (Ext.getDom("Notifications").innerHTML.trim() == "OK") {

            } else if (Ext.getDom("Notifications").innerHTML.trim() != "") {
                Ext.getDom("Notifications").style.display = "block";
            }


            // show error messages
            if (Ext.getDom("Notifications").innerHTML.trim() != "") {
                Ext.get("Notifications").addClass("Notifications");
            }
            else {
                Ext.get("Notifications").removeClass("Notifications");
            }

            Ext.get("Cancel").on("click", function () { window.close(); });
            Ext.get("OK").on("click", function () {
                if (Ext.DoubleGis.FormValidator.validate(EntityForm)) {
                    Ext.getDom("OK").disabled = "disabled";
                    Ext.getDom("Cancel").disabled = "disabled";
                    EntityForm.submit();
                }
            });
        });
    </script>

    @if (Model.HasResult == true)
    {
        <div style="height: 8px; padding-left: 5px;padding-top: 4px;position: fixed;" id="DivErrors">
            @using (Html.BeginForm("GetOperationLog", "Operation", FormMethod.Post, new Dictionary<string, object> { { "target", "_blank" }, { "id", "ResultForm" } }))
            {
                <input type="hidden" name="operationId" value="@Model.FileId" />
            }
        </div>
    }

    <div style="height: 18px;" id="Notifications" class="Notifications">
        @Model.Message
        @if (Model.HasResult == true)
        {
            <a href="#" id="ErrorsLink"> Просмотреть результат...</a>
        }
    </div>

    @using (Html.BeginForm(null, null, null, FormMethod.Post, new Dictionary<string, object> { { "id", "EntityForm" } }))
    {
        @Html.Hidden("now", DateTime.UtcNow.ToString(CultureInfo.InvariantCulture))
        <div class="Tab">
            <div style="display: none; height: 15px;" id="Notifications" class="Notifications">
                @Model.Message
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.OrganizationUnit, FieldFlex.lone, new LookupSettings { EntityName = EntityType.Instance.OrganizationUnit(), ExtendedInfo = "restrictByFranchisees=true" })
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.PeriodStart, FieldFlex.lone, new CalendarSettings { Store = CalendarSettings.StoreMode.Relative, Display = CalendarSettings.DisplayMode.Month })
            </div>
            <div class="row-wrapper">
                @Html.TemplateField(m => m.CreateCsvFile, FieldFlex.lone)
             </div>
        </div>

        <div style="display: none">
            <div id="MessageType">
                @Model.MessageType
            </div>
            <div id="Message">
                @Model.Message
            </div>
        </div>
    }
}