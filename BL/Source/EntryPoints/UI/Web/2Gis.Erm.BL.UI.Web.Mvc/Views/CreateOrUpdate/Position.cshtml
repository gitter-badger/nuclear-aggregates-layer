
@model PositionViewModel

@{
    Layout = "../Shared/_CardLayout.cshtml";
}

@section CardScripts
{
}

@section CardBody
{
    @{
        var elementStyle = Model.IsPublished
                                ? new Dictionary<string, object> { { "disabled", "disabled" } }
                                : new Dictionary<string, object>();
    }
    
    @Html.HiddenFor(m => m.IsPublished)
    @Html.HiddenFor(m => m.IsReadonlyTemplate)
    @Html.HiddenFor(m => m.RestrictChildPositionPlatformsCanBeChanged)

    <div class="Tab" id="MainTab" title="@BLResources.TabTitleInformation">
        <div class="row-wrapper">
            @Html.EditableId(m => m.Id)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Name, FieldFlex.lone, new Dictionary<string, object> {{"class", "inputfields"}})
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.IsComposite, FieldFlex.lone, elementStyle)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.RestrictChildPositionPlatforms, FieldFlex.lone, elementStyle)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.DgppId, FieldFlex.lone, new Dictionary<string, object> {{"class", "inputfields"}})
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.ExportCode, FieldFlex.lone, new Dictionary<string, object> {{"class", "inputfields"}})
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.CalculationMethod, FieldFlex.lone, elementStyle, EnumResources.ResourceManager)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.BindingObjectType, FieldFlex.lone, elementStyle, EnumResources.ResourceManager)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.SalesModel, FieldFlex.lone, elementStyle, EnumResources.ResourceManager)
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.Platform, FieldFlex.lone, new LookupSettings { EntityName = EntityName.Platform, ReadOnly = Model.IsPublished })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.PositionCategory, FieldFlex.lone, new LookupSettings { EntityName = EntityName.PositionCategory, ReadOnly = Model.IsPublished })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.AdvertisementTemplate, FieldFlex.lone, new LookupSettings { EntityName = EntityName.AdvertisementTemplate, ReadOnly = Model.IsPublished })
        </div>
        <div class="row-wrapper">
            @Html.TemplateField(m => m.IsControledByAmount, FieldFlex.lone)
        </div>
    </div>
}